{"version":3,"sources":["searchControl.tsx","searchCollection.tsx","instructionControl.tsx","Controls/instructionSummaryControl.tsx","Services/itinerary.ts","Services/ItineraryService.ts","Services/ItineraryCollectionService.ts","displayItineraries.tsx","index.tsx"],"names":["_callee","query","rest","response","regenerator_default","a","wrap","_context","prev","next","console","log","rm","get","sent","abrupt","result","resourceSets","resources","stop","SearchControl","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","inputElement","handleKeyDown","event","key","preventDefault","stopPropagation","blur","state","SearchQuery","setState","SearchResultVisible","handleSearchChanged","bind","assertThisInitialized","handleSearchBlur","searchResult","coords","Lat","Long","SearchResult","Coords","inherits","createClass","value","focus","_this2","LastQuery","target","getBingMapsResponse","then","i","JSON","stringify","undefined","name","point","coordinates","noticedChange","Submitted","searchResultsChanged","_this3","react","type","readOnly","onChange","onBlur","onKeyDown","ref","input","React","SearchCollection","handleSearchResultChanged","SearchResults","e","push","handleSearchCollectionChanged","blankitem","searchControl_SearchControl","items","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","err","return","InstructionControl","apply","arguments","instructionRenders","instructions","map","place","endtime","duration","itineraryItem","location","latitude","longitude","endTime","startTime","instructionType","durationMinutes","InstructionSummaryControl","objectSpread","collapsed","calculateState","totalHours","Math","floor","instructionSet","totalMinutes","totalDistance","distance","calc","fullSummary","concat","toFixed","Collapsible_default","trigger","instructionControl_InstructionControl","dwellTime","agentItinerary","agent","calcdistance","calcMinutes","sum","length","dateDiff","Date","minutes","ItinineraryResponse","agentItineraries","ItineraryRequest","agents","itineraryItems","ItineraryService","_getItinerary","asyncToGenerator","mark","getItineraryRequest","searchResults","sr","request","resolveWithFullResponse","json","shifts","endLocation","startLocation","_x","ItineraryCollectionService","itinerary","_getItineraries","getItinerariesRequest","_itinerary","Array","getItinerary","t0","finish","itineraries","DisplayItineraries","itineraryCollection","handleDestinationChanged","DwellTime","handleDwellTimeChanged","responseList","ItineraryResponse","instructionSummaryControl_InstructionSummaryControl","instructionSets","ItinerariesResponse","instructionList","m","searchCollection_SearchCollection","handleSingleItinerarySearch","Destination","getItineraries","rootElement","document","getElementById","render","className","displayItineraries_DisplayItineraries"],"mappings":"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","file":"static/js/main.ba744b37.chunk.js","sourcesContent":["import * as rm from \"typed-rest-client/RestClient\";\r\nimport * as React from \"react\";\r\nimport \"./styles.css\";\r\nimport { IBingMapsResponse, IResource } from \"./bing\";\r\n\r\nasync function getBingMapsResponse(query: string): Promise<IResource> {\r\n  console.log(\"running search\");\r\n  let rest = new rm.RestClient(\"rest-samples\", \"https://dev.virtualearth.net\");\r\n  let response: rm.IRestResponse<IBingMapsResponse> = await rest.get<\r\n    IBingMapsResponse\r\n  >(\r\n    \"/REST/v1/Locations?q=\" +\r\n      query +\r\n      \"&key=ArLJodQ7fEaQ2dfy3lIHWJrJILC35_Qj0EpT8TCy3ls96pl6sqCdlu18bo8j_tbM\"\r\n  );\r\n  // console.log(\"the response:\" + JSON.stringify(response));\r\n  return response.result!.resourceSets[0].resources[0];\r\n}\r\n\r\ninterface ISearchState {\r\n  SearchQuery: string;\r\n  SearchResult: string;\r\n  SearchResultVisible: boolean;\r\n  Coords: ILatLong;\r\n  LastQuery?: string;\r\n  Submitted?: boolean;\r\n}\r\nexport interface ILatLong {\r\n  Lat: number;\r\n  Long: number;\r\n}\r\nexport interface ISearchResult {\r\n  SearchResult?: string;\r\n  SearchQuery: string;\r\n  Coords?: ILatLong;\r\n}\r\nexport interface ISearchControlProps {\r\n  searchResultsChanged: (arg0: ISearchResult) => void;\r\n  SearchResult: ISearchResult;\r\n}\r\nexport class SearchControl extends React.Component<\r\n  ISearchControlProps,\r\n  ISearchState\r\n> {\r\n  constructor(props: Readonly<ISearchControlProps>) {\r\n    super(props);\r\n    this.handleSearchChanged = this.handleSearchChanged.bind(this);\r\n    this.handleSearchBlur = this.handleSearchBlur.bind(this);\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    let searchResult = '';\r\n    let coords = {Lat:0, Long:0};\r\n    if(props.SearchResult){\r\n      if(props.SearchResult.SearchResult)\r\n        searchResult = props.SearchResult.SearchResult;\r\n      if(props.SearchResult.Coords)\r\n        coords = props.SearchResult.Coords;\r\n    }\r\n    this.state = {\r\n      SearchResultVisible: false,\r\n      SearchQuery: props.SearchResult ? props.SearchResult.SearchQuery : \"\",\r\n      SearchResult: searchResult,\r\n      Coords: coords\r\n    };\r\n    this.inputElement = null;\r\n  }\r\n  componentDidMount() {\r\n    this.inputElement!.focus();\r\n  }\r\n  inputElement:HTMLInputElement|null;\r\n  handleSearchChanged(event) {\r\n    this.setState({ LastQuery: this.state.SearchQuery });\r\n    console.log(\"handlesearch changed last query is \" + this.state.LastQuery);\r\n\r\n    this.setState({\r\n      SearchQuery: event.target.value,\r\n      SearchResultVisible: true\r\n    });\r\n    getBingMapsResponse(event.target.value).then(i => {\r\n\r\n      console.log(\"last query is \" + this.state.LastQuery);\r\n      console.log(\"maps Response: \" + JSON.stringify(i));\r\n      if(i===undefined)\r\n        return;\r\n      this.setState({\r\n        SearchResult: i.name,\r\n        Coords: { Lat: i.point.coordinates[0], Long: i.point.coordinates[1] }\r\n      });\r\n    });\r\n  }\r\n  noticedChange(): boolean {\r\n    console.log(\"last query is \" + this.state.LastQuery);\r\n    console.log(\"search query is \" + this.state.SearchQuery);\r\n    console.log(\"search result is \" + this.state.SearchResult);\r\n    if (this.state.LastQuery !== this.state.SearchQuery) {\r\n      this.setState({ LastQuery: this.state.SearchQuery });\r\n\r\n      console.log(\"noticed change to \" + this.state.LastQuery);\r\n      return true;\r\n    } else {\r\n      console.log(\"noticed no change\");\r\n      return false;\r\n    }\r\n  }\r\n\r\n  handleSearchBlur(event) {\r\n    if (!this.noticedChange()) return;\r\n    let searchResult =\r\n      this.state.SearchQuery === \"\" ? \"\" : this.state.SearchResult;\r\n    this.setState({\r\n      SearchQuery: searchResult,\r\n      SearchResultVisible: false\r\n    });\r\n    this.setState({ LastQuery: searchResult });\r\n    if (searchResult === \"\") return;\r\n    this.setState({\r\n      Submitted: true\r\n    });\r\n    this.props.searchResultsChanged({\r\n      SearchResult: searchResult,\r\n      Coords: this.state.Coords,\r\n      SearchQuery: this.state.SearchQuery\r\n    });\r\n  }\r\n  handleKeyDown = (event: React.KeyboardEvent<HTMLDivElement>): void => {\r\n    // 'keypress' event misbehaves on mobile so we track 'Enter' key via 'keydown' event\r\n    if (event.key === \"Enter\") {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      this.inputElement!.blur();\r\n      //this.handleSearchBlur(null);\r\n    }\r\n    if (this.state.SearchQuery === \"\") {\r\n      this.setState({ SearchResultVisible: false });\r\n    }\r\n  };\r\n  render() {\r\n    let searchResult;\r\n    if (this.state.SearchResultVisible) {\r\n      searchResult = (\r\n        <input type=\"text\" value={this.state.SearchResult} readOnly={true} />\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          value={this.state.SearchQuery}\r\n          onChange={this.handleSearchChanged}\r\n          onBlur={this.handleSearchBlur}\r\n          onKeyDown={this.handleKeyDown}\r\n          readOnly={this.state.Submitted}\r\n          ref={input => (this.inputElement = input)}\r\n        />\r\n        <br />\r\n        {searchResult}\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { SearchControl, ISearchResult } from \"./searchControl\";\r\nimport * as React from \"react\";\r\ninterface ISearchCollectionState {\r\n  SearchResults: ISearchResult[];\r\n}\r\nexport interface ISearchCollectionProps {\r\n  handleSearchCollectionChanged: (searchResults: ISearchResult[]) => void;\r\n}\r\nexport class SearchCollection extends React.Component<\r\n  ISearchCollectionProps,\r\n  ISearchCollectionState\r\n> {\r\n  constructor(props: Readonly<ISearchCollectionProps>) {\r\n    super(props);\r\n    this.handleSearchResultChanged = this.handleSearchResultChanged.bind(this);\r\n    this.state = { SearchResults: [] };\r\n  }\r\n\r\n  handleSearchResultChanged(e: ISearchResult) {\r\n    console.log(\"handleSearchResultsChanged \");\r\n    this.state.SearchResults.push(e);\r\n    this.setState({ SearchResults: this.state.SearchResults });\r\n    this.props.handleSearchCollectionChanged(this.state.SearchResults);\r\n  }\r\n  render() {\r\n    const blankitem = (\r\n      <li>\r\n        <SearchControl\r\n          SearchResult={{\r\n            SearchQuery: \"\",\r\n            SearchResult: undefined\r\n          }}\r\n          searchResultsChanged={this.handleSearchResultChanged}\r\n        />\r\n      </li>\r\n    );\r\n    const items = [blankitem];\r\n    for (let search of this.state.SearchResults) {\r\n      items.push(blankitem);\r\n    }\r\n    return <ol>{items}</ol>;\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { instruction, instructionSet } from \"./Services/itinerary\";\r\nexport interface InstructionControlProps{\r\n    instructions:instructionSet\r\n}\r\nexport class InstructionControl extends React.Component<InstructionControlProps>{\r\n    render(){\r\n        let instructionRenders = this.props.instructions.instructions.map(\r\n            i => {\r\n              let loc;\r\n              let place;\r\n              let endtime;\r\n              let duration;\r\n              if (i.itineraryItem) {\r\n                loc =\r\n                  \"Location:(\" +\r\n                  i.itineraryItem.location.latitude +\r\n                  \", \" +\r\n                  i.itineraryItem.location.longitude +\r\n                  \")\";\r\n                if (i.itineraryItem.name) {\r\n                  place = (\r\n                    <span>\r\n                      <b>Place:</b>\r\n                      <label>{i.itineraryItem.name}</label>\r\n                    </span>\r\n                  );\r\n                }\r\n              }\r\n              if (i.endTime) {\r\n                endtime = (\r\n                  <span>\r\n                    <b>EndTime:</b> {i.endTime}\r\n                  </span>\r\n                );\r\n              }\r\n              if (i.duration) {\r\n                duration = (\r\n                  <span>\r\n                    {\" \"}\r\n                    <b>Duration:</b>\r\n                    {i.duration}\r\n                  </span>\r\n                );\r\n              }\r\n              return (\r\n                <li key={i.startTime + i.instructionType}>\r\n                  <b>Start:</b>\r\n                  {i.startTime} {place}\r\n                  <br />\r\n                  <b> Type:</b>\r\n                  {i.instructionType} {endtime} {duration}\r\n                </li>\r\n              );\r\n            }\r\n          );\r\n        return <div>Total time:{this.props.instructions.durationMinutes} minutes\r\n    <div>{instructionRenders}</div>\r\n        </div>\r\n    }\r\n}","import * as React from 'react';\r\nimport { instructionSet } from '../Services/itinerary';\r\nimport { totalmem } from 'os';\r\nimport { InstructionControl } from '../instructionControl';\r\nimport Collapsible from 'react-collapsible';\r\nexport interface IInstructionSummaryControlProps{\r\n    instructionSet:instructionSet;\r\n}\r\nexport interface IInstructionSummaryControlState{\r\n    collapsed?:boolean;\r\n    totalHours:number;\r\n    totalMinutes:number;\r\n    totalDistance:number;\r\n}\r\nexport class InstructionSummaryControl extends React.Component<IInstructionSummaryControlProps, IInstructionSummaryControlState>{\r\n    constructor(props){\r\n        super(props);\r\n        let collapsed ={collapsed:true};\r\n \r\n        this.state = {...collapsed, ...this.calculateState()};\r\n    }\r\n    calculateState(){\r\n        let calc = {totalHours:Math.floor(this.props.instructionSet.durationMinutes/60), \r\n            totalMinutes:this.props.instructionSet.durationMinutes%60, totalDistance:this.props.instructionSet.distance};\r\n        return calc;\r\n    }\r\n    componentDidUpdate(){\r\n        let calc = this.calculateState();\r\n            if(this.state.totalDistance!=calc.totalDistance || this.state.totalHours!=calc.totalHours || this.state.totalMinutes!=calc.totalMinutes){\r\n                this.setState(calc);        \r\n            }\r\n        }\r\n    render(){\r\n        let fullSummary = `Total Time:${this.state.totalHours} hrs ${this.state.totalMinutes.toFixed()} min Total Distance:${this.props.instructionSet.distance.toFixed(1)} mi`;\r\n        return <Collapsible trigger={fullSummary}>\r\n            <InstructionControl instructions={this.props.instructionSet}/>\r\n        </Collapsible>;\r\n    }\r\n}","import { ISearchResult, ILatLong } from \"../searchControl\";\r\nimport dateDiff from 'date-diff'; \r\nimport { setupMaster } from \"cluster\";\r\nexport interface location {\r\n  latitude: number;\r\n  longitude: number;\r\n}\r\nexport interface shift {\r\n  startTime: string;\r\n  endTime: string;\r\n  startLocation: location;\r\n  endLocation: location;\r\n}\r\nexport interface IitineraryItem {\r\n  name: string;\r\n  dwellTime: string;\r\n  location: location;\r\n}\r\nexport class itineraryItem implements IitineraryItem {\r\n  constructor(\r\n    public name: string,\r\n    public dwellTime: string,\r\n    public location: location\r\n  ) {}\r\n}\r\nexport interface agent {\r\n  name: string;\r\n  shifts: shift[];\r\n}\r\nexport interface IItineraryRequest {\r\n  agents: agent[];\r\n  itineraryItems: IitineraryItem[];\r\n}\r\nexport interface route {\r\n  startLocation: Location;\r\n  endLocatrion: Location;\r\n  startTime: string;\r\n  endTime: string;\r\n  totalTravelDistance: number;\r\n  totalTravelTime: string;\r\n  wayPoints: Location[];\r\n}\r\nexport interface instruction {\r\n  instructionType: string;\r\n  distance: number;\r\n  itineraryItem: IitineraryItem;\r\n  startTime: string;\r\n  endTime: string;\r\n  duration: string;\r\n}\r\nexport class instructionSet{\r\n  constructor(agentItinerary:agentItinerary){\r\n    this.instructions = agentItinerary.instructions;\r\n    this.agent = agentItinerary.agent;\r\n    this.distance = this.calcdistance();\r\n    this.durationMinutes = this.calcMinutes();\r\n  }\r\n  agent:agent;\r\n  instructions:instruction[];\r\n  distance:number;\r\n  durationMinutes:number;\r\n  private calcdistance(){\r\n    let sum =0;\r\n    for(let i = 0; i<this.instructions.length;i++){\r\n      if(this.instructions[i].distance)\r\n        {\r\n          sum+=this.instructions[i].distance;\r\n        }\r\n    }\r\n    return sum*0.000621371;\r\n  }\r\n  private calcMinutes(){\r\n\r\n   let diff = new dateDiff(new Date(this.instructions[this.instructions.length-1].startTime), new Date(this.instructions[0].startTime));\r\n    // let minutes = dateMath.subtract(new Date(this.instructions[0].startTime), new Date(this.instructions[this.instructions.length-1].endTime), \"minutes\");\r\n    //return minutes;\r\n  return diff.minutes();\r\n  }\r\n}\r\nexport interface agentItinerary {\r\n  agent: agent;\r\n  instructions: instruction[];\r\n}\r\nexport interface resource {\r\n  agentItineraries: agentItinerary[];\r\n}\r\nexport interface resourceSet {\r\n  resources: resource[];\r\n}\r\nexport interface IItinineraryResponse {\r\n  resourceSets: resourceSet[];\r\n  instructionSets:instructionSet[];\r\n}\r\nexport class ItinineraryResponse implements IItinineraryResponse{\r\n  constructor(public resourceSets: resourceSet[]){\r\n\r\n  }\r\n  get instructionSets():instructionSet[]{\r\n    return this.resourceSets[0].resources[0].agentItineraries.map(i=> new instructionSet(i));\r\n  }\r\n}\r\nexport class ItineraryRequest implements IItineraryRequest {\r\n  constructor(\r\n    public agents: agent[],\r\n    public itineraryItems: IitineraryItem[]\r\n  ) {}\r\n}\r\nexport interface getItineraryRequest {\r\n  searchResults: ISearchResult[];\r\n  startLocation: ILatLong;\r\n  endLocation: ILatLong;\r\n  dwellTime: number;\r\n}\r\nexport interface IItineraryService{\r\n  getItinerary(\r\n    getItineraryRequest: getItineraryRequest\r\n  ): Promise<IItinineraryResponse>;\r\n}\r\nexport interface ItinerariesRequest {\r\n  searchResults: ISearchResult[];\r\n  endLocation: ILatLong;\r\n  dwellTime: number;\r\n}\r\nexport interface ItinerariesResponse {\r\n  itineraries:IItinineraryResponse[];\r\n}\r\n","import * as request from \"request-promise\";\r\nimport { IItineraryService, getItineraryRequest, IItinineraryResponse, itineraryItem, ItineraryRequest, ItinineraryResponse } from \"./itinerary\";\r\nexport class ItineraryService implements IItineraryService {\r\n  async getItinerary(getItineraryRequest: getItineraryRequest): Promise<IItinineraryResponse> {\r\n    var itineraryItems = getItineraryRequest.searchResults.map(sr => new itineraryItem(sr.SearchResult!, \"00:\" + getItineraryRequest.dwellTime + \":00\", {\r\n      latitude: sr.Coords!.Lat,\r\n      longitude: sr.Coords!.Long\r\n    }));\r\n    var result = await request.post(\"https://dev.virtualearth.net/REST/V1/Routes/OptimizeItinerary?key=ArLJodQ7fEaQ2dfy3lIHWJrJILC35_Qj0EpT8TCy3ls96pl6sqCdlu18bo8j_tbM\", {\r\n      resolveWithFullResponse: false,\r\n      json: new ItineraryRequest([\r\n        {\r\n          name: \"Kayode\",\r\n          shifts: [\r\n            {\r\n              startTime: \"2019-11-16T08:00:00\",\r\n              endTime: \"2019-11-16T18:00:00\",\r\n              endLocation: {\r\n                latitude: getItineraryRequest.endLocation.Lat,\r\n                longitude: getItineraryRequest.endLocation.Long\r\n              },\r\n              startLocation: {\r\n                latitude: getItineraryRequest.startLocation.Lat,\r\n                longitude: getItineraryRequest.startLocation.Long\r\n              }\r\n            }\r\n          ]\r\n        }\r\n      ], itineraryItems)\r\n    });\r\n    return new ItinineraryResponse((<IItinineraryResponse>result).resourceSets);\r\n  }\r\n}\r\n","import { IItineraryService, ItinerariesRequest, ItinerariesResponse, IItinineraryResponse } from \"./itinerary\";\r\nexport interface IItineraryCollectionService{\r\n  getItineraries(getItinerariesRequest: ItinerariesRequest): Promise<ItinerariesResponse>;\r\n} \r\nexport class ItineraryCollectionService implements IItineraryCollectionService{\r\n  constructor(private itinerary: IItineraryService) {\r\n  }\r\n  async getItineraries(getItinerariesRequest: ItinerariesRequest): Promise<ItinerariesResponse> {\r\n    let response = new Array<IItinineraryResponse>();\r\n    for (let result of getItinerariesRequest.searchResults) {\r\n      let itinerary = await this.itinerary.getItinerary({\r\n        startLocation: result.Coords!, searchResults: getItinerariesRequest.searchResults,\r\n        dwellTime: getItinerariesRequest.dwellTime, endLocation: getItinerariesRequest.endLocation\r\n      });\r\n      response.push(itinerary);\r\n    }\r\n    return { itineraries: response };\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { SearchCollection } from \"./searchCollection\";\r\nimport { ISearchResult } from \"./searchControl\";\r\nimport { IItinineraryResponse, instructionSet, IItineraryService, ItinerariesResponse } from \"./Services/itinerary\";\r\nimport { SearchControl } from \"./searchControl\";\r\nimport { InstructionControl } from \"./instructionControl\";\r\nimport { InstructionSummaryControl } from \"./Controls/instructionSummaryControl\";\r\nimport { ItineraryService } from \"./Services/ItineraryService\";\r\nimport { ItineraryCollectionService } from \"./Services/ItineraryCollectionService\";\r\ninterface IDisplayItinerariesState {\r\n  SearchResults?: ISearchResult[];\r\n  Destination?: ISearchResult;\r\n  ItineraryResponse?: IItinineraryResponse;\r\n  ItinerariesResponse?:ItinerariesResponse; \r\n  DwellTime?: number;\r\n}\r\nexport class DisplayItineraries extends React.Component<\r\n  {},\r\n  IDisplayItinerariesState\r\n> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.itinerary = new ItineraryService();\r\n    this.itineraryCollection = new ItineraryCollectionService(this.itinerary);\r\n    this.handleDestinationChanged = this.handleDestinationChanged.bind(this);\r\n    this.state = { DwellTime: 15 };\r\n    this.handleDwellTimeChanged = this.handleDwellTimeChanged.bind(this);\r\n  }\r\n  itineraryCollection: ItineraryCollectionService;\r\n  itinerary: IItineraryService;\r\n  render() {\r\n    let responseList;\r\n    if (\r\n      this.state &&\r\n      this.state.ItineraryResponse &&\r\n      this.state.ItineraryResponse.resourceSets\r\n    ){\r\n      //TODO:Break this out into it's own control\r\n      responseList  = <InstructionSummaryControl instructionSet=\r\n        {this.state.ItineraryResponse.instructionSets[0]}/>;\r\n    }\r\n    else if (\r\n      this.state &&\r\n      this.state.ItinerariesResponse\r\n    ){\r\n      //TODO:Break this out into it's own control\r\n      let instructionList  = this.state.ItinerariesResponse.itineraries.map(m=>\r\n     <li><InstructionSummaryControl instructionSet = {m.instructionSets[0]}/></li>);\r\n      responseList = <ol>{instructionList}</ol>;\r\n    }\r\n    return (\r\n      <div>\r\n        <div>\r\n          Enter destination:\r\n          <SearchControl\r\n            SearchResult={{\r\n              SearchQuery: \"\",\r\n              SearchResult: undefined\r\n            }}\r\n            searchResultsChanged={this.handleDestinationChanged}\r\n          />\r\n        </div>\r\n        <div>\r\n          Enter dwell time:\r\n          <br />\r\n          <input\r\n            value={this.state.DwellTime}\r\n            onChange={this.handleDwellTimeChanged}\r\n          />\r\n        </div>\r\n        <SearchCollection\r\n          handleSearchCollectionChanged={this.handleSingleItinerarySearch}\r\n        />\r\n        <h1>Itineraries:</h1>\r\n        <ol>{responseList}</ol>\r\n      </div>\r\n    );\r\n  }\r\n  handleSingleItinerarySearch(searchResults:ISearchResult[]){\r\n    this.itinerary\r\n              .getItinerary({\r\n                dwellTime: this.state.DwellTime!,\r\n                searchResults: searchResults,\r\n                startLocation: searchResults[0].Coords!,\r\n                endLocation: this.state.Destination!.Coords!\r\n              })\r\n              .then((i: IItinineraryResponse) => {\r\n                this.setState({ ItineraryResponse: i });\r\n              });\r\n            }\r\n  handleMultipleItinerarySearch(searchResults:ISearchResult[]){\r\n    this.itineraryCollection.getItineraries({\r\n      dwellTime: this.state.DwellTime!,\r\n      searchResults: searchResults,\r\n      endLocation: this.state.Destination!.Coords!\r\n    }).then((i: ItinerariesResponse) => {\r\n      this.setState({ ItinerariesResponse: i });\r\n    })\r\n  }\r\n  handleDestinationChanged(e: ISearchResult) {\r\n    console.log(\"handle destination changed:\" + JSON.stringify(e));\r\n    this.setState({ Destination: e });\r\n  }\r\n  handleDwellTimeChanged(event) {\r\n    this.setState({ DwellTime: event.target.value });\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { render } from \"react-dom\";\r\n//import { SearchControl } from \"./searchControl\";\r\nimport { SearchCollection } from \"./searchCollection\";\r\nimport { MapsControl } from \"./mapsContol\";\r\nimport { ISearchResult } from \"./searchControl\";\r\nimport { DisplayItineraries } from \"./displayItineraries\";\r\n\r\nfunction App() {\r\n  return (\r\n    \r\n    <div className=\"App\">\r\n      <h1>Hello CodeSandbox Test</h1>\r\n      <h2>Enter locations</h2>\r\n      \r\n    <DisplayItineraries/>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nrender(<App />, rootElement);\r\n"],"sourceRoot":""}