{"version":3,"sources":["Controls/enterLocationControl.tsx","Controls/locationRiderControl.tsx","Controls/locationRiderCollectionControl.tsx","Controls/itineraryInstructionsControl.tsx","Controls/instructionSummaryControl.tsx","Services/itinerary.ts","Services/ItineraryService.ts","Services/ItineraryCollectionService.ts","Controls/itinerariesControl.tsx","Controls/LandingPageControl.tsx","index.tsx"],"names":["_callee","query","rest","response","regenerator_default","a","wrap","_context","prev","next","console","log","rm","get","sent","abrupt","result","resourceSets","resources","stop","SearchParam","SearchResult","Riders","Coords","StartTime","EndTime","Object","classCallCheck","this","EnterLocationControl","_React$Component","props","_this","possibleConstructorReturn","getPrototypeOf","call","inputElement","handleKeyDown","event","key","preventDefault","stopPropagation","blur","state","SearchQuery","setState","SearchResultVisible","handleSearchChanged","bind","assertThisInitialized","handleSearchBlur","searchResult","coords","Lat","Long","inherits","createClass","value","focus","_this2","LastQuery","target","getBingMapsResponse","then","i","JSON","stringify","undefined","name","point","coordinates","noticedChange","Submitted","searchResultsChanged","_this3","react","type","readOnly","onChange","onBlur","onKeyDown","ref","input","React","LocationRiderControl","handleRidersChanged","handleAddLocationClicked","handleSearchResultChanged","NumRiders","SubmitEnabled","e","resetSubmitEnabled","submitLocationRider","enterLocationControl_EnterLocationControl","style","display","className","onClick","disabled","LocationRiderCollectionControl","LocationRiders","Array","handleLocationRiderChanged","handleSubmitRider","locationRider","locationRiders","push","handleLocationRidersChanged","items","locationRiderControl_LocationRiderControl","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","err","return","ItineraryInstructionsControl","apply","arguments","date","Date","fixPM","toLocaleDateString","toLocaleTimeString","includes","replace","instructionRenders","linq","condensedInstructions","toArray","map","quantity","agent","location","arrive","leave","miles","formatDate","startTime","formatTime","endTime","passengers","toFixed","InstructionSummaryControl","objectSpread","collapsed","calculateState","startingPoint","totalHours","Math","floor","condensedInstructionSet","durationMinutes","totalMinutes","totalDistance","totalMiles","calc","citiesMissed","missedCities","length","substr","fullSummary","concat","numAgents","Collapsible_default","trigger","itineraryInstructionsControl_ItineraryInstructionsControl","dateDiff","require","itineraryItem","dwellTime","openingTime","closingTime","startingTime","endLocationName","agentNames","Set","add","size","instructionSet","agentItinerary","instructions","distance","calcdistance","calcMinutes","adjustTimeFormat","sum","instruction","minutes","condensed","mileCount","first","index","visit","instructionType","arrival","ItinineraryResponse","destinationName","instructionSets","citiesVisited","Enumerable","agentItineraries","where","instructionsSetsLinq","orderedInstructions","selectMany","orderBy","distinct","unscheduledItems","select","max","dt","getTime","forEach","lastInstruction","diff","addmin","add_minutes","dateformat","recalculateDuration","ItineraryRequest","agents","itineraryItems","ItineraryService","semaphore","Semaphore","_getItinerary","asyncToGenerator","mark","_callee2","getItineraryRequest","maxAgents","agentCount","release","itineraryResponse","callbackUrl","callbackTimeout","promiseGetResponse","_context2","searchParams","sr","latitude","longitude","capacity","busCapacity","shifts","endLocation","startLocation","acquire","request","resolveWithFullResponse","json","callbackInSeconds","Promise","resolve","reject","wait","onTimeout","_ref","parse","setTimeout","clearTimeout","finally","_x","ItineraryCollectionService","itinerary","_getItineraries","getItinerariesRequest","_itinerary","responses","keys","responsesFiltered","_i","_responses","_response","returnedValue","minBuses","maxBuses","searchResults","getItinerary","t0","finish","all","m","r","has","itineraries","orderByDescending","thenBy","ItinerariesControl","endOfToday","dateMath","ninePm","subtractDay","Arrivaltime","handleArrivalTimeChanged","ItinerariesResponse","responseList","instructionList","instructionSummaryControl_InstructionSummaryControl","LandingPageControl","itineraryCollection","searchResultHashmap","handleDestinationChanged","DwellTime","initializeArrivalTime","handleDwellTimeChanged","handleMultipleItinerarySearch","handleSearchItineraries","handleReadjustForArrival","entry_default","locationRiderCollectionControl_LocationRiderCollectionControl","itinerariesControl_ItinerariesControl","from","val","SearchResults","research","existingDuration","duration","toString","it","readjustForArrival","_this4","skipReadjust","getItineraries","Destination","is","handleReadjustForArrivalBySubtractDuration","rootElement","document","getElementById","render","LandingPageControl_LandingPageControl"],"mappings":"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","file":"static/js/main.9dd5d9f3.chunk.js","sourcesContent":["import * as rm from \"typed-rest-client/RestClient\";\nimport * as React from \"react\";\nimport \"../styles.css\";\nimport { IBingMapsResponse, IResource } from \"../bing\";\n\nasync function getBingMapsResponse(query: string): Promise<IResource> {\n  console.log(\"running search\");\n  let rest = new rm.RestClient(\"rest-samples\", \"https://dev.virtualearth.net\");\n  let response: rm.IRestResponse<IBingMapsResponse> = await rest.get<\n    IBingMapsResponse\n  >(\n    \"/REST/v1/Locations?q=\" +\n      query +\n      \"&key=ArLJodQ7fEaQ2dfy3lIHWJrJILC35_Qj0EpT8TCy3ls96pl6sqCdlu18bo8j_tbM\"\n  );\n  // console.log(\"the response:\" + JSON.stringify(response));\n  return response.result!.resourceSets[0].resources[0];\n}\n\ninterface IEnterLocationState {\n  SearchQuery?: string;\n  SearchResult: string;\n  SearchResultVisible: boolean;\n  Coords: ILatLong;\n  LastQuery?: string;\n  Submitted?: boolean;\n}\nexport interface ILatLong {\n  Lat: number;\n  Long: number;\n}\nexport interface ISearchResult {\n  SearchResult?: string;\n  SearchQuery?: string;\n  Coords?: ILatLong;\n}\nexport interface ISearchParam extends ISearchResult{\n  EndTime?:Date;\n  StartTime?:Date;\n  Riders?:number;\n}\nexport class SearchParam implements ISearchParam{\n  constructor(public SearchResult:string, public Riders:number, public Coords:ILatLong, public StartTime?:Date, public EndTime?:Date){\n\n  }\n}\nexport interface IEnterLocationControlProps {\n  searchResultsChanged: (arg0: ISearchResult) => void;\n  SearchResult: ISearchResult;\n}\nexport class EnterLocationControl extends React.Component<\n  IEnterLocationControlProps,\n  IEnterLocationState\n> {\n  constructor(props: Readonly<IEnterLocationControlProps>) {\n    super(props);\n    this.handleSearchChanged = this.handleSearchChanged.bind(this);\n    this.handleSearchBlur = this.handleSearchBlur.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    let searchResult = '';\n    let coords = {Lat:0, Long:0};\n    if(props.SearchResult){\n      if(props.SearchResult.SearchResult)\n        searchResult = props.SearchResult.SearchResult;\n      if(props.SearchResult.Coords)\n        coords = props.SearchResult.Coords;\n    }\n    this.state = {\n      SearchResultVisible: false,\n      SearchQuery: props.SearchResult ? props.SearchResult.SearchQuery : \"\",\n      SearchResult: searchResult,\n      Coords: coords\n    };\n    this.inputElement = null;\n  }\n  componentDidMount() {\n    this.inputElement!.focus();\n  }\n  inputElement:HTMLInputElement|null;\n  handleSearchChanged(event) {\n    this.setState({ LastQuery: this.state.SearchQuery });\n    console.log(\"handlesearch changed last query is \" + this.state.LastQuery);\n\n    this.setState({\n      SearchQuery: event.target.value,\n      SearchResultVisible: true\n    });\n    getBingMapsResponse(event.target.value).then(i => {\n\n      console.log(\"last query is \" + this.state.LastQuery);\n      console.log(\"maps Response: \" + JSON.stringify(i));\n      if(i===undefined)\n        return;\n      this.setState({\n        SearchResult: i.name,\n        Coords: { Lat: i.point.coordinates[0], Long: i.point.coordinates[1] }\n      });\n    });\n  }\n  noticedChange(): boolean {\n    console.log(\"last query is \" + this.state.LastQuery);\n    console.log(\"search query is \" + this.state.SearchQuery);\n    console.log(\"search result is \" + this.state.SearchResult);\n    if (this.state.LastQuery !== this.state.SearchQuery) {\n      this.setState({ LastQuery: this.state.SearchQuery });\n\n      console.log(\"noticed change to \" + this.state.LastQuery);\n      return true;\n    } else {\n      console.log(\"noticed no change\");\n      return false;\n    }\n  }\n \n  handleSearchBlur(event){\n    if (!this.noticedChange()) return;\n    let searchResult =\n      this.state.SearchQuery === \"\" ? \"\" : this.state.SearchResult;\n    this.setState({\n      SearchQuery: searchResult,\n      SearchResultVisible: false\n    });\n    this.setState({ LastQuery: searchResult });\n    if (searchResult === \"\") return;\n    this.setState({\n      Submitted: true\n    });\n    this.props.searchResultsChanged({\n      SearchResult: searchResult,\n      Coords: this.state.Coords,\n      SearchQuery: this.state.SearchQuery\n    });\n  }\n  handleKeyDown = (event: React.KeyboardEvent<HTMLDivElement>): void => {\n    // 'keypress' event misbehaves on mobile so we track 'Enter' key via 'keydown' event\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n      event.stopPropagation();\n      this.inputElement!.blur();\n      //this.handleSearchBlur(null);\n    }\n    if (this.state.SearchQuery === \"\") {\n      this.setState({ SearchResultVisible: false });\n    }\n  };\n  render() {\n    let searchResult;\n    if (this.state.SearchResultVisible) {\n      searchResult = (\n        <div>\n        <input type=\"text\" value={this.state.SearchResult} readOnly={true} />\n        <br/>\n        </div>\n        );\n    }\n    return (\n      <span>\n        <input\n          type=\"text\"\n          value={this.state.SearchQuery}\n          onChange={this.handleSearchChanged}\n          onBlur={this.handleSearchBlur}\n          onKeyDown={this.handleKeyDown}\n          readOnly={this.state.Submitted}\n          ref={input => (this.inputElement = input)}\n        />\n        {searchResult}\n        </span>\n    );\n  }\n}\n","import * as React from 'react';\nimport { EnterLocationControl, ISearchParam, ISearchResult, ILatLong } from './enterLocationControl';\nimport { ILocation } from '../bing';\nexport interface ILocationRider {\n    SearchResult?: string;\n    NumRiders?:number;\n    Coords?:ILatLong;\n  }\n  export interface ILocationRiderControlState extends ILocationRider{\n    SubmitEnabled:boolean;\n    Submitted:boolean;\n  }\n  export interface ILocationRiderControlProps {\n    handleLocationRiderChanged?: (locationRider: ILocationRider) => void;\n    submitLocationRider:(locationRider: ILocationRider)=>void;\n    NumRiders?:number;\n    SearchResult?:string;\n  }\nexport class LocationRiderControl extends React.Component< ILocationRiderControlProps,\nILocationRiderControlState>{\n  constructor(props:Readonly<ILocationRiderControlProps>){\n    super(props);\n    this.handleRidersChanged = this.handleRidersChanged.bind(this);\n    this.handleAddLocationClicked = this.handleAddLocationClicked.bind(this);\n    this.handleSearchResultChanged = this.handleSearchResultChanged.bind(this);\n    this.state = {NumRiders:props.NumRiders, SearchResult:props.SearchResult, SubmitEnabled:false, Submitted:false};\n  }\n  handleRidersChanged(e){\n    this.setState({NumRiders:e.target.value}, this.resetSubmitEnabled);\n  }\n  handleSearchResultChanged(e: ISearchResult) {\n        console.log(\"handleSearchResultsChanged \");\n        this.setState({ SearchResult: e.SearchResult, Coords:e.Coords!}, this.resetSubmitEnabled);\n      }\n  handleAddLocationClicked(){\n      this.props.submitLocationRider(this.state);\n  }\n  resetSubmitEnabled(){\n    if(this.state.NumRiders && this.state.SearchResult){\n      this.setState({SubmitEnabled:true});\n    }\n  }\n    render(){\n        return <table>\n          <td></td>\n          <td></td>\n        <tr>\n         <EnterLocationControl\n          SearchResult={{\n            SearchQuery: \"\",\n            SearchResult: this.state.SearchResult\n          }}\n          searchResultsChanged={this.handleSearchResultChanged}\n        />\n        <div style={{display:\"inline-block\"}}>\n        <label className=\"RidersLabel\"># Riders</label><input className=\"Riders\" value={this.state.NumRiders} onChange={this.handleRidersChanged}/>\n        <button className=\"AddLocation\" onClick={this.handleAddLocationClicked} disabled={!this.state.SubmitEnabled}>Add location</button>\n        </div></tr></table>\n    }\n}","import { EnterLocationControl, ISearchResult, ISearchParam } from \"./enterLocationControl\";\nimport * as React from \"react\";\nimport { LocationRiderControl, ILocationRider } from \"./locationRiderControl\";\n\nexport interface ILocationRiderCollectionControlProps{\nhandleLocationRidersChanged:(locationRiders:ILocationRider[])=>void;\n}\nexport interface ILocationRiderCollectionControlState{\n  LocationRiders:ILocationRider[];\n}\nexport class LocationRiderCollectionControl extends React.Component<ILocationRiderCollectionControlProps, ILocationRiderCollectionControlState> {\n  constructor(props: Readonly<ILocationRiderCollectionControlProps>) {\n    super(props);\n    this.state = { LocationRiders: new Array() };\n    this.handleLocationRiderChanged = this.handleLocationRiderChanged.bind(this);\n    this.handleSubmitRider = this.handleSubmitRider.bind(this);\n  }\n  \n  handleLocationRiderChanged(locationRider: ILocationRider){\n\n  }\nhandleSubmitRider(locationRider: ILocationRider){\n  var locationRiders = this.state.LocationRiders;\n  locationRiders.push(locationRider);\n  this.setState({LocationRiders:locationRiders}, ()=> this.props.handleLocationRidersChanged(this.state.LocationRiders));\n}\n  render() {\n    let blankitem = (\n      <LocationRiderControl\n      submitLocationRider={(e)=>this.handleSubmitRider(e)}\n       handleLocationRiderChanged={this.handleLocationRiderChanged}\n     />\n  );\n    const items = [blankitem];\n    for (let locationRider of this.state.LocationRiders) {\n      items.push(<LocationRiderControl NumRiders={locationRider.NumRiders} SearchResult={locationRider.SearchResult}\n        submitLocationRider={(e)=>this.handleSubmitRider(e)}\n        />);\n    }\n    return <ol>{items}</ol>;\n  }\n}\n","import * as React from \"react\";\nimport { instruction, instructionSet, condensedInstruction, condensedInstructionSet } from \"../Services/itinerary\";\nimport * as linq from \"linq\";\nexport interface InstructionControlProps{\n    condensedInstructions:condensedInstructionSet;\n}\nexport class ItineraryInstructionsControl extends React.Component<InstructionControlProps>{\n  formatDate(date:string){\n    if(!date)\n    return '';\n    return new Date(this.fixPM(date)).toLocaleDateString();\n  }\n  formatTime(date:string){\n    if(!date)\n    return '';\n    return new Date(this.fixPM(date)).toLocaleTimeString();\n  }\n  fixPM(date:string){\n    if(date.includes('P')){\n      return date.replace('P', ' ')+' PM';\n      }\n      return date;\n  }\n    render(){\n      \n        let instructionRenders = linq.from(this.props.condensedInstructions.condensedInstructions).toArray().map(\n            (i) => {\n              let loc;\n              let place;\n              let endtime;\n              let duration;\n              let quantity;\n              let agent;\n              let location;\n              let arrive;\n              let leave;\n              let miles;\n              agent = <td>{i.agent}</td>;\n              location = <td>{i.location}</td>;\n              arrive = <td>{this.formatDate(i.startTime)}&nbsp;{this.formatTime(i.startTime)}</td>;\n              leave = <td>{i.endTime ? this.formatDate(i.endTime) :''}&nbsp;{i.endTime ? this.formatTime(i.endTime) :''}</td>;\n              quantity =<td>{i.passengers}</td>;\n              miles = <td>{i.miles.toFixed(2)}</td>;\n              return <tr>{agent}{location}{arrive}{leave}{quantity}{miles}</tr>;\n            }\n          );\n        return <table>\n    <tr>\n    <th>Agent</th>\n    <th>Location</th>\n    <th>Arrive</th>\n    <th>Leave</th>\n    <th># Riders</th>\n    <th>Miles</th>\n  </tr>\n    {instructionRenders}\n    </table>\n    }\n}","import * as React from 'react';\nimport { instructionSet, condensedInstructionSet } from '../Services/itinerary';\nimport { totalmem } from 'os';\nimport { ItineraryInstructionsControl } from './itineraryInstructionsControl';\nimport Collapsible from 'react-collapsible';\nexport interface IInstructionSummaryControlProps{\n    condensedInstructionSet:condensedInstructionSet;\n}\nexport interface IInstructionSummaryControlState{\n    collapsed?:boolean;\n    totalHours:number;\n    totalMinutes:number;\n    totalDistance:number;\n    startingPoint:string;\n}\nexport class InstructionSummaryControl extends React.Component<IInstructionSummaryControlProps, IInstructionSummaryControlState>{\n    constructor(props){\n        super(props);\n        let collapsed ={collapsed:true};\n \n        this.state = {...collapsed, ...this.calculateState(), startingPoint:''};\n    }\n    calculateState(){\n        let calc = {totalHours:Math.floor(this.props.condensedInstructionSet.durationMinutes/60), \n            totalMinutes:this.props.condensedInstructionSet.durationMinutes%60, totalDistance:this.props.condensedInstructionSet.totalMiles};\n        return calc;\n    }\n    componentDidUpdate(){\n        let calc = this.calculateState();\n            if(this.state.totalDistance!=calc.totalDistance || this.state.totalHours!=calc.totalHours || this.state.totalMinutes!=calc.totalMinutes){\n                this.setState(calc);        \n            }\n        }\n    render(){\n        let citiesMissed='';\n        if(this.props.condensedInstructionSet.missedCities && this.props.condensedInstructionSet.missedCities.length>0){\n            citiesMissed=' Cities Missed:[';\n            for(let missed of this.props.condensedInstructionSet.missedCities){\n                citiesMissed+=missed+', '\n            }\n            citiesMissed.substr(0, citiesMissed.length-2);\n            citiesMissed+=']';\n        }\n        let fullSummary = `Total Time:${this.state.totalHours} hrs ${this.state.totalMinutes.toFixed()} min Total Distance:${this.props.condensedInstructionSet.totalMiles.toFixed(1)} mi #Buses:${this.props.condensedInstructionSet.numAgents}${citiesMissed}`;\n        return <Collapsible trigger={fullSummary}>\n                <ItineraryInstructionsControl condensedInstructions={this.props.condensedInstructionSet}/>\n            </Collapsible>\n    }\n}","import { ISearchResult, ILatLong, ISearchParam } from \"../Controls/enterLocationControl\";\nimport * as Enumerable from 'linq';\nimport * as addsubtractdate from 'add-subtract-date';\nimport dateformat from 'dateformat';\n\nvar dateDiff = require('date-diff');\nexport interface location {\n  latitude: number;\n  longitude: number;\n}\nexport interface shift {\n  startTime?: string;\n  endTime?: string;\n  startLocation: location;\n  endLocation: location;\n}\nexport interface IitineraryItem {\n  name: string;\n  dwellTime: string;\n  location: location;\n  quantity:Array<number>;\n}\nexport class itineraryItem implements IitineraryItem {\n  constructor(\n    public name: string,\n    public dwellTime: string,\n    public location: location,\n    public quantity:Array<number>,\n    public openingTime?:string,\n    public closingTime?:string,\n    public startingTime?:string,\n    \n  ) {}\n}\nexport interface agent {\n  name: string;\n  capacity:Array<number>;\n  shifts: shift[];\n}\nexport interface IItineraryRequest {\n  agents: agent[];\n  itineraryItems: IitineraryItem[];\n}\nexport interface route {\n  startLocation: Location;\n  endLocatrion: Location;\n  startTime: string;\n  endTime: string;\n  totalTravelDistance: number;\n  totalTravelTime: string;\n  wayPoints: Location[];\n}\nexport interface instruction {\n  instructionType: string;\n  distance: number;\n  itineraryItem: IitineraryItem;\n  startTime: string;\n  endTime: string;\n  duration: string;\n  pickupRiders:number;\n}\nexport class condensedInstructionSet{\n  public totalMiles:number=0;\n  public numAgents:number;\n  constructor(public condensedInstructions:condensedInstruction[], public  endLocationName:string, public durationMinutes:number, public missedCities?:Array<string>){\n    let agentNames = new Set<string>();\n    for(let i = 0; i<condensedInstructions.length;i++){\n      this.totalMiles+=condensedInstructions[i].miles;\n      agentNames.add(condensedInstructions[i].agent);\n    } \n    this.numAgents = agentNames.size;\n  }\n}\n/*\nexport class condensedInstructionSetCollection{\n  public \n  constructor(public condensedInstructionSets:condensedInstructionSet[]){\n   // this.condensedInstructionSets = Enumerable.from(this.condensedInstructionSets).selectMany(i=>i.condensedInstructions).orderBy(i=>i.startTime)\n  }\n}*/\nexport interface condensedInstruction{\n  agent:string;\n  startTime: string;\n  endTime?: string;\n  miles:number;\n  location:string;\n  passengers:number;\n}\nexport class instructionSet{\n  constructor(agentItinerary:agentItinerary, public endLocationName:string){\n    this.instructions = agentItinerary.instructions;\n    this.agent = agentItinerary.agent;\n    this.distance = this.calcdistance();\n    this.durationMinutes = this.calcMinutes();\n     this.instructions.map(i=> this.adjustTimeFormat(i));\n  }\n  agent:agent;\n  instructions:instruction[];\n  get startingPoint():string{\n    return this.instructions[2].itineraryItem.name;\n  }\n  distance:number;\n  durationMinutes:number;\n  private calcdistance(){\n    let sum =0;\n    for(let i = 0; i<this.instructions.length;i++){\n      if(this.instructions[i].distance)\n        {\n          sum+=this.instructions[i].distance;\n        }\n    }\n    return sum*0.000621371;\n  }\n  private adjustTimeFormat(instruction:instruction){\n    instruction.startTime = instruction.startTime.replace('P', 'T').replace('A','T');\n  }\n  private calcMinutes(){\n   let diff = new dateDiff(new Date(this.instructions[this.instructions.length-1].startTime), new Date(this.instructions[2].startTime));\n    return diff.minutes();\n  }\n  recalculateDuration(){\n  this.instructions.map(i=> this.adjustTimeFormat(i));\n   this.durationMinutes = this.calcMinutes();\n  }\n  get condensedInstructions():condensedInstruction[]{\n    let condensed = new Array<condensedInstruction>();\n    var mileCount = 0;\n    var first = true;\n    for(let index = 1; index<this.instructions.length-1;index++){\n      let visit = this.instructions[index];\n     // let travel = this.instructions[index+1];\n      if(visit.instructionType=='VisitLocation'){\n      condensed.push({agent:this.agent.name, startTime:visit.startTime, endTime:visit.endTime, location: visit.itineraryItem ? visit.itineraryItem.name : '',\n      miles:mileCount, passengers:visit.itineraryItem.quantity[0]});\n      }\n      else{\n        if(first){\n          mileCount=0;\n          first=false;\n          continue;\n        }\n      mileCount+=visit.distance*0.000621371;\n      }\n    }\n    var arrival = this.instructions[this.instructions.length-1];\n    condensed.push({agent:this.agent.name, startTime:arrival.startTime, location: this.endLocationName,\n      miles:mileCount, passengers:0})\n    return condensed;\n  }\n}\nexport interface agentItinerary {\n  agent: agent;\n  instructions: instruction[];\n}\nexport interface resource {\n  agentItineraries: agentItinerary[];\n  unscheduledItems:IitineraryItem[];\n  callbackUrl:string;\n  callbackInSeconds:number;\n}\nexport interface resourceSet {\n  resources: resource[];\n}\nexport interface IItinineraryResponse {\n  resourceSets: resourceSet[];\n  instructionSets:instructionSet[];\n  readjustForArrival(date:Date);\n  condensedInstructionSet:condensedInstructionSet;\n}\nexport class ItinineraryResponse implements IItinineraryResponse{\n  public instructionSets:instructionSet[];\n  public condensedInstructionSet:condensedInstructionSet;\n  public citiesVisited:Array<string>;\n  public citiesMissed:Array<string>;\n  constructor(public resourceSets: resourceSet[], public destinationName:string){\n    this.instructionSets = Enumerable.from(this.resourceSets[0].resources[0].agentItineraries).where(i=>i.instructions.length>3).toArray().map(i=> new instructionSet(i, destinationName));\n    var instructionsSetsLinq = Enumerable.from(this.instructionSets);\n    var orderedInstructions = instructionsSetsLinq.selectMany(i=>i.condensedInstructions).orderBy(i=>i.startTime).toArray();\n    this.citiesVisited = instructionsSetsLinq.selectMany(i=>i.condensedInstructions).selectMany(i=>i.location).distinct().toArray();\n    this.citiesMissed = Enumerable.from(this.resourceSets[0].resources[0].unscheduledItems).select(i=>i.name).toArray();\n    this.condensedInstructionSet = new condensedInstructionSet(orderedInstructions, destinationName, instructionsSetsLinq.max(i=>i.durationMinutes), this.citiesMissed);\n    \n  }\n   add_minutes(dt:Date, minutes:number):Date {\n    return new Date(dt.getTime() + minutes*60000);\n  }\n  readjustForArrival(date:Date){\n    this.instructionSets.forEach(instructionSet=>{\n      console.log(\"Readjusting for instruction set:\"+JSON.stringify(instructionSet));\n    \n    let lastInstruction = instructionSet.instructions[instructionSet.instructions.length-1]; \n    var endTime =new Date(lastInstruction.startTime);\n    console.log(\"Readjusting for end time: \"+endTime);\n    console.log(\"dateDiff:\"+dateDiff);\n    let diff:number =  new dateDiff(date, endTime).minutes()+1;\n    console.log(`Got difference between '${date}' and ${lastInstruction.startTime} as ${diff}`);\n    \n    instructionSet.instructions.forEach(instruction=>{\n       console.log(`Changing start time for instruction '${instruction.startTime}'`);\n   \n      let date = new Date(instruction.startTime);\n        console.log(`Changing start time for instruction date:'${date}'`);\n      let addmin = this.add_minutes(date, diff);\n      console.log(`Added '${diff}' minutes to ${date}:${addmin}`);\n      instruction.startTime = dateformat(addmin, 'yyyy-mm-ddThh:MM:ss');\n      \n      if(instruction.endTime){\n        date = new Date(instruction.endTime);\n        addmin = this.add_minutes(date, diff);\n       instruction.endTime = dateformat(addmin, 'yyyy-mm-ddThh:MM:ss');\n     }    \n          console.log(`Set startTime to ${instruction.startTime}`);\n    });\n    instructionSet.recalculateDuration();\n  });\n  }\n}\nexport class ItineraryRequest implements IItineraryRequest {\n  constructor(\n    public agents: agent[],\n    public itineraryItems: IitineraryItem[]\n  ) {}\n}\nexport interface getItineraryRequest {\n  searchParams: ISearchParam[];\n  startLocation: ILatLong;\n  endLocation: ILatLong;\n  dwellTime: number;\n  startTime?:Date;\n  endTime?:Date;\n  numAgents:number;\n  endLocationName:string;\n  busCapacity:number;\n}\nexport interface IItineraryService{\n  getItinerary(\n    getItineraryRequest: getItineraryRequest\n  ): Promise<IItinineraryResponse>;\n}\nexport interface ItinerariesRequest {\n  searchResults: ISearchParam[];\n  endLocation: ILatLong;\n  endLocationName:string;\n  dwellTime: number;\n  minBuses:number;\n  maxBuses:number;\n  busCapacity:number;\n}\nexport interface ItinerariesResponse {\n  itineraries:IItinineraryResponse[];\n}\n","import * as request from \"request-promise\";\nimport dateformat from 'dateformat';\nimport {Semaphore} from 'await-semaphore';\nimport { IItineraryService, getItineraryRequest, IItinineraryResponse, itineraryItem, ItineraryRequest, ItinineraryResponse } from \"./itinerary\";\nexport class ItineraryService implements IItineraryService {\n  semaphore = new Semaphore(7);\n  constructor(private key:string='ArLJodQ7fEaQ2dfy3lIHWJrJILC35_Qj0EpT8TCy3ls96pl6sqCdlu18bo8j_tbM'){\n    \n  }\n  async getItinerary(getItineraryRequest: getItineraryRequest): Promise<IItinineraryResponse> {\n    var itineraryItems = getItineraryRequest.searchParams.map(sr => new itineraryItem(sr.SearchResult!, \"00:\" + getItineraryRequest.dwellTime + \":00\", {\n      latitude: sr.Coords!.Lat,\n      longitude: sr.Coords!.Long, \n    },[sr.Riders!]));\n    /*itineraryItems.push(new itineraryItem('Destination', \"00:15:00\", {\n      latitude: getItineraryRequest.endLocation.Lat,\n      longitude: getItineraryRequest.endLocation.Long\n    }, '2019-11-16T16:00:00', '2019-11-16T18:00:00'));*/\n    console.log(\"Searching for start time:\"+getItineraryRequest.startTime);\n    let startTime = getItineraryRequest.startTime==undefined? \"2019-11-16T08:00:00\" : dateformat(getItineraryRequest.startTime, 'yyyy-mm-ddThh:MM:ss');\n    let endTime = getItineraryRequest.endTime==undefined?\"2019-11-16T18:00:00\" : dateformat(getItineraryRequest.endTime, 'yyyy-mm-ddThh:MM:ss');\n    startTime = startTime.replace('P', 'T').replace('A','T');\n    endTime = endTime.replace('P', 'T').replace('A','T');\n    var agents = new Array();\n    var maxAgents = getItineraryRequest.numAgents;\n    //TODO:Change for biz version\n    if(getItineraryRequest.numAgents>3){\n      maxAgents = 3;\n    }\n    for(var agentCount=0; agentCount<maxAgents; agentCount++){\n      agents.push({\n          capacity:[getItineraryRequest.busCapacity],\n          name: 'Agent_'+agentCount,\n          shifts: [\n            {\n              startTime: startTime,\n              endTime: endTime,\n              endLocation: {\n                latitude: getItineraryRequest.endLocation.Lat,\n                longitude: getItineraryRequest.endLocation.Long\n              },\n              startLocation: {\n                latitude: getItineraryRequest.startLocation.Lat,\n                longitude: getItineraryRequest.startLocation.Long\n              }\n            }\n          ]\n        });\n    }\n    \n   /* var result = await request.post(\"https://dev.virtualearth.net/REST/V1/Routes/OptimizeItinerary?key=\"+this.key, {\n      resolveWithFullResponse: false,\n      json: new ItineraryRequest(agents, itineraryItems)\n    });*/\n    var release = await this.semaphore.acquire();\n     var result = await request.post(\"https://dev.virtualearth.net/REST/V1/Routes/OptimizeItineraryAsync?key=\"+this.key, {\n      resolveWithFullResponse: false,\n      json: new ItineraryRequest(agents, itineraryItems)\n    });\n    var itineraryResponse = (<IItinineraryResponse>result);\n     console.log(JSON.stringify(itineraryResponse));\n    \n    var callbackUrl = itineraryResponse.resourceSets[0].resources[0].callbackUrl;\n    var callbackTimeout = itineraryResponse.resourceSets[0].resources[0].callbackInSeconds;\n    if(callbackUrl){\n    let promiseGetResponse = new Promise<IItinineraryResponse>((resolve, reject) => {\n    let wait;\n    var onTimeout =async () => {\n    console.log('invoking callback url');\n    \n      result = await request.get(callbackUrl);\n      itineraryResponse = (<IItinineraryResponse>JSON.parse(result));\n     callbackUrl = itineraryResponse.resourceSets[0].resources[0].callbackUrl;\n      console.log(JSON.stringify(itineraryResponse));\n      if(!callbackUrl)\n        {\n          clearTimeout(wait);\n          resolve(itineraryResponse);\n        }\n        else{\n          wait = setTimeout(onTimeout, callbackTimeout*1000);\n        }\n    };\n    wait = setTimeout(onTimeout, callbackTimeout*1000);\n    });\n     return promiseGetResponse.then(i=> {\n       return new ItinineraryResponse((<IItinineraryResponse>JSON.parse(result)).resourceSets, getItineraryRequest.endLocationName);\n     }).finally(()=> release());\n    }\n   release();\n    return new ItinineraryResponse((<IItinineraryResponse>result).resourceSets, getItineraryRequest.endLocationName);\n  }\n}\n","import * as Enumerable from 'linq';\nimport { IItineraryService, ItinerariesRequest, ItinerariesResponse, IItinineraryResponse } from \"./itinerary\";\nexport interface IItineraryCollectionService{\n  getItineraries(getItinerariesRequest: ItinerariesRequest): Promise<ItinerariesResponse>;\n} \nexport class ItineraryCollectionService implements IItineraryCollectionService{\n  constructor(private itinerary: IItineraryService) {\n  }\n  async getItineraries(getItinerariesRequest: ItinerariesRequest): Promise<ItinerariesResponse> {\n    let response = new Array<Promise<IItinineraryResponse>>();\n    for(var numAgents = getItinerariesRequest.minBuses; numAgents<= getItinerariesRequest.maxBuses; numAgents++){\n    for (let result of getItinerariesRequest.searchResults) {\n      let startDate =new Date(2019,11,17,10,0);\n      let endDate =new Date(2019,11,18,22,0);\n      \n      let itinerary = this.itinerary.getItinerary({numAgents:numAgents,endLocationName:getItinerariesRequest.endLocationName,\n        startLocation: result.Coords!, searchParams: getItinerariesRequest.searchResults,\n        dwellTime: getItinerariesRequest.dwellTime, endLocation: getItinerariesRequest.endLocation,\n        startTime:result.StartTime, endTime:result.EndTime,busCapacity:getItinerariesRequest.busCapacity\n      });\n      response.push(itinerary);\n    }\n    }\n    let responses = new Array<IItinineraryResponse>();\n    await Promise.all(response.map(m=>m.then(r=>responses.push(r))));\n    let keys = new Set<string>();\n    let responsesFiltered = new Array<IItinineraryResponse>();\n    for(let response of responses){\n      let key = response.condensedInstructionSet.durationMinutes+'_'+response.condensedInstructionSet.totalMiles+'_'+response.condensedInstructionSet.condensedInstructions.length;\n      if(!keys.has(key)){\n        responsesFiltered.push(response);\n        keys.add(key);\n      }\n    }\n    \n    let returnedValue = {\n      itineraries: Enumerable.from(responsesFiltered).\n        where(i=>i.instructionSets!==undefined)\n        .orderByDescending(i=>i.instructionSets.length)\n        .thenBy(i=>Enumerable.from( i.instructionSets).max(m=>m.durationMinutes)).select(i=>i).toArray()\n  };\n  return returnedValue;\n}\n}\n","import * as React from \"react\";\nimport DateTimePicker from \"react-datetime-picker\";\nimport * as dateMath from 'date-arithmetic';\nimport {ItinerariesResponse} from '../Services/itinerary';\nimport { InstructionSummaryControl } from \"./instructionSummaryControl\";\ninterface ItinerariesControlState{\n    Arrivaltime:Date;\n}\nexport interface ItinerariesControlProps{\n    ItinerariesResponse?:ItinerariesResponse;\n}\nexport class ItinerariesControl extends React.Component<ItinerariesControlProps,ItinerariesControlState>{\n    constructor(props){\n        super(props);\n        let endOfToday = dateMath.endOf(new Date(),'day');\n        let ninePm = dateMath.add(endOfToday, 20, \"hours\");\n        let subtractDay = dateMath.add(ninePm, -1, \"day\");\n     \n        this.state = {  Arrivaltime: dateMath.add(subtractDay, 1, \"minutes\")};\n        this.handleArrivalTimeChanged = this.handleArrivalTimeChanged.bind(this);\n     }\n    handleArrivalTimeChanged(date:Date){\n        this.setState({Arrivaltime:date});\n      }\nrender(){\n    if(!this.props.ItinerariesResponse)\n        return <div/>\n        let responseList;\n        let instructionList  = this.props.ItinerariesResponse.itineraries.map(m=>\n         <li> <InstructionSummaryControl condensedInstructionSet = {m.condensedInstructionSet}/></li>);\n         responseList = <ol>{instructionList}</ol>;\n    return <div>\n        <h1>Itineraries:</h1>\n        <ol>{responseList}</ol>\n  </div>\n}\n}","import * as React from \"react\";\nimport { LocationRiderCollectionControl } from \"./locationRiderCollectionControl\";\nimport { ISearchResult, ISearchParam, SearchParam } from \"./enterLocationControl\";\nimport { IItinineraryResponse, instructionSet, IItineraryService, ItinerariesResponse } from \"../Services/itinerary\";\nimport { EnterLocationControl } from \"./enterLocationControl\";\nimport { ItineraryInstructionsControl } from \"./itineraryInstructionsControl\";\nimport { InstructionSummaryControl } from \"./instructionSummaryControl\";\nimport { ItineraryService } from \"../Services/ItineraryService\";\nimport { ItineraryCollectionService } from \"../Services/ItineraryCollectionService\";\nimport DateTimePicker from \"react-datetime-picker\";\nimport * as dateMath from 'date-arithmetic';\nimport { ItinerariesControl } from \"./itinerariesControl\";\nimport { ILocationRider } from \"./locationRiderControl\";\nimport Enumerable from \"linq\";\ninterface IDisplayItinerariesState {\n  SearchResults?: ISearchParam[];\n  Destination?: ISearchResult;\n  ItineraryResponse?: IItinineraryResponse;\n  ItinerariesResponse?:ItinerariesResponse; \n  DwellTime?: number;\n  Arrivaltime:Date;\n}\nexport class LandingPageControl extends React.Component<\n  {},\n  IDisplayItinerariesState\n> {\n  constructor(props) {\n    super(props);\n    this.itinerary = new ItineraryService();\n    this.itineraryCollection = new ItineraryCollectionService(this.itinerary);\n    this.handleDestinationChanged = this.handleDestinationChanged.bind(this);\n\n    this.state = { DwellTime: 15, Arrivaltime: this.initializeArrivalTime()};\n    this.handleDwellTimeChanged = this.handleDwellTimeChanged.bind(this);\n    //this.handleSingleItinerarySearch = this.handleSingleItinerarySearch.bind(this);\n    this.handleMultipleItinerarySearch = this.handleMultipleItinerarySearch.bind(this);\n    this.handleSearchItineraries = this.handleSearchItineraries.bind(this);\n    this.handleReadjustForArrival = this.handleReadjustForArrival.bind(this);\n    this.handleArrivalTimeChanged = this.handleArrivalTimeChanged.bind(this);\n  }\n  initializeArrivalTime(){\n    let endOfToday = dateMath.endOf(new Date(),'day');\n    let ninePm = dateMath.add(endOfToday, 20, \"hours\");\n    let subtractDay = dateMath.add(ninePm, -1, \"day\");\n    return dateMath.add(subtractDay, 1, \"minutes\");\n  }\n  itineraryCollection: ItineraryCollectionService;\n  itinerary: IItineraryService;\n  render() {\n    let responseList;\n    /*if (\n      this.state &&\n      this.state.ItineraryResponse &&\n      this.state.ItineraryResponse.resourceSets\n    ){\n      //TODO:Break this out into it's own control\n      responseList  = <InstructionSummaryControl instructionSet=\n        {this.state.ItineraryResponse.instructionSets[0]}/>;\n    }\n    else */if (\n      this.state &&\n      this.state.ItinerariesResponse\n    ){\n      //TODO:Break this out into it's own control\n      let instructionList  = this.state.ItinerariesResponse.itineraries.map(m=>\n     <li><InstructionSummaryControl condensedInstructionSet ={m.condensedInstructionSet}/></li>);\n      responseList = <ol>{instructionList}</ol>;\n    }\n    return (\n      <div>\n        <div>\n          Enter destination:\n          <div>\n          <EnterLocationControl\n            SearchResult={{\n              SearchQuery: \"\",\n              SearchResult: undefined\n            }}\n            searchResultsChanged={this.handleDestinationChanged}\n          /></div>\n        </div>\n        <div>\n          Enter dwell time:\n          <br />\n          <input\n            value={this.state.DwellTime}\n            onChange={this.handleDwellTimeChanged}\n          />\n        </div>\n         Enter arrival time:\n    <br />\n    <DateTimePicker\n      value={this.state.Arrivaltime}\n      onChange={this.handleArrivalTimeChanged}\n    />\n        <LocationRiderCollectionControl handleLocationRidersChanged={(e)=>this.handleLocationRidersChanged(e)}\n        />\n        <button  onClick={()=>this.handleSearchItineraries()}>Search</button>\n       <ItinerariesControl ItinerariesResponse={this.state.ItinerariesResponse}/>\n      </div>\n    );\n  }\n  handleLocationRidersChanged(locationRiders:ILocationRider[]){\n   var result = Enumerable.from(locationRiders).select((val)=>new SearchParam(val.SearchResult!, val.NumRiders!, val.Coords!)).toArray();\n   this.setState({SearchResults:result});\n  }\n  handleArrivalTimeChanged(date:Date){\n    this.setState({Arrivaltime:date});\n  }\n  searchResultHashmap={};\n  handleReadjustForArrival(date:Date){\n    var searchResultHashmap = this.searchResultHashmap;\n    var research = false;\n    this.state.SearchResults!.forEach(i=>{\n      let existingDuration = searchResultHashmap[i.SearchResult!];\n      if(existingDuration){\n        research = true;\n      }\n      let duration:number = existingDuration;\n      \n      duration+=2;\n      let startTime = dateMath.add(date, -duration, \"minutes\");\n      i.StartTime = startTime;\n      i.EndTime = dateMath.add(startTime, 1, \"day\");\n    });\n    if(research)\n    {\n      this.handleSearchItineraries(true);\n    }\n  }\n  handleReadjustForArrivalBySubtractDuration(date:Date){\n    console.log('Readjusting for arrival date:'+date.toString());\n    var response = this.state.ItinerariesResponse!\n    response.itineraries.forEach(it=>{\n      it.readjustForArrival(date);\n    });\n    this.setState({ItinerariesResponse:undefined}, ()=>this.setState({ItinerariesResponse:response}));\n  }\n  /*\n  handleSingleItinerarySearch(searchResults:ISearchResult[]){\n    this.itinerary\n              .getItinerary({\n                dwellTime: this.state.DwellTime!,\n                searchParams: searchResults,\n                startLocation: searchResults[0].Coords!,\n                endLocation: this.state.Destination!.Coords!\n              })\n              .then((i: IItinineraryResponse) => {\n                this.setState({ ItineraryResponse: i });\n                i.instructionSets.forEach(is=>{\n                  this.searchResultHashmap[is.startingPoint] = is.durationMinutes;\n                });\n              });\n            }*/\n  handleMultipleItinerarySearch(searchResults:ISearchResult[]){\n    this.setState({SearchResults:searchResults});\n  }\n  handleSearchItineraries(skipReadjust:boolean=false){\n    this.itineraryCollection.getItineraries({\n      dwellTime: this.state.DwellTime!,\n      searchResults: this.state.SearchResults!,\n      endLocation: this.state.Destination!.Coords!,\n      endLocationName:this.state.Destination!.SearchResult!\n    }) \n    .then((i: ItinerariesResponse) => {\n      this.setState({ ItinerariesResponse: i });\n      i.itineraries.forEach(it=>{it.instructionSets.forEach(is=>{\n        this.searchResultHashmap[is.startingPoint] = is.durationMinutes;\n      });});\n    }).then(()=>{\n      if(!skipReadjust)\n        this.handleReadjustForArrivalBySubtractDuration(this.state.Arrivaltime);\n    });\n  }\n  handleDestinationChanged(e: ISearchResult) {\n    console.log(\"handle destination changed:\" + JSON.stringify(e));\n    this.setState({ Destination: e });\n  }\n  handleDwellTimeChanged(event) {\n    this.setState({ DwellTime: event.target.value });\n  }\n}\n","import * as React from \"react\";\r\nimport { render } from \"react-dom\";\r\n//import { SearchControl } from \"./searchControl\";\r\nimport { LocationRiderCollectionControl } from \"./Controls/locationRiderCollectionControl\";\r\nimport { MapsControl } from \"./mapsContol\";\r\nimport { ISearchResult } from \"./Controls/enterLocationControl\";\r\nimport { LandingPageControl } from \"./Controls/LandingPageControl\";\r\n\r\nfunction App() {\r\n  return (\r\n    \r\n    <div className=\"App\">\r\n      <h1>Hello CodeSandbox Test</h1>\r\n      <h2>Enter locations</h2>\r\n      \r\n    <LandingPageControl/>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nrender(<App />, rootElement);\r\n"],"sourceRoot":""}