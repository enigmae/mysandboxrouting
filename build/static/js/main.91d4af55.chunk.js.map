{"version":3,"sources":["Controls/enterLocationControl.tsx","Controls/locationRiderControl.tsx","Controls/locationRiderCollectionControl.tsx","Controls/itineraryInstructionsControl.tsx","Controls/instructionSummaryControl.tsx","Services/itinerary.ts","Services/ItineraryService.ts","Services/ItineraryCollectionService.ts","Controls/itinerariesControl.tsx","Controls/LandingPageControl.tsx","index.tsx"],"names":["_callee","query","rest","response","regenerator_default","a","wrap","_context","prev","next","console","log","rm","get","sent","abrupt","result","resourceSets","resources","stop","SearchParam","SearchResult","Riders","StartTime","EndTime","Object","classCallCheck","this","EnterLocationControl","_React$Component","props","_this","possibleConstructorReturn","getPrototypeOf","call","inputElement","handleKeyDown","event","key","preventDefault","stopPropagation","blur","state","SearchQuery","setState","SearchResultVisible","handleSearchChanged","bind","assertThisInitialized","handleSearchBlur","searchResult","coords","Lat","Long","Coords","inherits","createClass","value","focus","_this2","LastQuery","target","getBingMapsResponse","then","i","JSON","stringify","undefined","name","point","coordinates","noticedChange","Submitted","searchResultsChanged","_this3","react","type","readOnly","onChange","onBlur","onKeyDown","ref","input","React","LocationRiderControl","handleRidersChanged","handleAddLocationClicked","handleSearchResultChanged","NumRiders","SubmitEnabled","e","resetSubmitEnabled","submitLocationRider","enterLocationControl_EnterLocationControl","style","display","className","onClick","disabled","LocationRiderCollectionControl","LocationRiders","Array","handleLocationRiderChanged","handleSubmitRider","locationRider","locationRiders","push","handleLocationRidersChanged","items","locationRiderControl_LocationRiderControl","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","err","return","ItineraryInstructionsControl","apply","arguments","instructionRenders","linq","instructions","skip","toArray","map","place","endtime","duration","itineraryItem","location","latitude","longitude","endTime","startTime","instructionType","durationMinutes","InstructionSummaryControl","objectSpread","collapsed","calculateState","startingPoint","instructionSet","totalHours","Math","floor","totalMinutes","totalDistance","distance","calc","fullSummary","concat","toFixed","Collapsible_default","trigger","itineraryInstructionsControl_ItineraryInstructionsControl","dwellTime","openingTime","closingTime","startingTime","agentItinerary","agent","calcdistance","calcMinutes","sum","length","dateDiff","Date","minutes","ItinineraryResponse","agentItineraries","ItineraryRequest","agents","itineraryItems","ItineraryService","_getItinerary","asyncToGenerator","mark","getItineraryRequest","searchParams","sr","dateformat","replace","request","resolveWithFullResponse","json","shifts","endLocation","startLocation","_x","ItineraryCollectionService","itinerary","_getItineraries","getItinerariesRequest","_itinerary","searchResults","getItinerary","t0","finish","itineraries","Enumerable","orderBy","instructionSets","max","is","select","ItinerariesControl","endOfToday","dateMath","ninePm","subtractDay","Arrivaltime","handleArrivalTimeChanged","date","ItinerariesResponse","responseList","instructionList","m","instructionSummaryControl_InstructionSummaryControl","LandingPageControl","itineraryCollection","searchResultHashmap","handleDestinationChanged","DwellTime","initializeArrivalTime","handleDwellTimeChanged","handleMultipleItinerarySearch","handleSearchItineraries","handleReadjustForArrival","ItineraryResponse","entry_default","locationRiderCollectionControl_LocationRiderCollectionControl","itinerariesControl_ItinerariesControl","from","val","SearchResults","forEach","_this4","getItineraries","Destination","it","rootElement","document","getElementById","render","LandingPageControl_LandingPageControl"],"mappings":"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","file":"static/js/main.91d4af55.chunk.js","sourcesContent":["import * as rm from \"typed-rest-client/RestClient\";\nimport * as React from \"react\";\nimport \"../styles.css\";\nimport { IBingMapsResponse, IResource } from \"../bing\";\n\nasync function getBingMapsResponse(query: string): Promise<IResource> {\n  console.log(\"running search\");\n  let rest = new rm.RestClient(\"rest-samples\", \"https://dev.virtualearth.net\");\n  let response: rm.IRestResponse<IBingMapsResponse> = await rest.get<\n    IBingMapsResponse\n  >(\n    \"/REST/v1/Locations?q=\" +\n      query +\n      \"&key=ArLJodQ7fEaQ2dfy3lIHWJrJILC35_Qj0EpT8TCy3ls96pl6sqCdlu18bo8j_tbM\"\n  );\n  // console.log(\"the response:\" + JSON.stringify(response));\n  return response.result!.resourceSets[0].resources[0];\n}\n\ninterface IEnterLocationState {\n  SearchQuery?: string;\n  SearchResult: string;\n  SearchResultVisible: boolean;\n  Coords: ILatLong;\n  LastQuery?: string;\n  Submitted?: boolean;\n}\nexport interface ILatLong {\n  Lat: number;\n  Long: number;\n}\nexport interface ISearchResult {\n  SearchResult?: string;\n  SearchQuery?: string;\n  Coords?: ILatLong;\n}\nexport interface ISearchParam extends ISearchResult{\n  EndTime?:Date;\n  StartTime?:Date;\n  Riders?:number;\n}\nexport class SearchParam implements ISearchParam{\n  constructor(public SearchResult:string, public Riders:number, public StartTime?:Date, public EndTime?:Date){\n\n  }\n}\nexport interface IEnterLocationControlProps {\n  searchResultsChanged: (arg0: ISearchResult) => void;\n  SearchResult: ISearchResult;\n}\nexport class EnterLocationControl extends React.Component<\n  IEnterLocationControlProps,\n  IEnterLocationState\n> {\n  constructor(props: Readonly<IEnterLocationControlProps>) {\n    super(props);\n    this.handleSearchChanged = this.handleSearchChanged.bind(this);\n    this.handleSearchBlur = this.handleSearchBlur.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    let searchResult = '';\n    let coords = {Lat:0, Long:0};\n    if(props.SearchResult){\n      if(props.SearchResult.SearchResult)\n        searchResult = props.SearchResult.SearchResult;\n      if(props.SearchResult.Coords)\n        coords = props.SearchResult.Coords;\n    }\n    this.state = {\n      SearchResultVisible: false,\n      SearchQuery: props.SearchResult ? props.SearchResult.SearchQuery : \"\",\n      SearchResult: searchResult,\n      Coords: coords\n    };\n    this.inputElement = null;\n  }\n  componentDidMount() {\n    this.inputElement!.focus();\n  }\n  inputElement:HTMLInputElement|null;\n  handleSearchChanged(event) {\n    this.setState({ LastQuery: this.state.SearchQuery });\n    console.log(\"handlesearch changed last query is \" + this.state.LastQuery);\n\n    this.setState({\n      SearchQuery: event.target.value,\n      SearchResultVisible: true\n    });\n    getBingMapsResponse(event.target.value).then(i => {\n\n      console.log(\"last query is \" + this.state.LastQuery);\n      console.log(\"maps Response: \" + JSON.stringify(i));\n      if(i===undefined)\n        return;\n      this.setState({\n        SearchResult: i.name,\n        Coords: { Lat: i.point.coordinates[0], Long: i.point.coordinates[1] }\n      });\n    });\n  }\n  noticedChange(): boolean {\n    console.log(\"last query is \" + this.state.LastQuery);\n    console.log(\"search query is \" + this.state.SearchQuery);\n    console.log(\"search result is \" + this.state.SearchResult);\n    if (this.state.LastQuery !== this.state.SearchQuery) {\n      this.setState({ LastQuery: this.state.SearchQuery });\n\n      console.log(\"noticed change to \" + this.state.LastQuery);\n      return true;\n    } else {\n      console.log(\"noticed no change\");\n      return false;\n    }\n  }\n\n  handleSearchBlur(event) {\n    if (!this.noticedChange()) return;\n    let searchResult =\n      this.state.SearchQuery === \"\" ? \"\" : this.state.SearchResult;\n    this.setState({\n      SearchQuery: searchResult,\n      SearchResultVisible: false\n    });\n    this.setState({ LastQuery: searchResult });\n    if (searchResult === \"\") return;\n    this.setState({\n      Submitted: true\n    });\n    this.props.searchResultsChanged({\n      SearchResult: searchResult,\n      Coords: this.state.Coords,\n      SearchQuery: this.state.SearchQuery\n    });\n  }\n  handleKeyDown = (event: React.KeyboardEvent<HTMLDivElement>): void => {\n    // 'keypress' event misbehaves on mobile so we track 'Enter' key via 'keydown' event\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n      event.stopPropagation();\n      this.inputElement!.blur();\n      //this.handleSearchBlur(null);\n    }\n    if (this.state.SearchQuery === \"\") {\n      this.setState({ SearchResultVisible: false });\n    }\n  };\n  render() {\n    let searchResult;\n    if (this.state.SearchResultVisible) {\n      searchResult = (\n        <div>\n        <input type=\"text\" value={this.state.SearchResult} readOnly={true} />\n        <br/>\n        </div>\n        );\n    }\n    return (\n      <span>\n        <input\n          type=\"text\"\n          value={this.state.SearchQuery}\n          onChange={this.handleSearchChanged}\n          onBlur={this.handleSearchBlur}\n          onKeyDown={this.handleKeyDown}\n          readOnly={this.state.Submitted}\n          ref={input => (this.inputElement = input)}\n        />\n        {searchResult}\n        </span>\n    );\n  }\n}\n","import * as React from 'react';\nimport { EnterLocationControl, ISearchParam, ISearchResult } from './enterLocationControl';\nimport { ILocation } from '../bing';\nexport interface ILocationRider {\n    SearchResult?: string;\n    NumRiders?:number;\n  }\n  export interface ILocationRiderControlState extends ILocationRider{\n    SubmitEnabled:boolean;\n    Submitted:boolean;\n  }\n  export interface ILocationRiderControlProps {\n    handleLocationRiderChanged?: (locationRider: ILocationRider) => void;\n    submitLocationRider:(locationRider: ILocationRider)=>void;\n    NumRiders?:number;\n    SearchResult?:string;\n  }\nexport class LocationRiderControl extends React.Component< ILocationRiderControlProps,\nILocationRiderControlState>{\n  constructor(props:Readonly<ILocationRiderControlProps>){\n    super(props);\n    this.handleRidersChanged = this.handleRidersChanged.bind(this);\n    this.handleAddLocationClicked = this.handleAddLocationClicked.bind(this);\n    this.handleSearchResultChanged = this.handleSearchResultChanged.bind(this);\n    this.state = {NumRiders:props.NumRiders, SearchResult:props.SearchResult, SubmitEnabled:false, Submitted:false};\n  }\n  handleRidersChanged(e){\n    this.setState({NumRiders:e.target.value}, this.resetSubmitEnabled);\n  }\n  handleSearchResultChanged(e: ISearchResult) {\n        console.log(\"handleSearchResultsChanged \");\n        this.setState({ SearchResult: e.SearchResult }, this.resetSubmitEnabled);\n      }\n  handleAddLocationClicked(){\n      this.props.submitLocationRider(this.state);\n  }\n  resetSubmitEnabled(){\n    if(this.state.NumRiders && this.state.SearchResult){\n      this.setState({SubmitEnabled:true});\n    }\n  }\n    render(){\n        return <table>\n          <td></td>\n          <td></td>\n        <tr>\n         <EnterLocationControl\n          SearchResult={{\n            SearchQuery: \"\",\n            SearchResult: this.state.SearchResult\n          }}\n          searchResultsChanged={this.handleSearchResultChanged}\n        />\n        <div style={{display:\"inline-block\"}}>\n        <label className=\"RidersLabel\"># Riders</label><input className=\"Riders\" value={this.state.NumRiders} onChange={this.handleRidersChanged}/>\n        <button className=\"AddLocation\" onClick={this.handleAddLocationClicked} disabled={!this.state.SubmitEnabled}>Add location</button>\n        </div></tr></table>\n    }\n}","import { EnterLocationControl, ISearchResult, ISearchParam } from \"./enterLocationControl\";\nimport * as React from \"react\";\nimport { LocationRiderControl, ILocationRider } from \"./locationRiderControl\";\n\nexport interface ILocationRiderCollectionControlProps{\nhandleLocationRidersChanged:(locationRiders:ILocationRider[])=>void;\n}\nexport interface ILocationRiderCollectionControlState{\n  LocationRiders:ILocationRider[];\n}\nexport class LocationRiderCollectionControl extends React.Component<ILocationRiderCollectionControlProps, ILocationRiderCollectionControlState> {\n  constructor(props: Readonly<ILocationRiderCollectionControlProps>) {\n    super(props);\n    this.state = { LocationRiders: new Array() };\n    this.handleLocationRiderChanged = this.handleLocationRiderChanged.bind(this);\n    this.handleSubmitRider = this.handleSubmitRider.bind(this);\n  }\n  \n  handleLocationRiderChanged(locationRider: ILocationRider){\n\n  }\nhandleSubmitRider(locationRider: ILocationRider){\n  var locationRiders = this.state.LocationRiders;\n  locationRiders.push(locationRider);\n  this.setState({LocationRiders:locationRiders}, ()=> this.props.handleLocationRidersChanged(this.state.LocationRiders));\n}\n  render() {\n    let blankitem = (\n      <LocationRiderControl\n      submitLocationRider={(e)=>this.handleSubmitRider(e)}\n       handleLocationRiderChanged={this.handleLocationRiderChanged}\n     />\n  );\n    const items = [blankitem];\n    for (let locationRider of this.state.LocationRiders) {\n      items.push(<LocationRiderControl NumRiders={locationRider.NumRiders} SearchResult={locationRider.SearchResult}\n        submitLocationRider={(e)=>this.handleSubmitRider(e)}\n        />);\n    }\n    return <ol>{items}</ol>;\n  }\n}\n","import * as React from \"react\";\nimport { instruction, instructionSet } from \"../Services/itinerary\";\nimport * as linq from \"linq\";\nexport interface InstructionControlProps{\n    instructions:instructionSet\n}\nexport class ItineraryInstructionsControl extends React.Component<InstructionControlProps>{\n    render(){\n      \n        let instructionRenders = linq.from(this.props.instructions.instructions).skip(2).toArray().map(\n            i => {\n              let loc;\n              let place;\n              let endtime;\n              let duration;\n              //if(i.instructionType!=\"TravelBetweenLocations\")\n              //    return;\n              if (i.itineraryItem) {\n                loc =\n                  \"Location:(\" +\n                  i.itineraryItem.location.latitude +\n                  \", \" +\n                  i.itineraryItem.location.longitude +\n                  \")\";\n                if (i.itineraryItem.name) {\n                  place = (\n                    <span>\n                      <b>Place:</b>\n                      <label>{i.itineraryItem.name}</label>\n                    </span>\n                  );\n                }\n              }\n              if (i.endTime) {\n                endtime = (\n                  <span>\n                    <b>EndTime:</b> {i.endTime}\n                  </span>\n                );\n              }\n              if (i.duration) {\n                duration = (\n                  <span>\n                    {\" \"}\n                    <b>Duration:</b>\n                    {i.duration}\n                  </span>\n                );\n              }\n              return (\n                <li key={i.startTime + i.instructionType}>\n                  <b>Start:</b>\n                  {i.startTime} {place}\n                  <br />\n                  <b> Type:</b>\n                  {i.instructionType} {endtime} {duration}\n                </li>\n              );\n            }\n          );\n        return <div>Total time:{this.props.instructions.durationMinutes} minutes\n    <ol>{instructionRenders}</ol>\n        </div>\n    }\n}","import * as React from 'react';\nimport { instructionSet } from '../Services/itinerary';\nimport { totalmem } from 'os';\nimport { ItineraryInstructionsControl } from './itineraryInstructionsControl';\nimport Collapsible from 'react-collapsible';\nexport interface IInstructionSummaryControlProps{\n    instructionSet:instructionSet;\n}\nexport interface IInstructionSummaryControlState{\n    collapsed?:boolean;\n    totalHours:number;\n    totalMinutes:number;\n    totalDistance:number;\n    startingPoint:string;\n}\nexport class InstructionSummaryControl extends React.Component<IInstructionSummaryControlProps, IInstructionSummaryControlState>{\n    constructor(props){\n        super(props);\n        let collapsed ={collapsed:true};\n \n        this.state = {...collapsed, ...this.calculateState(), startingPoint:this.props.instructionSet.instructions[2].itineraryItem.name};\n    }\n    calculateState(){\n        let calc = {totalHours:Math.floor(this.props.instructionSet.durationMinutes/60), \n            totalMinutes:this.props.instructionSet.durationMinutes%60, totalDistance:this.props.instructionSet.distance};\n        return calc;\n    }\n    componentDidUpdate(){\n        let calc = this.calculateState();\n            if(this.state.totalDistance!=calc.totalDistance || this.state.totalHours!=calc.totalHours || this.state.totalMinutes!=calc.totalMinutes){\n                this.setState(calc);        \n            }\n        }\n    render(){\n        let fullSummary = `Total Time:${this.state.totalHours} hrs ${this.state.totalMinutes.toFixed()} min Total Distance:${this.props.instructionSet.distance.toFixed(1)} mi Starting Point:${this.props.instructionSet.instructions[2].itineraryItem.name}`;\n        return <Collapsible trigger={fullSummary}>\n            <ItineraryInstructionsControl instructions={this.props.instructionSet}/>\n        </Collapsible>;\n    }\n}","import { ISearchResult, ILatLong, ISearchParam } from \"../Controls/enterLocationControl\";\nimport dateDiff from 'date-diff'; \nimport { setupMaster } from \"cluster\";\nexport interface location {\n  latitude: number;\n  longitude: number;\n}\nexport interface shift {\n  startTime?: string;\n  endTime?: string;\n  startLocation: location;\n  endLocation: location;\n}\nexport interface IitineraryItem {\n  name: string;\n  dwellTime: string;\n  location: location;\n}\nexport class itineraryItem implements IitineraryItem {\n  constructor(\n    public name: string,\n    public dwellTime: string,\n    public location: location,\n    public openingTime?:string,\n    public closingTime?:string,\n    public startingTime?:string\n  ) {}\n}\nexport interface agent {\n  name: string;\n  shifts: shift[];\n}\nexport interface IItineraryRequest {\n  agents: agent[];\n  itineraryItems: IitineraryItem[];\n}\nexport interface route {\n  startLocation: Location;\n  endLocatrion: Location;\n  startTime: string;\n  endTime: string;\n  totalTravelDistance: number;\n  totalTravelTime: string;\n  wayPoints: Location[];\n}\nexport interface instruction {\n  instructionType: string;\n  distance: number;\n  itineraryItem: IitineraryItem;\n  startTime: string;\n  endTime: string;\n  duration: string;\n}\nexport class instructionSet{\n  constructor(agentItinerary:agentItinerary){\n    this.instructions = agentItinerary.instructions;\n    this.agent = agentItinerary.agent;\n    this.distance = this.calcdistance();\n    this.durationMinutes = this.calcMinutes();\n  }\n  agent:agent;\n  instructions:instruction[];\n  get startingPoint():string{\n    return this.instructions[2].itineraryItem.name;\n  }\n  distance:number;\n  durationMinutes:number;\n  private calcdistance(){\n    let sum =0;\n    for(let i = 0; i<this.instructions.length;i++){\n      if(this.instructions[i].distance)\n        {\n          sum+=this.instructions[i].distance;\n        }\n    }\n    return sum*0.000621371;\n  }\n  private calcMinutes(){\n\n   let diff = new dateDiff(new Date(this.instructions[this.instructions.length-1].startTime), new Date(this.instructions[0].startTime));\n    // let minutes = dateMath.subtract(new Date(this.instructions[0].startTime), new Date(this.instructions[this.instructions.length-1].endTime), \"minutes\");\n    //return minutes;\n  return diff.minutes();\n  }\n}\nexport interface agentItinerary {\n  agent: agent;\n  instructions: instruction[];\n}\nexport interface resource {\n  agentItineraries: agentItinerary[];\n}\nexport interface resourceSet {\n  resources: resource[];\n}\nexport interface IItinineraryResponse {\n  resourceSets: resourceSet[];\n  instructionSets:instructionSet[];\n}\nexport class ItinineraryResponse implements IItinineraryResponse{\n  constructor(public resourceSets: resourceSet[]){\n\n  }\n  get instructionSets():instructionSet[]{\n    return this.resourceSets[0].resources[0].agentItineraries.map(i=> new instructionSet(i));\n  }\n}\nexport class ItineraryRequest implements IItineraryRequest {\n  constructor(\n    public agents: agent[],\n    public itineraryItems: IitineraryItem[]\n  ) {}\n}\nexport interface getItineraryRequest {\n  searchParams: ISearchParam[];\n  startLocation: ILatLong;\n  endLocation: ILatLong;\n  dwellTime: number;\n  startTime?:Date;\n  endTime?:Date;\n}\nexport interface IItineraryService{\n  getItinerary(\n    getItineraryRequest: getItineraryRequest\n  ): Promise<IItinineraryResponse>;\n}\nexport interface ItinerariesRequest {\n  searchResults: ISearchParam[];\n  endLocation: ILatLong;\n  dwellTime: number;\n}\nexport interface ItinerariesResponse {\n  itineraries:IItinineraryResponse[];\n}\n","import * as request from \"request-promise\";\nimport dateformat from 'dateformat';\nimport { IItineraryService, getItineraryRequest, IItinineraryResponse, itineraryItem, ItineraryRequest, ItinineraryResponse } from \"./itinerary\";\nexport class ItineraryService implements IItineraryService {\n  async getItinerary(getItineraryRequest: getItineraryRequest): Promise<IItinineraryResponse> {\n    var itineraryItems = getItineraryRequest.searchParams.map(sr => new itineraryItem(sr.SearchResult!, \"00:\" + getItineraryRequest.dwellTime + \":00\", {\n      latitude: sr.Coords!.Lat,\n      longitude: sr.Coords!.Long\n    }));\n    /*itineraryItems.push(new itineraryItem('Destination', \"00:15:00\", {\n      latitude: getItineraryRequest.endLocation.Lat,\n      longitude: getItineraryRequest.endLocation.Long\n    }, '2019-11-16T16:00:00', '2019-11-16T18:00:00'));*/\n    let startTime = getItineraryRequest.startTime==undefined? \"2019-11-16T08:00:00\" : dateformat(getItineraryRequest.startTime, 'yyyy-mm-ddThh:MM:ss');\n    let endTime = getItineraryRequest.endTime==undefined?\"2019-11-16T18:00:00\" : dateformat(getItineraryRequest.endTime, 'yyyy-mm-ddThh:MM:ss');\n    startTime = startTime.replace('P', 'T').replace('A','T');\n    endTime = endTime.replace('P', 'T').replace('A','T');\n    var result = await request.post(\"https://dev.virtualearth.net/REST/V1/Routes/OptimizeItinerary?key=ArLJodQ7fEaQ2dfy3lIHWJrJILC35_Qj0EpT8TCy3ls96pl6sqCdlu18bo8j_tbM\", {\n      resolveWithFullResponse: false,\n      json: new ItineraryRequest([\n        {\n          name: \"Kayode\",\n          shifts: [\n            {\n              startTime: startTime,\n              endTime: endTime,\n              endLocation: {\n                latitude: getItineraryRequest.endLocation.Lat,\n                longitude: getItineraryRequest.endLocation.Long\n              },\n              startLocation: {\n                latitude: getItineraryRequest.startLocation.Lat,\n                longitude: getItineraryRequest.startLocation.Long\n              }\n            }\n          ]\n        }\n      ], itineraryItems)\n    });\n    return new ItinineraryResponse((<IItinineraryResponse>result).resourceSets);\n  }\n}\n","import * as Enumerable from 'linq';\nimport { IItineraryService, ItinerariesRequest, ItinerariesResponse, IItinineraryResponse } from \"./itinerary\";\nexport interface IItineraryCollectionService{\n  getItineraries(getItinerariesRequest: ItinerariesRequest): Promise<ItinerariesResponse>;\n} \nexport class ItineraryCollectionService implements IItineraryCollectionService{\n  constructor(private itinerary: IItineraryService) {\n  }\n  async getItineraries(getItinerariesRequest: ItinerariesRequest): Promise<ItinerariesResponse> {\n    let response = new Array<IItinineraryResponse>();\n    for (let result of getItinerariesRequest.searchResults) {\n      let startDate =new Date(2019,11,17,10,0);\n      let endDate =new Date(2019,11,18,22,0);\n      \n      let itinerary = await this.itinerary.getItinerary({\n        startLocation: result.Coords!, searchParams: getItinerariesRequest.searchResults,\n        dwellTime: getItinerariesRequest.dwellTime, endLocation: getItinerariesRequest.endLocation,\n        startTime:result.StartTime, endTime:result.EndTime\n      });\n      response.push(itinerary);\n    }\n    return { \n      itineraries: Enumerable.from(response).orderBy(i=>Enumerable.from(i.instructionSets).max(is=>is.durationMinutes)).select(i=>i).toArray()\n  };\n}\n}\n","import * as React from \"react\";\nimport DateTimePicker from \"react-datetime-picker\";\nimport * as dateMath from 'date-arithmetic';\nimport {ItinerariesResponse} from '../Services/itinerary';\nimport { InstructionSummaryControl } from \"./instructionSummaryControl\";\ninterface ItinerariesControlState{\n    Arrivaltime:Date;\n}\nexport interface ItinerariesControlProps{\n    ItinerariesResponse?:ItinerariesResponse;\n}\nexport class ItinerariesControl extends React.Component<ItinerariesControlProps,ItinerariesControlState>{\n    constructor(props){\n        super(props);\n        let endOfToday = dateMath.endOf(new Date(),'day');\n        let ninePm = dateMath.add(endOfToday, 20, \"hours\");\n        let subtractDay = dateMath.add(ninePm, -1, \"day\");\n     \n        this.state = {  Arrivaltime: dateMath.add(subtractDay, 1, \"minutes\")};\n        this.handleArrivalTimeChanged = this.handleArrivalTimeChanged.bind(this);\n     }\n    handleArrivalTimeChanged(date:Date){\n        this.setState({Arrivaltime:date});\n      }\nrender(){\n    if(!this.props.ItinerariesResponse)\n        return <div/>\n        let responseList;\n        let instructionList  = this.props.ItinerariesResponse.itineraries.map(m=>\n        <li><InstructionSummaryControl instructionSet = {m.instructionSets[0]}/></li>);\n         responseList = <ol>{instructionList}</ol>;\n    return <div>\n        <h1>Itineraries:</h1>\n        <ol>{responseList}</ol>\n  </div>\n}\n\n}","import * as React from \"react\";\nimport { LocationRiderCollectionControl } from \"./locationRiderCollectionControl\";\nimport { ISearchResult, ISearchParam, SearchParam } from \"./enterLocationControl\";\nimport { IItinineraryResponse, instructionSet, IItineraryService, ItinerariesResponse } from \"../Services/itinerary\";\nimport { EnterLocationControl } from \"./enterLocationControl\";\nimport { ItineraryInstructionsControl } from \"./itineraryInstructionsControl\";\nimport { InstructionSummaryControl } from \"./instructionSummaryControl\";\nimport { ItineraryService } from \"../Services/ItineraryService\";\nimport { ItineraryCollectionService } from \"../Services/ItineraryCollectionService\";\nimport DateTimePicker from \"react-datetime-picker\";\nimport * as dateMath from 'date-arithmetic';\nimport { ItinerariesControl } from \"./itinerariesControl\";\nimport { ILocationRider } from \"./locationRiderControl\";\nimport Enumerable from \"linq\";\ninterface IDisplayItinerariesState {\n  SearchResults?: ISearchParam[];\n  Destination?: ISearchResult;\n  ItineraryResponse?: IItinineraryResponse;\n  ItinerariesResponse?:ItinerariesResponse; \n  DwellTime?: number;\n  Arrivaltime:Date;\n}\nexport class LandingPageControl extends React.Component<\n  {},\n  IDisplayItinerariesState\n> {\n  constructor(props) {\n    super(props);\n    this.itinerary = new ItineraryService();\n    this.itineraryCollection = new ItineraryCollectionService(this.itinerary);\n    this.handleDestinationChanged = this.handleDestinationChanged.bind(this);\n\n    this.state = { DwellTime: 15, Arrivaltime: this.initializeArrivalTime()};\n    this.handleDwellTimeChanged = this.handleDwellTimeChanged.bind(this);\n    //this.handleSingleItinerarySearch = this.handleSingleItinerarySearch.bind(this);\n    this.handleMultipleItinerarySearch = this.handleMultipleItinerarySearch.bind(this);\n    this.handleSearchItineraries = this.handleSearchItineraries.bind(this);\n    this.handleReadjustForArrival = this.handleReadjustForArrival.bind(this);\n  }\n  initializeArrivalTime(){\n    let endOfToday = dateMath.endOf(new Date(),'day');\n    let ninePm = dateMath.add(endOfToday, 20, \"hours\");\n    let subtractDay = dateMath.add(ninePm, -1, \"day\");\n    return dateMath.add(subtractDay, 1, \"minutes\");\n  }\n  itineraryCollection: ItineraryCollectionService;\n  itinerary: IItineraryService;\n  render() {\n    let responseList;\n    if (\n      this.state &&\n      this.state.ItineraryResponse &&\n      this.state.ItineraryResponse.resourceSets\n    ){\n      //TODO:Break this out into it's own control\n      responseList  = <InstructionSummaryControl instructionSet=\n        {this.state.ItineraryResponse.instructionSets[0]}/>;\n    }\n    else if (\n      this.state &&\n      this.state.ItinerariesResponse\n    ){\n      //TODO:Break this out into it's own control\n      let instructionList  = this.state.ItinerariesResponse.itineraries.map(m=>\n     <li><InstructionSummaryControl instructionSet = {m.instructionSets[0]}/></li>);\n      responseList = <ol>{instructionList}</ol>;\n    }\n    return (\n      <div>\n        <div>\n          Enter destination:\n          <div>\n          <EnterLocationControl\n            SearchResult={{\n              SearchQuery: \"\",\n              SearchResult: undefined\n            }}\n            searchResultsChanged={this.handleDestinationChanged}\n          /></div>\n        </div>\n        <div>\n          Enter dwell time:\n          <br />\n          <input\n            value={this.state.DwellTime}\n            onChange={this.handleDwellTimeChanged}\n          />\n        </div>\n         Enter arrival time:\n    <br />\n    <DateTimePicker\n      value={this.state.Arrivaltime}\n      onChange={this.handleArrivalTimeChanged}\n    />\n        <LocationRiderCollectionControl handleLocationRidersChanged={(e)=>this.handleLocationRidersChanged(e)}\n        />\n        <button  onClick={this.handleSearchItineraries}>Search</button>\n       <ItinerariesControl ItinerariesResponse={this.state.ItinerariesResponse}/>\n      </div>\n    );\n  }\n  handleLocationRidersChanged(locationRiders:ILocationRider[]){\n   var result = Enumerable.from(locationRiders).select((val)=>new SearchParam(val.SearchResult!, val.NumRiders!));\n  }\n  handleArrivalTimeChanged(date:Date){\n    this.setState({Arrivaltime:date});\n  }\n  searchResultHashmap={};\n  handleReadjustForArrival(date:Date){\n    this.state.SearchResults!.forEach(i=>{\n      let duration:number = this.searchResultHashmap[i.SearchResult!];\n      duration+=2;\n      let startTime = dateMath.add(date, -duration, \"minutes\");\n      i.StartTime = startTime;\n      i.EndTime = dateMath.add(startTime, 1, \"day\");\n    });\n    this.handleSearchItineraries();\n  }\n  /*\n  handleSingleItinerarySearch(searchResults:ISearchResult[]){\n    this.itinerary\n              .getItinerary({\n                dwellTime: this.state.DwellTime!,\n                searchParams: searchResults,\n                startLocation: searchResults[0].Coords!,\n                endLocation: this.state.Destination!.Coords!\n              })\n              .then((i: IItinineraryResponse) => {\n                this.setState({ ItineraryResponse: i });\n                i.instructionSets.forEach(is=>{\n                  this.searchResultHashmap[is.startingPoint] = is.durationMinutes;\n                });\n              });\n            }*/\n  handleMultipleItinerarySearch(searchResults:ISearchResult[]){\n    this.setState({SearchResults:searchResults});\n  }\n  handleSearchItineraries(){\n    this.itineraryCollection.getItineraries({\n      dwellTime: this.state.DwellTime!,\n      searchResults: this.state.SearchResults!,\n      endLocation: this.state.Destination!.Coords!\n    })\n    .then((i: ItinerariesResponse) => {\n      this.setState({ ItinerariesResponse: i });\n      i.itineraries.forEach(it=>{it.instructionSets.forEach(is=>{\n        this.searchResultHashmap[is.startingPoint] = is.durationMinutes;\n      });});\n    }).then(()=>{\n      this.handleReadjustForArrival(this.state.Arrivaltime);\n    });\n  }\n  handleDestinationChanged(e: ISearchResult) {\n    console.log(\"handle destination changed:\" + JSON.stringify(e));\n    this.setState({ Destination: e });\n  }\n  handleDwellTimeChanged(event) {\n    this.setState({ DwellTime: event.target.value });\n  }\n}\n","import * as React from \"react\";\r\nimport { render } from \"react-dom\";\r\n//import { SearchControl } from \"./searchControl\";\r\nimport { LocationRiderCollectionControl } from \"./Controls/locationRiderCollectionControl\";\r\nimport { MapsControl } from \"./mapsContol\";\r\nimport { ISearchResult } from \"./Controls/enterLocationControl\";\r\nimport { LandingPageControl } from \"./Controls/LandingPageControl\";\r\n\r\nfunction App() {\r\n  return (\r\n    \r\n    <div className=\"App\">\r\n      <h1>Hello CodeSandbox Test</h1>\r\n      <h2>Enter locations</h2>\r\n      \r\n    <LandingPageControl/>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nrender(<App />, rootElement);\r\n"],"sourceRoot":""}