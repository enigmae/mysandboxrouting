{"version":3,"sources":["Controls/enterLocationControl.tsx","Controls/locationRiderControl.tsx","Controls/locationRiderCollectionControl.tsx","Controls/itineraryInstructionsControl.tsx","Controls/instructionSummaryControl.tsx","Services/itinerary.ts","Services/ItineraryService.ts","Services/ItineraryCollectionService.ts","Controls/itinerariesControl.tsx","Controls/BusCapacityControl.tsx","Services/rallyService.ts","Controls/RallyEventControl.tsx","Controls/LandingPageControl.tsx","index.tsx"],"names":["_callee","query","rest","response","regenerator_default","a","wrap","_context","prev","next","console","log","rm","get","concat","sent","abrupt","result","resourceSets","resources","stop","SearchParam","SearchResult","Riders","Coords","StartTime","EndTime","Object","classCallCheck","this","EnterLocationControl","_React$Component","props","_this","possibleConstructorReturn","getPrototypeOf","call","inputElement","handleKeyDown","event","key","preventDefault","stopPropagation","blur","state","SearchQuery","setState","SearchResultVisible","handleSearchChanged","bind","assertThisInitialized","handleSearchBlur","stateFromProps","getStateFromprops","objectSpread","inherits","createClass","value","Lat","Long","searchResultsChanged","prevProps","prevState","_this2","resetCoordsFromBing","raiseSearchResultsChanged","focus","LastQuery","target","search","_this3","getBingMapsResponse","then","i","JSON","stringify","undefined","name","point","coordinates","noticedChange","searchResult","Submitted","_this4","react","hidden","type","readOnly","disabled","Disabled","onChange","onBlur","onKeyDown","ref","input","React","LocationRiderControl","handleRidersChanged","handleAddLocationClicked","handleSearchResultChanged","submitted","NumRiders","SubmitEnabled","Preloaded","e","parseInt","notifyLocationRiderChanged","resetSubmitEnabled","handleLocationRiderChanged","notifySubmitLocationRider","submitLocationRider","enterLocationControl_EnterLocationControl","style","display","className","onClick","visibility","LocationRiderCollectionControl","LocationRiders","Array","handleSubmitRider","resetRidersFromProps","deepEqual","locationRider","index","locationRiders","resetLocationRiders","push","Enumerable","from","sum","handleLocationRidersChanged","blankitem","locationRiderControl_LocationRiderControl","CollectionKey","length","toString","itemMap","map","HoursMinutes","totalMinutes","hours","minutes","Math","floor","round","ItineraryViewType","Arrival","Bus","ItineraryInstructionsControl","handleArrivalViewTypeChanged","handleBusViewTypeChanged","ViewType","renderByBus","renderByArrival","handleViewTypeChanged","date","Date","fixAMPM","toLocaleDateString","toLocaleTimeString","includes","replace","linq","condensedInstructions","orderBy","startTime","valueOf","toArray","quantity","agent","location","arrive","leave","miles","formatDate","formatTime","endTime","passengers","toFixed","thenBy","minHoursMinutes","minRouteTime","maxHoursMinutes","maxRouteTime","fullSummary","minDistance","maxDistance","instructionRenders","selected","InstructionSummaryControl","collapsed","calculateState","startingPoint","totalHours","condensedInstructionSet","totalDistance","totalMiles","citiesMissed","missedCities","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","missed","city","riders","err","return","substr","numAgents","numRiders","Collapsible_default","trigger","itineraryInstructionsControl_ItineraryInstructionsControl","dateDiff","require","itineraryItem","dwellTime","openingTime","closingTime","startingTime","endLocationName","durationMinutes","agentNames","Set","instructionsSetsLinq","instructionsByAgent","groupBy","max","last","first","min","m","calculateDuration","add","size","instruction","adjustTimeFormat","calcMinutes","instructionSet","agentItinerary","instructions","distance","calcdistance","instructionType","skip","multipleStopAggregation","visit","skipTwo","aggregatedQuantities","condensed","mileCount","multipleStopsAtStartingLocation","NaN","arrival","ItinineraryResponse","destinationName","instructionSets","citiesVisited","agentItineraries","where","orderedInstructions","selectMany","distinct","unscheduledItems","select","dt","getTime","forEach","condensedInstructionAgent","lastInstruction","diff","condensedInstruction","addmin","add_minutes","dateformat","ItineraryRequest","agents","itineraryItems","ItineraryService","arguments","semaphore","Semaphore","setDate","getDate","setTime","_getItinerary","asyncToGenerator","mark","_callee2","getItineraryRequest","maxAgents","agentCount","release","itineraryResponse","callbackUrl","callbackTimeout","promiseGetResponse","_context2","searchParams","sr","latitude","longitude","getYesterday","addHours","capacity","busCapacities","shifts","endLocation","startLocation","acquire","request","resolveWithFullResponse","json","callbackInSeconds","Promise","resolve","reject","wait","onTimeout","_ref","parse","setTimeout","clearTimeout","apply","finally","_x","ItineraryCollectionService","itinerary","getItinerariesRequest","additionalStops","minBusCapacity","searchResults","numAdditionalStops","leftOver","additionalStop","addStops","_getItineraries","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","_itinerary","responses","keys","responsesFiltered","_i","_responses","_response","returnedValue","addExtraStops","getItinerary","t0","finish","all","r","has","itineraries","orderByDescending","ItinerariesControl","endOfToday","dateMath","ninePm","subtractDay","Arrivaltime","handleArrivalTimeChanged","ItinerariesResponse","responseList","instructionList","instructionSummaryControl_InstructionSummaryControl","BusCapacityControl","handleBusCapacityChanged","handleAddBus","handleDeleteBus","capacities","Guid","create","update","defineProperty","$set","$push","$splice","_this5","numericInputs","react_numeric_input","maxBuses","defaultProps","rallySvc","rallyService","_getTrips","eventId","RallyEventControl","handleEventIdChanged","handleSubmit","getTrips","trip","rallyTripReceived","LandingPageControl","itineraryCollection","searchResultHashmap","handleDestinationChanged","DwellTime","initializeArrivalTime","Loading","CanSubmit","Destination","SearchCount","handleDwellTimeChanged","handleMultipleItinerarySearch","handleSearchItineraries","handleReadjustForArrival","handleBusCapacitiesChanged","handleRallyTripsRecieved","rallyTrips","Schedule","DestinationArrivalTime","DestinationCity","CityStateAbbr","any","State","RidersBookedOnTrip","RallyLocationRiders","OriginDepartureLocation","OriginCity","DerivedPickupLatLng","RallyEventControl_RallyEventControl","entry_default","BusCapacityControl_BusCapacityControl","locationRiderCollectionControl_LocationRiderCollectionControl","itinerariesControl_ItinerariesControl","BusCapacities","val","SearchResults","research","existingDuration","duration","it","readjustForArrival","skipReadjust","getItineraries","is","handleReadjustForArrivalBySubtractDuration","rootElement","document","getElementById","render","LandingPageControl_LandingPageControl"],"mappings":"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","file":"static/js/main.e7e3aa9b.chunk.js","sourcesContent":["import * as rm from \"typed-rest-client/RestClient\";\r\nimport * as React from \"react\";\r\nimport \"../styles.css\";\r\nimport { IBingMapsResponse, IResource } from \"../bing\";\r\n\r\nasync function getBingMapsResponse(query: string): Promise<IResource> {\r\n    console.log(\"running search\");\r\n    const rest = new rm.RestClient(\"rest-samples\", \"https://dev.virtualearth.net\");\r\n    const response = await rest.get<\r\n        IBingMapsResponse\r\n    >(\r\n        `/REST/v1/Locations?q=${query}&key=ArLJodQ7fEaQ2dfy3lIHWJrJILC35_Qj0EpT8TCy3ls96pl6sqCdlu18bo8j_tbM`\r\n    );\r\n    // console.log(\"the response:\" + JSON.stringify(response));\r\n    return response.result!.resourceSets[0].resources[0];\r\n}\r\n\r\ninterface IEnterLocationState {\r\n    SearchQuery?: string;\r\n    SearchResult: string;\r\n    SearchResultVisible: boolean;\r\n    Coords: ILatLong;\r\n    LastQuery?: string;\r\n    Submitted?: boolean;\r\n}\r\n\r\nexport interface ILatLong {\r\n    Lat: number;\r\n    Long: number;\r\n}\r\n\r\nexport interface ISearchResult {\r\n    SearchResult?: string;\r\n    SearchQuery?: string;\r\n    Coords?: ILatLong;\r\n}\r\n\r\nexport interface ISearchParam extends ISearchResult {\r\n    EndTime?: Date;\r\n    StartTime?: Date;\r\n    Riders?: number;\r\n}\r\n\r\nexport class SearchParam implements ISearchParam {\r\n    constructor(public SearchResult: string,\r\n        public Riders: number,\r\n        public Coords: ILatLong,\r\n        public StartTime?: Date,\r\n        public EndTime?: Date) {\r\n\r\n    }\r\n}\r\n\r\nexport interface IEnterLocationControlProps {\r\n    searchResultsChanged: (arg0: ISearchResult) => void;\r\n    SearchResult?: ISearchResult;\r\n    Disabled?:boolean;\r\n}\r\n\r\nexport class EnterLocationControl extends React.Component<\r\n    IEnterLocationControlProps,\r\n    IEnterLocationState\r\n> {\r\n    constructor(props: Readonly<IEnterLocationControlProps>) {\r\n        super(props);\r\n        this.handleSearchChanged = this.handleSearchChanged.bind(this);\r\n        this.handleSearchBlur = this.handleSearchBlur.bind(this);\r\n        this.handleKeyDown = this.handleKeyDown.bind(this);\r\n        //TODO:Just set the default props\r\n        const stateFromProps = this.getStateFromprops();\r\n        this.state = {\r\n            SearchResultVisible: false,\r\n            ...stateFromProps\r\n        };\r\n        this.inputElement = null;\r\n    }\r\n\r\n    getStateFromprops() {\r\n        const searchResult = \"\";\r\n        const coords = { Lat: 0, Long: 0 };\r\n        return {\r\n            SearchQuery: this.props.SearchResult && this.props.SearchResult.SearchQuery\r\n                ? this.props.SearchResult.SearchQuery\r\n                : \"\",\r\n            SearchResult: this.props.SearchResult && this.props.SearchResult.SearchResult\r\n                ? this.props.SearchResult.SearchResult\r\n                : searchResult,\r\n            Coords: this.props.SearchResult && this.props.SearchResult.Coords ? this.props.SearchResult.Coords : coords\r\n        };\r\n    }\r\n\r\n    raiseSearchResultsChanged() {\r\n        this.props.searchResultsChanged({\r\n            SearchResult: this.state.SearchResult,\r\n            Coords: this.state.Coords,\r\n            SearchQuery: this.state.SearchQuery\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps: IEnterLocationControlProps, prevState: IEnterLocationState) {\r\n        if (prevState.SearchQuery != this.state.SearchQuery) {\r\n            this.raiseSearchResultsChanged();\r\n            return;\r\n        }\r\n        if (prevProps.SearchResult && this.props.SearchResult) {\r\n            if (prevProps.SearchResult.SearchQuery != this.props.SearchResult.SearchQuery) {\r\n                this.setState(this.getStateFromprops(),\r\n                    () => this.resetCoordsFromBing(this.props.SearchResult!.SearchQuery!));\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.inputElement!.focus();\r\n    }\r\n\r\n    inputElement: HTMLInputElement | null;\r\n\r\n    handleSearchChanged(event) {\r\n        this.setState({ LastQuery: this.state.SearchQuery });\r\n        console.log(`handlesearch changed last query is ${this.state.LastQuery}`);\r\n\r\n        this.setState({\r\n            SearchQuery: event.target.value,\r\n            SearchResultVisible: true\r\n        });\r\n        this.resetCoordsFromBing(event.target.value);\r\n    }\r\n\r\n    resetCoordsFromBing(search: string) {\r\n        getBingMapsResponse(search).then(i => {\r\n\r\n            console.log(`last query is ${this.state.LastQuery}`);\r\n            console.log(`maps Response: ${JSON.stringify(i)}`);\r\n            if (i === undefined)\r\n                return;\r\n            this.setState({\r\n                    SearchResult: i.name,\r\n                    Coords: { Lat: i.point.coordinates[0], Long: i.point.coordinates[1] }\r\n                },\r\n                this.raiseSearchResultsChanged);\r\n        });\r\n    }\r\n\r\n    noticedChange(): boolean {\r\n        console.log(`last query is ${this.state.LastQuery}`);\r\n        console.log(`search query is ${this.state.SearchQuery}`);\r\n        console.log(`search result is ${this.state.SearchResult}`);\r\n        if (this.state.LastQuery !== this.state.SearchQuery) {\r\n            this.setState({ LastQuery: this.state.SearchQuery });\r\n\r\n            console.log(`noticed change to ${this.state.LastQuery}`);\r\n            return true;\r\n        } else {\r\n            console.log(\"noticed no change\");\r\n            return false;\r\n        }\r\n    }\r\n\r\n    handleSearchBlur(event) {\r\n        if (!this.noticedChange()) return;\r\n        const searchResult = this.state.SearchQuery === \"\" ? \"\" : this.state.SearchResult;\r\n        this.setState({\r\n            SearchQuery: searchResult,\r\n            SearchResultVisible: false\r\n        });\r\n        this.setState({ LastQuery: searchResult });\r\n        if (searchResult === \"\") return;\r\n        this.setState({\r\n            Submitted: true\r\n        });\r\n        this.raiseSearchResultsChanged();\r\n\r\n    }\r\n\r\n    handleKeyDown = (event: React.KeyboardEvent<HTMLDivElement>): void => {\r\n        // 'keypress' event misbehaves on mobile so we track 'Enter' key via 'keydown' event\r\n        if (event.key === \"Enter\") {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            this.inputElement!.blur();\r\n            //this.handleSearchBlur(null);\r\n        }\r\n        if (this.state.SearchQuery === \"\") {\r\n            this.setState({ SearchResultVisible: false });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let searchResult: Object = <div hidden={true}/>;\r\n        if (this.state.SearchResultVisible) {\r\n            searchResult = (\r\n                <div>\r\n                    <input type=\"text\" value={this.state.SearchResult} readOnly={true}/>\r\n                    <br/>\r\n                </div>\r\n            );\r\n        }\r\n        return (\r\n            <span>\r\n                <input disabled={this.props.Disabled}\r\n                    type=\"text\"\r\n                    value={this.state.SearchQuery}\r\n                    onChange={this.handleSearchChanged}\r\n                    onBlur={this.handleSearchBlur}\r\n                    onKeyDown={this.handleKeyDown}\r\n                    ref={input => (this.inputElement = input)}/>\r\n                {searchResult}\r\n            </span>\r\n        );\r\n    }\r\n}","import * as React from \"react\";\r\nimport { EnterLocationControl, ISearchResult, ILatLong } from \"./enterLocationControl\";\r\nimport { LatLng } from \"../Services/rallyService\";\r\n\r\nexport interface ILocationRider {\r\n    SearchResult?: string;\r\n    NumRiders?: number;\r\n    Coords?: ILatLong;\r\n    SearchQuery?: string;\r\n}\r\n\r\nexport interface ILocationRiderControlState extends ILocationRider {\r\n    SubmitEnabled: boolean;\r\n    Submitted: boolean;\r\n    Preloaded: boolean;\r\n}\r\n\r\nexport interface ILocationRiderControlProps {\r\n    handleLocationRiderChanged?: (locationRider: ILocationRider) => void;\r\n    submitLocationRider: (locationRider: ILocationRider) => void;\r\n    NumRiders?: number;\r\n    SearchResult?: string;\r\n    Coords?: LatLng;\r\n}\r\n\r\nexport class LocationRiderControl extends React.Component<ILocationRiderControlProps,\r\n    ILocationRiderControlState> {\r\n    constructor(props: Readonly<ILocationRiderControlProps>) {\r\n        super(props);\r\n        this.handleRidersChanged = this.handleRidersChanged.bind(this);\r\n        this.handleAddLocationClicked = this.handleAddLocationClicked.bind(this);\r\n        this.handleSearchResultChanged = this.handleSearchResultChanged.bind(this);\r\n        let submitted = false;\r\n        if (props.NumRiders || props.SearchResult) {\r\n            submitted = true;\r\n        }\r\n        this.state = {\r\n            NumRiders: props.NumRiders,\r\n            SearchQuery: props.SearchResult,\r\n            SearchResult: props.SearchResult,\r\n            SubmitEnabled: false,\r\n            Coords: props.Coords,\r\n            Preloaded: submitted,\r\n            Submitted: false\r\n        };\r\n    }\r\n\r\n    handleRidersChanged(e) {\r\n        this.setState({ NumRiders: parseInt(e.target.value) },\r\n            () => {\r\n                this.notifyLocationRiderChanged();\r\n                this.resetSubmitEnabled();\r\n            });;\r\n    }\r\n\r\n    handleSearchResultChanged(e: ISearchResult) {\r\n        console.log(\"handleSearchResultsChanged \");\r\n        this.setState({ SearchResult: e.SearchResult, Coords: e.Coords! }, this.resetSubmitEnabled);\r\n\r\n        this.notifyLocationRiderChanged();\r\n\r\n    }\r\n\r\n    notifyLocationRiderChanged() {\r\n        if ((this.state.Submitted || this.state.Preloaded) && this.props.handleLocationRiderChanged)\r\n            this.props.handleLocationRiderChanged({\r\n                SearchResult: this.state.SearchResult,\r\n                SearchQuery: this.state.SearchQuery,\r\n                NumRiders: this.state.NumRiders,\r\n                Coords: this.state.Coords\r\n            });\r\n    }\r\n\r\n    handleAddLocationClicked() {\r\n        this.notifySubmitLocationRider();\r\n        this.setState({ Submitted: true });\r\n    }\r\n\r\n    notifySubmitLocationRider() {\r\n        this.props.submitLocationRider(this.state);\r\n    }\r\n\r\n    resetSubmitEnabled() {\r\n        if (this.state.NumRiders && this.state.SearchResult) {\r\n            this.setState({ SubmitEnabled: true });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <table>\r\n                   <td></td>\r\n                   <td></td>\r\n                   <tr>\r\n                       <EnterLocationControl\r\n                           SearchResult={{\r\n              SearchQuery: this.state.SearchQuery,\r\n              SearchResult: this.state.SearchResult,\r\n              Coords: this.state.Coords\r\n          }}\r\n                           searchResultsChanged={this.handleSearchResultChanged} Disabled={this.state.NumRiders === 0}/>\r\n                       <div style={{ display: \"inline-block\" }}>\r\n                           <label className=\"RidersLabel\"># Riders</label><input className=\"Riders\" value={this.state.NumRiders\r\n} onChange={this.handleRidersChanged}/>\r\n                           <button className=\"AddLocation\" onClick={this.handleAddLocationClicked} disabled={!this.state.SubmitEnabled\r\n} style={{ visibility: this.state.Submitted || this.state.Preloaded ? \"hidden\" : \"visible\" }}>Add location</button>\r\n                       </div>\r\n                   </tr>\r\n               </table>;\r\n    }\r\n}","import { EnterLocationControl, ISearchResult, ISearchParam } from \"./enterLocationControl\";\r\nimport * as React from \"react\";\r\nimport { LocationRiderControl, ILocationRider } from \"./locationRiderControl\";\r\nimport deepEqual from 'deep-equal';\r\nimport { Guid } from \"guid-typescript\";\r\nimport Enumerable from \"linq\";\r\n\r\nexport interface ILocationRiderCollectionControlProps{\r\nhandleLocationRidersChanged:(locationRiders:ILocationRider[])=>void;\r\nLocationRiders?:ILocationRider[];\r\nCollectionKey:string;\r\n}\r\nexport interface ILocationRiderCollectionControlState{\r\n  LocationRiders:ILocationRider[];\r\n  NumRiders:number;\r\n}\r\nexport class LocationRiderCollectionControl extends React.Component<ILocationRiderCollectionControlProps, ILocationRiderCollectionControlState> {\r\n  constructor(props: Readonly<ILocationRiderCollectionControlProps>) {\r\n    super(props);\r\n    this.state = { LocationRiders: new Array(), NumRiders:0 };\r\n    this.handleLocationRiderChanged = this.handleLocationRiderChanged.bind(this);\r\n    this.handleSubmitRider = this.handleSubmitRider.bind(this);\r\n    this.resetRidersFromProps();\r\n  }\r\n  resetRidersFromProps(){\r\n    if(this.props.LocationRiders){\r\n      this.setState({LocationRiders:this.props.LocationRiders});\r\n    }\r\n  }\r\n  componentDidUpdate(prevProps:ILocationRiderCollectionControlProps){\r\n    if(!deepEqual(prevProps.LocationRiders, this.props.LocationRiders)){\r\n      this.resetRidersFromProps();\r\n    }\r\n  }\r\n  handleLocationRiderChanged(locationRider: ILocationRider, index:number){\r\n    var locationRiders = this.state.LocationRiders;\r\n    locationRiders[index] = locationRider;\r\n  this.resetLocationRiders(locationRiders);\r\n  }\r\nhandleSubmitRider(locationRider: ILocationRider){\r\n  var locationRiders = this.state.LocationRiders;\r\n  locationRiders.push(locationRider);\r\n  this.resetLocationRiders(locationRiders);\r\n}\r\nresetLocationRiders(locationRiders:ILocationRider[]){\r\n  this.setState({LocationRiders:locationRiders, NumRiders:Enumerable.from(locationRiders).sum(i=>i.NumRiders!)}, ()=> this.props.handleLocationRidersChanged(this.state.LocationRiders));\r\n\r\n}\r\n  render() {\r\n    let blankitem = (\r\n      <LocationRiderControl key={this.props.CollectionKey+ (this.state.LocationRiders.length==0? \"-1\".toString():this.state.LocationRiders.length.toString())}\r\n      submitLocationRider={(e)=>this.handleSubmitRider(e)}\r\n     />\r\n  );\r\n    const items = new Array();\r\n    var itemMap = this.state.LocationRiders.map((locationRider, index)=>\r\n    <LocationRiderControl key={this.props.CollectionKey+index.toString()} NumRiders={locationRider.NumRiders} SearchResult={locationRider.SearchResult} Coords={locationRider.Coords}\r\n        submitLocationRider={(e)=>this.handleSubmitRider(e)} handleLocationRiderChanged={e=>this.handleLocationRiderChanged(e, index)}\r\n    />);\r\n    \r\n    itemMap.push(blankitem);\r\n    return <div>Total Riders:{this.state.NumRiders}<ol>{itemMap}</ol></div>;\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { instruction, instructionSet, condensedInstruction, condensedInstructionSet } from \"../Services/itinerary\";\r\nimport * as linq from \"linq\";\r\nimport { RadioGroup, RadioButton } from 'react-radio-buttons';\r\nexport interface InstructionControlProps {\r\n    condensedInstructions: condensedInstructionSet;\r\n}\r\nclass HoursMinutes {\r\n    hours: number;\r\n    minutes: number;\r\n    constructor(totalMinutes: number) {\r\n        this.hours = Math.floor(totalMinutes / 60);\r\n        this.minutes = Math.round(totalMinutes % 60 + 0);\r\n    }\r\n}\r\nexport class ItineraryViewType {\r\n    static Arrival = \"Arrival\";\r\n    static Bus = \"Bus;\"\r\n}\r\nexport interface ItineraryInstructionsControlState {\r\n    ViewType: string;\r\n}\r\nexport class ItineraryInstructionsControl extends React.Component<InstructionControlProps, ItineraryInstructionsControlState>{\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleArrivalViewTypeChanged = this.handleArrivalViewTypeChanged.bind(this);\r\n        this.handleBusViewTypeChanged = this.handleBusViewTypeChanged.bind(this);\r\n        this.state = { ViewType: ItineraryViewType.Arrival };\r\n        this.renderByBus = this.renderByBus.bind(this);\r\n        this.renderByArrival = this.renderByArrival.bind(this);\r\n        this.handleViewTypeChanged = this.handleViewTypeChanged.bind(this);\r\n    }\r\n    formatDate(date: string) {\r\n        if (!date)\r\n            return '';\r\n        return new Date(this.fixAMPM(date)).toLocaleDateString();\r\n    }\r\n    formatTime(date: string) {\r\n        if (!date)\r\n            return '';\r\n        return new Date(this.fixAMPM(date)).toLocaleTimeString();\r\n    }\r\n    fixAMPM(date: string) {\r\n        if (date.includes('P')) {\r\n            return date.replace('P', ' ') + ' PM';\r\n        }\r\n        if (date.includes('A')) {\r\n            return date.replace('A', ' ') + ' AM';\r\n        }\r\n        return date;\r\n    }\r\n    handleArrivalViewTypeChanged(e) {\r\n        this.setState({ ViewType: ItineraryViewType.Arrival });\r\n    }\r\n    handleBusViewTypeChanged(e) {\r\n        this.setState({ ViewType: ItineraryViewType.Bus });\r\n    }\r\n    renderByArrival() {\r\n        let instructionRenders = linq.from(this.props.condensedInstructions.condensedInstructions)\r\n            .orderBy(i => new Date(this.fixAMPM(i.startTime)).valueOf()).toArray().map(\r\n                (i) => {\r\n                    let loc;\r\n                    let place;\r\n                    let endtime;\r\n                    let duration;\r\n                    let quantity;\r\n                    let agent;\r\n                    let location;\r\n                    let arrive;\r\n                    let leave;\r\n                    let miles;\r\n                    agent = <td>{i.agent}</td>;\r\n                    location = <td>{i.location}</td>;\r\n                    arrive = <td>{this.formatDate(i.startTime)}&nbsp;{this.formatTime(i.startTime)}</td>;\r\n                    leave = <td>{i.endTime ? this.formatDate(i.endTime) : ''}&nbsp;{i.endTime\r\n                                ? this.formatTime(i.endTime)\r\n                                : ''}</td>;\r\n                    quantity = <td>{i.passengers}</td>;\r\n                    miles = <td>{i.miles.toFixed(2)}</td>;\r\n                    return <tr>{agent}{location}{arrive}{leave}{quantity}{miles}</tr>;\r\n                }\r\n            );\r\n        return instructionRenders;\r\n    }\r\n\r\n    renderByBus() {\r\n        let instructionRenders = linq.from(this.props.condensedInstructions.condensedInstructions)\r\n            .orderBy(i => i.agent).thenBy(i => new Date(this.fixAMPM(i.startTime)).valueOf()).toArray().map(i => {\r\n                let quantity;\r\n                let agent;\r\n                let location;\r\n                let arrive;\r\n                let leave;\r\n                let miles;\r\n                agent = <td>{i.agent}</td>;\r\n                location = <td>{i.location}</td>;\r\n                arrive = <td>{this.formatDate(i.startTime)}&nbsp;{this.formatTime(i.startTime)}</td>;\r\n                leave = <td>{i.endTime ? this.formatDate(i.endTime) : ''}&nbsp;{i.endTime\r\n                            ? this.formatTime(i.endTime)\r\n                            : ''}</td>;\r\n                quantity = <td>{i.passengers}</td>;\r\n                miles = <td>{i.miles.toFixed(2)}</td>;\r\n                return <tr>{agent}{location}{arrive}{leave}{quantity}{miles}</tr>;\r\n            });\r\n        return instructionRenders;\r\n    }\r\n    handleViewTypeChanged(e) {\r\n        this.setState({ViewType:e.target.value});\r\n    }\r\n    render() {\r\n        let minHoursMinutes = new HoursMinutes(this.props.condensedInstructions.minRouteTime);\r\n        let maxHoursMinutes = new HoursMinutes(this.props.condensedInstructions.maxRouteTime);\r\n        let fullSummary =\r\n            `Min Dist:${this.props.condensedInstructions.minDistance.toFixed(1)} mi Max Dist:${\r\n            this.props.condensedInstructions.maxDistance.toFixed(1)} mi Min Time:${minHoursMinutes.hours} hrs ${\r\n            minHoursMinutes.minutes} min Max Time:${maxHoursMinutes.hours} hrs ${maxHoursMinutes.minutes} min`;\r\n        let orderByStartTimes = linq.from(this.props.condensedInstructions.condensedInstructions).orderBy(i => {\r\n            let orderby = new Date(this.fixAMPM(i.startTime)).valueOf();\r\n            return orderby;\r\n        }).toArray();\r\n        /* if (orderByStartTimes[orderByStartTimes.length - 1].location == \"1500 Southwest 8th Street\") {\r\n             console.log(JSON.stringify(orderByStartTimes));\r\n         }*/\r\n        let instructionRenders = this.state.ViewType === ItineraryViewType.Arrival ? this.renderByArrival() : this.renderByBus();\r\n        return <div>\r\n            <h3>{fullSummary}</h3>\r\n            <div>\r\n                <h4>View By</h4>\r\n                <select onChange={this.handleViewTypeChanged} value={this.state.ViewType}>\r\n                    <option value=\"Arrival\" selected={true}>Arrival</option>\r\n                    <option value=\"Bus\">Bus</option>\r\n                </select>\r\n                </div>\r\n            <table>\r\n                <tr>\r\n                    <th>Agent</th>\r\n                    <th>Location</th>\r\n                    <th>Arrive</th>\r\n                    <th>Leave</th>\r\n                    <th># Riders</th>\r\n                    <th>Miles</th>\r\n                </tr>\r\n                {instructionRenders}\r\n            </table></div>;\r\n    }\r\n}","import * as React from 'react';\r\nimport { instructionSet, condensedInstructionSet } from '../Services/itinerary';\r\nimport { totalmem } from 'os';\r\nimport { ItineraryInstructionsControl } from './itineraryInstructionsControl';\r\nimport Collapsible from 'react-collapsible';\r\nexport interface IInstructionSummaryControlProps{\r\n    condensedInstructionSet:condensedInstructionSet;\r\n}\r\nexport interface IInstructionSummaryControlState{\r\n    collapsed?:boolean;\r\n    totalHours:number;\r\n    totalMinutes:number;\r\n    totalDistance:number;\r\n    startingPoint:string;\r\n}\r\n\r\nexport class InstructionSummaryControl extends React.Component<IInstructionSummaryControlProps, IInstructionSummaryControlState>{\r\n    constructor(props){\r\n        super(props);\r\n        let collapsed ={collapsed:true};\r\n \r\n        this.state = {...collapsed, ...this.calculateState(), startingPoint:''};\r\n    }\r\n    calculateState(){\r\n        let calc = {totalHours:Math.floor(this.props.condensedInstructionSet.maxRouteTime/60), \r\n            totalMinutes:this.props.condensedInstructionSet.maxRouteTime%60, totalDistance:this.props.condensedInstructionSet.totalMiles};\r\n        return calc;\r\n    }\r\n    componentDidUpdate(){\r\n        return;\r\n        let calc = this.calculateState();\r\n            if(this.state.totalDistance!=calc.totalDistance || this.state.totalHours!=calc.totalHours || this.state.totalMinutes!=calc.totalMinutes){\r\n                this.setState(calc);        \r\n            }\r\n        }\r\n    render(){\r\n        let citiesMissed='';\r\n        if(this.props.condensedInstructionSet.missedCities && this.props.condensedInstructionSet.missedCities.length>0){\r\n            citiesMissed=' Cities Missed:[';\r\n            for(let missed of this.props.condensedInstructionSet.missedCities){\r\n                citiesMissed+=missed.city+` - Riders: ${missed.riders}, `;\r\n            }\r\n            citiesMissed = citiesMissed.substr(0, citiesMissed.length-2);\r\n            citiesMissed+=']';\r\n        }\r\n         \r\n        let fullSummary = `Total Time:${this.state.totalHours} hrs ${this.state.totalMinutes.toFixed()} min Total Distance:${this.props.condensedInstructionSet.totalMiles.toFixed(1)} mi #Buses:${this.props.condensedInstructionSet.numAgents} #Riders:${this.props.condensedInstructionSet.numRiders} Min Dist:${this.props.condensedInstructionSet.minDistance.toFixed(1)} mi Max Dist:${this.props.condensedInstructionSet.maxDistance.toFixed(1)} mi ${citiesMissed}`;\r\n        return <Collapsible trigger={fullSummary}>\r\n                   <ItineraryInstructionsControl condensedInstructions={this.props.condensedInstructionSet}/>\r\n               </Collapsible>;\r\n    }\r\n}","import { ISearchResult, ILatLong, ISearchParam } from \"../Controls/enterLocationControl\";\r\nimport * as Enumerable from 'linq';\r\nimport * as addsubtractdate from 'add-subtract-date';\r\nimport dateformat from 'dateformat';\r\n\r\nvar dateDiff = require('date-diff');\r\nexport interface location {\r\n  latitude: number;\r\n  longitude: number;\r\n}\r\nexport interface shift {\r\n  startTime?: string;\r\n  endTime?: string;\r\n  startLocation: location;\r\n  endLocation: location;\r\n}\r\nexport interface IitineraryItem {\r\n  name: string;\r\n  dwellTime: string;\r\n  location: location;\r\n  quantity:Array<number>;\r\n}\r\nexport class itineraryItem implements IitineraryItem {\r\n  constructor(\r\n    public name: string,\r\n    public dwellTime: string,\r\n    public location: location,\r\n    public quantity:Array<number>,\r\n    public openingTime?:string,\r\n    public closingTime?:string,\r\n    public startingTime?:string,\r\n    \r\n  ) {}\r\n}\r\nexport interface agent {\r\n  name: string;\r\n  capacity:Array<number>;\r\n  shifts: shift[];\r\n}\r\nexport interface IItineraryRequest {\r\n  agents: agent[];\r\n  itineraryItems: IitineraryItem[];\r\n}\r\nexport interface route {\r\n  startLocation: Location;\r\n  endLocatrion: Location;\r\n  startTime: string;\r\n  endTime: string;\r\n  totalTravelDistance: number;\r\n  totalTravelTime: string;\r\n  wayPoints: Location[];\r\n}\r\nexport interface instruction {\r\n  instructionType: string;\r\n  distance: number;\r\n  itineraryItem: IitineraryItem;\r\n  startTime: string;\r\n  endTime: string;\r\n  duration: string;\r\n  pickupRiders:number;\r\n}\r\nexport interface missedCity{\r\n  city:string;\r\n  riders:number;\r\n}\r\nexport class condensedInstructionSet{\r\n  public totalMiles:number=0;\r\n  public numAgents:number;\r\n  public maxRouteTime:number;\r\n  public minDistance:number;\r\n  public maxDistance:number;\r\n  public minRouteTime:number;\r\n  public numRiders:number;\r\n  constructor(public condensedInstructions:condensedInstruction[], public  endLocationName:string, \r\n  public missedCities?:Array<missedCity>\r\n  ){\r\n    let agentNames = new Set<string>();\r\n    var instructionsSetsLinq = Enumerable.from(condensedInstructions);\r\n    this.numRiders = instructionsSetsLinq.sum(i=>i.passengers);\r\n    var instructionsByAgent = instructionsSetsLinq.groupBy(i=>i.agent);\r\n    if(condensedInstructions.length>0){\r\n    this.maxRouteTime = instructionsByAgent.max(i=>(new dateDiff(new Date(i.last().startTime), new Date(i.first().startTime))).minutes());\r\n    this.minRouteTime = instructionsByAgent.min(i=>(new dateDiff(new Date(i.last().startTime),new Date(i.first().startTime))).minutes());\r\n    this.minDistance =instructionsByAgent.min(i=>i.sum(m=>m.miles));\r\n    this.maxDistance =instructionsByAgent.max(i=>i.sum(m=>m.miles));\r\n    this.durationMinutes = this.calculateDuration();\r\n    }\r\n    else{\r\n      //this is the empty set\r\n      this.maxRouteTime=this.minRouteTime=this.maxDistance=this.minDistance=this.durationMinutes=0;\r\n    }\r\n    for(let i = 0; i<condensedInstructions.length;i++){\r\n      this.totalMiles+=condensedInstructions[i].miles;\r\n      agentNames.add(condensedInstructions[i].agent);\r\n    } \r\n    this.numAgents = agentNames.size;\r\n    this.condensedInstructions = Enumerable.from(condensedInstructions).orderBy(i=>i.startTime).toArray();\r\n   }\r\n  durationMinutes:number;\r\n \r\n  private adjustTimeFormat(instruction:condensedInstruction){\r\n    instruction.startTime = instruction.startTime.replace('P', 'T').replace('A','T');\r\n  }\r\n  private calcMinutes(){\r\n   let diff = new dateDiff(new Date(this.condensedInstructions[this.condensedInstructions.length-1].startTime), new Date(this.condensedInstructions[0].startTime));\r\n    return diff.minutes();\r\n  }\r\n  calculateDuration(){\r\n  this.condensedInstructions.map(i=> this.adjustTimeFormat(i));\r\n   return this.calcMinutes();\r\n  }\r\n  \r\n}\r\n\r\n/*\r\nexport class condensedInstructionSetCollection{\r\n  public \r\n  constructor(public condensedInstructionSets:condensedInstructionSet[]){\r\n   // this.condensedInstructionSets = Enumerable.from(this.condensedInstructionSets).selectMany(i=>i.condensedInstructions).orderBy(i=>i.startTime)\r\n  }\r\n}*/\r\nexport interface condensedInstruction{\r\n  agent:string;\r\n  startTime: string;\r\n  endTime?: string;\r\n  miles:number;\r\n  location:string;\r\n  passengers:number;\r\n}\r\ninterface multipleStopAggregation{\r\n  index:number;\r\n  aggregatedQuantities:number;\r\n}\r\nexport class instructionSet{\r\n  constructor(agentItinerary:agentItinerary, public endLocationName:string){\r\n    this.instructions = agentItinerary.instructions;\r\n    this.agent = agentItinerary.agent;\r\n    this.distance = this.calcdistance();\r\n    this.durationMinutes = this.calcMinutes();\r\n     this.instructions.map(i=> this.adjustTimeFormat(i));\r\n  }\r\n  agent:agent;\r\n  instructions:instruction[];\r\n  get startingPoint():string{\r\n    return this.instructions[2].itineraryItem.name;\r\n  }\r\n  filterInstructions(instructions:instruction[]):instruction[]{\r\n    if(instructions[0].instructionType=='LeaveFromStartPoint'){\r\n      return Enumerable.from(instructions).skip(2).toArray();\r\n    }\r\n    return instructions;\r\n  }\r\n  distance:number;\r\n  durationMinutes:number;\r\n  private calcdistance(){\r\n    let sum =0;\r\n    for(let i = 0; i<this.instructions.length;i++){\r\n      if(this.instructions[i].distance)\r\n        {\r\n          sum+=this.instructions[i].distance;\r\n        }\r\n    }\r\n    return sum*0.000621371;\r\n  }\r\n  private adjustTimeFormat(instruction:instruction){\r\n    instruction.startTime = instruction.startTime.replace('P', 'T').replace('A','T');\r\n  }\r\n  private calcMinutes(){\r\n   let diff = new dateDiff(new Date(this.instructions[this.instructions.length-1].startTime), new Date(this.instructions[2].startTime));\r\n    return diff.minutes();\r\n  }\r\n  recalculateDuration(){\r\n  this.instructions.map(i=> this.adjustTimeFormat(i));\r\n   this.durationMinutes = this.calcMinutes();\r\n  }\r\n  \r\n  private multipleStopsAtStartingLocation(multipleStopAggregation:multipleStopAggregation):boolean{\r\n    let visit = this.instructions[multipleStopAggregation.index];\r\n      let skipTwo = this.instructions.length>multipleStopAggregation.index+2 ? this.instructions[multipleStopAggregation.index+2] : undefined;\r\n      if(skipTwo && skipTwo.instructionType=='VisitLocation' && skipTwo.itineraryItem.name==visit.itineraryItem.name\r\n      && multipleStopAggregation.aggregatedQuantities>=0){\r\n        multipleStopAggregation.aggregatedQuantities +=  visit.itineraryItem.quantity[0]; \r\n        return true;\r\n      }\r\n  return false;\r\n}\r\n  get condensedInstructions():condensedInstruction[]{\r\n    let condensed = new Array<condensedInstruction>();\r\n    var mileCount = 0;\r\n    var first = true;\r\n     let skip = 1;\r\n      if(this.instructions[0].instructionType==\"LeaveFromStartPoint\" && this.instructions[0].distance)\r\n        {\r\n          skip = 2;\r\n        }\r\n        let multipleStopAggregation:multipleStopAggregation = {index:0, aggregatedQuantities:0};\r\n    for(let index = skip; index<this.instructions.length-1;index++){\r\n      let visit = this.instructions[index];\r\n      if(visit.instructionType=='VisitLocation'){\r\n        multipleStopAggregation.index = index;\r\n        if(this.multipleStopsAtStartingLocation(multipleStopAggregation)){\r\n          index++;\r\n          continue;\r\n        }\r\n      condensed.push({agent:this.agent.name, startTime:visit.startTime, endTime:visit.endTime, location: visit.itineraryItem ? visit.itineraryItem.name : '',\r\n      miles:mileCount, passengers: visit.itineraryItem.quantity[0]+multipleStopAggregation.aggregatedQuantities});\r\n      multipleStopAggregation.aggregatedQuantities=0;\r\n      }\r\n      else{\r\n        if(first){\r\n          mileCount=0;\r\n          first=false;\r\n          continue;\r\n        }\r\n      mileCount+=visit.distance*0.000621371;\r\n      }\r\n    }\r\n    if(mileCount==NaN){\r\n      console.log('Mile count is nan for:'+JSON.stringify(this));\r\n    }\r\n    var arrival = this.instructions[this.instructions.length-1];\r\n    condensed.push({agent:this.agent.name, startTime:arrival.startTime, location: this.endLocationName,\r\n      miles:mileCount, passengers:0})\r\n    return condensed;\r\n  }\r\n}\r\nexport interface agentItinerary {\r\n  agent: agent;\r\n  instructions: instruction[];\r\n}\r\nexport interface resource {\r\n  agentItineraries: agentItinerary[];\r\n  unscheduledItems:IitineraryItem[];\r\n  callbackUrl:string;\r\n  callbackInSeconds:number;\r\n}\r\nexport interface resourceSet {\r\n  resources: resource[];\r\n}\r\nexport interface IItinineraryResponse {\r\n  resourceSets: resourceSet[];\r\n  instructionSets:instructionSet[];\r\n  readjustForArrival(date:Date);\r\n  condensedInstructionSet:condensedInstructionSet;\r\n}\r\nexport class ItinineraryResponse implements IItinineraryResponse{\r\n  public instructionSets:instructionSet[];\r\n  public condensedInstructionSet:condensedInstructionSet;\r\n  public citiesVisited:Array<string>;\r\n  public citiesMissed:Array<missedCity>;\r\n\r\n  constructor(public resourceSets: resourceSet[], public destinationName:string){\r\n    this.instructionSets = Enumerable.from(this.resourceSets[0].resources[0].agentItineraries).where(i=>i.instructions.length>3).toArray()\r\n    .map(i=> {\r\n          return new instructionSet(i, destinationName);\r\n    });\r\n    var instructionsSetsLinq = Enumerable.from(this.instructionSets);\r\n    var orderedInstructions = instructionsSetsLinq.selectMany(i=>i.condensedInstructions).orderBy(i=>i.startTime).toArray();\r\n    this.citiesVisited = instructionsSetsLinq.selectMany(i=>i.condensedInstructions).selectMany(i=>i.location).distinct().toArray();\r\n    this.citiesMissed = Enumerable.from(this.resourceSets[0].resources[0].unscheduledItems).select(i=> {return {city: i.name, riders:i.quantity[0]}}).toArray();\r\n    this.condensedInstructionSet = new condensedInstructionSet(orderedInstructions, destinationName, this.citiesMissed);\r\n  }\r\n   add_minutes(dt:Date, minutes:number):Date {\r\n    return new Date(dt.getTime() + minutes*60000);\r\n  }\r\n  readjustForArrival(date:Date){\r\n    Enumerable.from(this.condensedInstructionSet.condensedInstructions).groupBy(i=>i.agent)\r\n      .forEach(condensedInstructionAgent=>{\r\n          let lastInstruction = condensedInstructionAgent.last();\r\n          let endTime =new Date(lastInstruction.startTime);\r\n          console.log(\"Readjusting for end time: \"+endTime);\r\n          console.log(\"dateDiff:\"+dateDiff);\r\n          let diff:number =  new dateDiff(date, endTime).minutes()-1;\r\n          //TODO://One of the dates is getting passed in as a string, fix\r\n          console.log(`Got difference between '${date}' and '${lastInstruction.startTime}' as ${diff}`);\r\n          condensedInstructionAgent.forEach(condensedInstruction=>{\r\n            console.log(`Changing start time for instruction '${condensedInstruction.startTime}'`);\r\n            console.log(\"Readjusting for instruction set:\"+JSON.stringify(condensedInstruction));\r\n            let date = new Date(condensedInstruction.startTime);\r\n            console.log(`Changing start time for instruction date:'${date}'`);\r\n            let addmin = this.add_minutes(date, diff);\r\n            console.log(`Added '${diff}' minutes to ${date}:${addmin}`);\r\n            condensedInstruction.startTime = dateformat(addmin, 'yyyy-mm-ddThh:MM:ss');\r\n            if(condensedInstruction.endTime){\r\n              date = new Date(condensedInstruction.endTime);\r\n              addmin = this.add_minutes(date, diff);\r\n              condensedInstruction.endTime = dateformat(addmin, 'yyyy-mm-ddThh:MM:ss');\r\n              console.log(`Set startTime to ${condensedInstruction.startTime}`);        \r\n            }\r\n      });\r\n  });\r\n  this.condensedInstructionSet.condensedInstructions = Enumerable.from(this.condensedInstructionSet.condensedInstructions).orderBy(i=>i.startTime).toArray();\r\n  }\r\n}\r\nexport class ItineraryRequest implements IItineraryRequest {\r\n  constructor(\r\n    public agents: agent[],\r\n    public itineraryItems: IitineraryItem[]\r\n  ) {}\r\n}\r\nexport interface getItineraryRequest {\r\n  searchParams: ISearchParam[];\r\n  startLocation: ILatLong;\r\n  endLocation: ILatLong;\r\n  dwellTime: number;\r\n  startTime?:Date;\r\n  endTime?:Date;\r\n  numAgents:number;\r\n  endLocationName:string;\r\n  busCapacities:Array<number>\r\n}\r\nexport interface IItineraryService{\r\n  getItinerary(\r\n    getItineraryRequest: getItineraryRequest\r\n  ): Promise<IItinineraryResponse>;\r\n}\r\nexport interface ItinerariesRequest {\r\n  searchResults: ISearchParam[];\r\n  endLocation: ILatLong;\r\n  endLocationName:string;\r\n  dwellTime: number;\r\n  //minBuses?:number;\r\n  //maxBuses?:number;\r\n  //busCapacity?:number;\r\n  busCapacities:Array<number>\r\n}\r\nexport interface ItinerariesResponse {\r\n  itineraries:IItinineraryResponse[];\r\n}\r\n","import * as request from \"request-promise\";\r\nimport dateformat from 'dateformat';\r\nimport {Semaphore} from 'await-semaphore';\r\nimport { IItineraryService, getItineraryRequest, IItinineraryResponse, itineraryItem, ItineraryRequest, ItinineraryResponse } from \"./itinerary\";\r\nimport Enumerable from \"linq\";\r\n\r\n\r\nexport class ItineraryService implements IItineraryService {\r\n  semaphore = new Semaphore(25);\r\n  //constructor(private key:string='ArLJodQ7fEaQ2dfy3lIHWJrJILC35_Qj0EpT8TCy3ls96pl6sqCdlu18bo8j_tbM'){\r\n  //  constructor(private key:string='AqY5DsUaX9kUiNmpLaOZfzm6nV_wsCbyUfB_0z1Hk4CIUMNDjMSjk7VBSFIIgaHk'){\r\nconstructor(private key:string='Agm6W2UbGpxQdxwdk3hJWc_7x3YkDMPA6nwX-7sZyYWuP-A96R8Cnc5BccClWQIK'){  \r\n}\r\n  getYesterday():Date{\r\n    var date = new Date();\r\n    date.setDate(date.getDate()-1);\r\n    return date;\r\n  }\r\n  addHours(date:Date, hours:number){\r\n    var date = new Date(date.getTime());\r\n    date.setTime(date.getTime()+(hours*60*60*1000));\r\n  }\r\n  async getItinerary(getItineraryRequest: getItineraryRequest): Promise<IItinineraryResponse> {\r\n    var itineraryItems = Enumerable.from(getItineraryRequest.searchParams).where(i=>i.Riders!>0).toArray().map(sr => new itineraryItem(sr.SearchResult!, \"00:\" + getItineraryRequest.dwellTime + \":00\", {\r\n      latitude: sr.Coords!.Lat,\r\n      longitude: sr.Coords!.Long, \r\n    },[sr.Riders!]));\r\n    /*itineraryItems.push(new itineraryItem('Destination', \"00:15:00\", {\r\n      latitude: getItineraryRequest.endLocation.Lat,\r\n      longitude: getItineraryRequest.endLocation.Long\r\n    }, '2019-11-16T16:00:00', '2019-11-16T18:00:00'));*/\r\n    console.log(\"Searching for start time:\"+getItineraryRequest.startTime);\r\n    let startTime = getItineraryRequest.startTime==undefined? dateformat(this.getYesterday(), 'yyyy-mm-ddThh:MM:ss') : dateformat(getItineraryRequest.startTime, 'yyyy-mm-ddThh:MM:ss');\r\n    let endTime = getItineraryRequest.endTime==undefined? dateformat(this.addHours(this.getYesterday(), 12), 'yyyy-mm-ddThh:MM:ss') : dateformat(getItineraryRequest.endTime, 'yyyy-mm-ddThh:MM:ss');\r\n    startTime = startTime.replace('P', 'T').replace('A','T');\r\n    endTime = endTime.replace('P', 'T').replace('A','T');\r\n    var agents = new Array();\r\n    var maxAgents = getItineraryRequest.numAgents;\r\n    //TODO:Change for biz version\r\n    if(getItineraryRequest.numAgents>10){\r\n      maxAgents = 10;\r\n    }\r\n    for(var agentCount=0; agentCount<maxAgents; agentCount++){\r\n      agents.push({\r\n          capacity:[getItineraryRequest.busCapacities[agentCount]],\r\n          name: 'Bus_'+(agentCount+1),\r\n          shifts: [\r\n            {\r\n              startTime: startTime,\r\n              endTime: endTime,\r\n              endLocation: {\r\n                latitude: getItineraryRequest.endLocation.Lat,\r\n                longitude: getItineraryRequest.endLocation.Long\r\n              },\r\n              startLocation: {\r\n                latitude: getItineraryRequest.startLocation.Lat,\r\n                longitude: getItineraryRequest.startLocation.Long\r\n              }\r\n            }\r\n          ]\r\n        });\r\n    }\r\n    \r\n   /* var result = await request.post(\"https://dev.virtualearth.net/REST/V1/Routes/OptimizeItinerary?key=\"+this.key, {\r\n      resolveWithFullResponse: false,\r\n      json: new ItineraryRequest(agents, itineraryItems)\r\n    });*/\r\n    var release = await this.semaphore.acquire();\r\n     var result = await request.post(\"https://dev.virtualearth.net/REST/V1/Routes/OptimizeItineraryAsync?key=\"+this.key, {\r\n      resolveWithFullResponse: false,\r\n      json: new ItineraryRequest(agents, itineraryItems)\r\n    });\r\n    var itineraryResponse = (<IItinineraryResponse>result);\r\n     console.log(JSON.stringify(itineraryResponse));\r\n    \r\n    var callbackUrl = itineraryResponse.resourceSets[0].resources[0].callbackUrl;\r\n    var callbackTimeout = itineraryResponse.resourceSets[0].resources[0].callbackInSeconds;\r\n    if(callbackUrl){\r\n    let promiseGetResponse = new Promise<IItinineraryResponse>((resolve, reject) => {\r\n    let wait;\r\n    var onTimeout =async () => {\r\n    console.log('invoking callback url');\r\n    \r\n      result = await request.get(callbackUrl);\r\n      itineraryResponse = (<IItinineraryResponse>JSON.parse(result));\r\n     callbackUrl = itineraryResponse.resourceSets[0].resources[0].callbackUrl;\r\n      console.log(JSON.stringify(itineraryResponse));\r\n      if(!callbackUrl)\r\n        {\r\n          clearTimeout(wait);\r\n          resolve(itineraryResponse);\r\n        }\r\n        else{\r\n          wait = setTimeout(onTimeout, callbackTimeout*1000);\r\n        }\r\n    };\r\n    wait = setTimeout(onTimeout, callbackTimeout*1000);\r\n    });\r\n     return promiseGetResponse.then(i=> {\r\n       return new ItinineraryResponse((<IItinineraryResponse>JSON.parse(result)).resourceSets, getItineraryRequest.endLocationName);\r\n     }).finally(()=> release());\r\n    }\r\n   release();\r\n    return new ItinineraryResponse((<IItinineraryResponse>result).resourceSets, getItineraryRequest.endLocationName);\r\n  }\r\n}\r\n","import * as Enumerable from 'linq';\r\nimport { IItineraryService, ItinerariesRequest, ItinerariesResponse, IItinineraryResponse } from \"./itinerary\";\r\nimport { ISearchParam, ISearchResult } from '../Controls/enterLocationControl';\r\nexport interface IItineraryCollectionService{\r\n  getItineraries(getItinerariesRequest: ItinerariesRequest): Promise<ItinerariesResponse>;\r\n} \r\nexport class ItineraryCollectionService implements IItineraryCollectionService{\r\n  constructor(private itinerary: IItineraryService) {\r\n  }\r\n   addExtraStops(getItinerariesRequest:ItinerariesRequest){\r\n      let additionalStops = new Array<ISearchParam>();\r\n      let minBusCapacity = Enumerable.from(getItinerariesRequest.busCapacities).min();\r\n      for(let searchResult of getItinerariesRequest.searchResults){\r\n        if(searchResult.Riders!>minBusCapacity){\r\n          let riders = searchResult.Riders!;\r\n          let numAdditionalStops = Math.floor(riders/minBusCapacity);\r\n          let leftOver = riders%minBusCapacity;\r\n          if(leftOver==0){\r\n            numAdditionalStops--;\r\n          }\r\n          searchResult.Riders = minBusCapacity;\r\n          let additionalStop = {...searchResult};\r\n          for(let addStops = 1; addStops<=numAdditionalStops; addStops++){\r\n            additionalStops.push({...additionalStop});\r\n          }\r\n          if(leftOver!=0){\r\n            additionalStops[additionalStops.length-1].Riders = leftOver;\r\n          }\r\n        }\r\n      }\r\n      additionalStops.forEach(i=> getItinerariesRequest.searchResults.push(i));\r\n   }\r\n  async getItineraries(getItinerariesRequest: ItinerariesRequest): Promise<ItinerariesResponse> {\r\n    this.addExtraStops(getItinerariesRequest);\r\n    let response = new Array<Promise<IItinineraryResponse>>();\r\n    for(var numAgents = 1; numAgents<= getItinerariesRequest.busCapacities.length; numAgents++){\r\n    for (let result of Enumerable.from(getItinerariesRequest.searchResults).where(i=>i.Riders!>0)) {\r\n      let startDate =new Date(2019,11,17,10,0);\r\n      let endDate =new Date(2019,11,18,22,0);\r\n      \r\n      let itinerary = this.itinerary.getItinerary({numAgents:numAgents,endLocationName:getItinerariesRequest.endLocationName,\r\n        startLocation: result.Coords!, searchParams: getItinerariesRequest.searchResults,\r\n        dwellTime: getItinerariesRequest.dwellTime, endLocation: getItinerariesRequest.endLocation,\r\n        startTime:result.StartTime, endTime:result.EndTime, busCapacities:getItinerariesRequest.busCapacities\r\n      });\r\n      response.push(itinerary);\r\n    }\r\n    }\r\n    let responses = new Array<IItinineraryResponse>();\r\n    await Promise.all(response.map(m=>m.then(r=>responses.push(r))));\r\n    let keys = new Set<string>();\r\n    let responsesFiltered = new Array<IItinineraryResponse>();\r\n    for(let response of responses){\r\n      let key = response.condensedInstructionSet.durationMinutes+'_'+response.condensedInstructionSet.totalMiles+'_'+response.condensedInstructionSet.condensedInstructions.length;\r\n      if(!keys.has(key)){\r\n        responsesFiltered.push(response);\r\n        keys.add(key);\r\n      }\r\n    }\r\n    \r\n    let returnedValue = {\r\n      itineraries: Enumerable.from(responsesFiltered).\r\n        where(i=>i.instructionSets!==undefined)\r\n        .orderByDescending(i=>i.instructionSets.length)\r\n        .thenBy(i=>i.instructionSets.length>0 ? Enumerable.from( i.instructionSets).max(m=>m.durationMinutes): 0).select(i=>i).toArray()\r\n  };\r\n  return returnedValue;\r\n}\r\n}\r\n","import * as React from \"react\";\r\nimport * as dateMath from \"date-arithmetic\";\r\nimport { ItinerariesResponse } from \"../Services/itinerary\";\r\nimport { InstructionSummaryControl } from \"./instructionSummaryControl\";\r\n\r\ninterface ItinerariesControlState {\r\n    Arrivaltime: Date;\r\n}\r\n\r\nexport interface ItinerariesControlProps {\r\n    ItinerariesResponse?: ItinerariesResponse;\r\n}\r\n\r\nexport class ItinerariesControl extends React.Component<ItinerariesControlProps, ItinerariesControlState> {\r\n    constructor(props) {\r\n        super(props);\r\n        const endOfToday = dateMath.endOf(new Date(), \"day\");\r\n        const ninePm = dateMath.add(endOfToday, 20, \"hours\");\r\n        const subtractDay = dateMath.add(ninePm, -1, \"day\");\r\n        this.state = { Arrivaltime: dateMath.add(subtractDay, 1, \"minutes\") };\r\n        this.handleArrivalTimeChanged = this.handleArrivalTimeChanged.bind(this);\r\n    }\r\n\r\n    handleArrivalTimeChanged(date: Date) {\r\n        this.setState({ Arrivaltime: date });\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.ItinerariesResponse)\r\n            return <div/>;\r\n        let responseList: Object;\r\n        const instructionList = this.props.ItinerariesResponse.itineraries.map(m =>\r\n            <li>\r\n                <InstructionSummaryControl condensedInstructionSet={m.condensedInstructionSet}/>\r\n            </li>);\r\n        responseList = <ol>{instructionList}</ol>;\r\n        return <div>\r\n                   <h1>Itineraries:</h1>\r\n                   <ol>{responseList}</ol>\r\n               </div>;\r\n    }\r\n}","import * as React from \"react\";\r\nimport * as NumericInput from \"react-numeric-input\";\r\nimport update from 'immutability-helper';\r\nimport { Guid } from 'guid-typescript';\r\nexport interface IBusCapacityControlProps{\r\n    handleBusCapacityChanged:(capacities:Array<CapacityKey>)=>void;\r\n    maxBuses?:number;\r\n}\r\nexport interface CapacityKey{\r\n    capacity:number;\r\n    key:string;\r\n    index:number;\r\n}\r\nexport interface IBusCapacityControlState{\r\n    capacities:Array<CapacityKey>;\r\n}\r\nexport class BusCapacityControl extends React.Component<IBusCapacityControlProps, IBusCapacityControlState>{\r\n    constructor(props:IBusCapacityControlProps){\r\n        super(props);\r\n        this.handleBusCapacityChanged = this.handleBusCapacityChanged.bind(this);\r\n        this.handleAddBus = this.handleAddBus.bind(this);\r\n        this.handleDeleteBus = this.handleDeleteBus.bind(this);\r\n        let state ={capacities:new Array()};\r\n        state.capacities.push({capacity:50, key:Guid.create().toString(), index:0});\r\n        this.state = state;\r\n    }\r\n    componentDidMount(){\r\n        this.props.handleBusCapacityChanged(this.state.capacities);\r\n    }\r\n    handleBusCapacityChanged(e, index, key){\r\n        var state = this.state;\r\n        state = update(state, {capacities:{[index]:{$set:{capacity: e, index:index, key:key}}}});\r\n        this.setState(state, ()=>this.props.handleBusCapacityChanged(this.state.capacities));\r\n    }\r\n    handleAddBus(){\r\n        var state = this.state;\r\n        state = update(state, {capacities:{$push:[{capacity:50, key:Guid.create.toString(), index:this.state.capacities.length}]}});\r\n        this.setState(state, ()=>this.props.handleBusCapacityChanged(this.state.capacities));\r\n    }\r\n    handleDeleteBus(){\r\n        var state = this.state;\r\n        state = update(state, {capacities:{$splice:[[this.state.capacities.length-1]]}});\r\n        this.setState(state, ()=>this.props.handleBusCapacityChanged(this.state.capacities));\r\n    }\r\n    render(){\r\n        let numericInputs = this.state.capacities.map(i=> {\r\n           return <div>Bus# {i.index+1}<NumericInput value={i.capacity} key={i.key} onChange={(e)=> this.handleBusCapacityChanged(e, i.index, i.key)} max={100} min={1}/></div> \r\n        });\r\n        return    (<div><div>Enter bus capacity:</div>\r\n        {numericInputs}\r\n        <input type=\"submit\" value=\"Add bus\" onClick={this.handleAddBus} disabled={this.state.capacities.length>=this.props.maxBuses!}/>\r\n        <input type=\"submit\" value=\"Delete bus\" onClick={this.handleDeleteBus} disabled={this.state.capacities.length==1}/>\r\n   </div>);\r\n  \r\n    } \r\n    static defaultProps = {\r\n        maxBuses:10\r\n    } \r\n}\r\n","\r\nimport * as request from \"request-promise\";\r\nexport interface LatLng{\r\n    Lat:number;\r\n    Long:number;\r\n}\r\nexport interface city{\r\n    CityStateAbbr:string;\r\n}\r\nexport interface schedule{\r\n    OriginCity:city;\r\n    OriginDepartureLocation:string;\r\n    DestinationCity:city;\r\n    DestinationArrivalTime:string;\r\n}\r\nexport interface state{\r\n    RidersBookedOnTrip:number;\r\n}\r\nexport interface rallyTrip{\r\n    DerivedPickupLatLng:LatLng;\r\n    State:state;\r\n    Schedule:schedule;\r\n}\r\nexport class rallyService{\r\n    public async getTrips(eventId:string):Promise<rallyTrip[]>{\r\n        let result = await request.get(`https://rally-booking-preprod.azurewebsites.net/api/v1/booking-get-trips/${eventId}`);\r\n        return (<rallyTrip[]>JSON.parse(result));\r\n    }\r\n}","import * as React from \"react\";\r\nimport {rallyService, rallyTrip} from '../Services/rallyService';\r\nexport interface rallyEventControlState{\r\n    eventId:string;\r\n}\r\nexport interface rallyEventControlProps{\r\n    rallyTripReceived:(rallyTrips:rallyTrip[])=>void;\r\n}\r\nvar rallySvc = new rallyService();\r\nexport class RallyEventControl extends React.Component<rallyEventControlProps,rallyEventControlState>{\r\n    constructor(props){\r\n        super(props);\r\n        this.handleEventIdChanged = this.handleEventIdChanged.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.state = {eventId:''};\r\n    }\r\n    handleEventIdChanged(e){\r\n        this.setState({eventId: e.target.value});\r\n    }\r\n    handleSubmit(){\r\n        rallySvc.getTrips(this.state.eventId).then((trip)=> this.props.rallyTripReceived(trip));\r\n    }\r\n    render(){\r\n        return <div>\r\n            <label>Enter Rally Event Id:</label><input value={this.state.eventId} onChange={this.handleEventIdChanged} /><button onClick={this.handleSubmit}>Submit</button>\r\n        </div>\r\n    }\r\n}","import * as React from \"react\";\r\nimport * as NumericInput from \"react-numeric-input\";\r\nimport { LocationRiderCollectionControl } from \"./locationRiderCollectionControl\";\r\nimport { ISearchResult, ISearchParam, SearchParam } from \"./enterLocationControl\";\r\nimport { IItinineraryResponse, instructionSet, IItineraryService, ItinerariesResponse } from \"../Services/itinerary\";\r\nimport { EnterLocationControl } from \"./enterLocationControl\";\r\nimport { ItineraryInstructionsControl } from \"./itineraryInstructionsControl\";\r\nimport { InstructionSummaryControl } from \"./instructionSummaryControl\";\r\nimport { ItineraryService } from \"../Services/ItineraryService\";\r\nimport { ItineraryCollectionService } from \"../Services/ItineraryCollectionService\";\r\nimport DateTimePicker from \"react-datetime-picker\";\r\nimport * as dateMath from 'date-arithmetic';\r\nimport { ItinerariesControl } from \"./itinerariesControl\";\r\nimport { ILocationRider } from \"./locationRiderControl\";\r\nimport Enumerable from \"linq\";\r\nimport { BusCapacityControl, CapacityKey } from \"./BusCapacityControl\";\r\nimport { RallyEventControl } from \"./RallyEventControl\";\r\nimport { rallyTrip } from \"../Services/rallyService\";\r\ninterface IDisplayItinerariesState {\r\n  SearchResults?: ISearchParam[];\r\n  Destination?: ISearchResult;\r\n  ItineraryResponse?: IItinineraryResponse;\r\n  ItinerariesResponse?:ItinerariesResponse; \r\n  DwellTime?: number;\r\n  Arrivaltime:Date;\r\n  /*MinBuses:number;\r\n  MaxBuses:number;\r\n  BusCapacity:number,\r\n  */Loading:boolean,\r\n  CanSubmit:boolean,\r\n  BusCapacities?:Array<CapacityKey>,\r\n  RallyLocationRiders?:ILocationRider[];\r\n  SearchCount:number;\r\n}\r\nexport interface visibility{\r\n  visibility:'visible'|'hidden';\r\n}\r\nexport function boolVis(isVisible:boolean):visibility{\r\n  \r\n  return {visibility: isVisible ? 'visible':'hidden'}\r\n}\r\nexport class LandingPageControl extends React.Component<\r\n  {},\r\n  IDisplayItinerariesState\r\n> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.itinerary = new ItineraryService();\r\n    this.itineraryCollection = new ItineraryCollectionService(this.itinerary);\r\n    this.handleDestinationChanged = this.handleDestinationChanged.bind(this);\r\n\r\n    this.state = { DwellTime: 15, Arrivaltime: this.initializeArrivalTime(), Loading:false,CanSubmit:false, Destination:{\r\n      SearchQuery:'',\r\n    }, SearchCount:0};\r\n    this.handleDwellTimeChanged = this.handleDwellTimeChanged.bind(this);\r\n    //this.handleSingleItinerarySearch = this.handleSingleItinerarySearch.bind(this);\r\n    this.handleMultipleItinerarySearch = this.handleMultipleItinerarySearch.bind(this);\r\n    this.handleSearchItineraries = this.handleSearchItineraries.bind(this);\r\n    this.handleReadjustForArrival = this.handleReadjustForArrival.bind(this);\r\n    this.handleArrivalTimeChanged = this.handleArrivalTimeChanged.bind(this);\r\n    this.handleBusCapacitiesChanged = this.handleBusCapacitiesChanged.bind(this);\r\n    this.handleRallyTripsRecieved = this.handleRallyTripsRecieved.bind(this);\r\n  }\r\n  \r\n  initializeArrivalTime(){\r\n    let endOfToday = dateMath.endOf(new Date(),'day');\r\n    let ninePm = dateMath.add(endOfToday, 20, \"hours\");\r\n    let subtractDay = dateMath.add(ninePm, -1, \"day\");\r\n    return dateMath.add(subtractDay, 1, \"minutes\");\r\n  }\r\n  handleRallyTripsRecieved(rallyTrips:rallyTrip[]){\r\n    this.setState({Arrivaltime:new Date(rallyTrips[0].Schedule.DestinationArrivalTime), \r\n      Destination:{\r\n        SearchQuery:rallyTrips[0].Schedule.DestinationCity.CityStateAbbr,\r\n        SearchResult:rallyTrips[0].Schedule.DestinationCity.CityStateAbbr,\r\n        Coords:{Lat:25.927490234375,Long:-80.2232437133789}\r\n      },\r\n      SearchCount:this.state.SearchCount+1,\r\n      CanSubmit:Enumerable.from(rallyTrips).any(i=>i.State.RidersBookedOnTrip>0),\r\n    RallyLocationRiders:Enumerable.from(rallyTrips).select(i=> \r\n      { return {SearchResult:i.Schedule.OriginDepartureLocation ?i.Schedule.OriginDepartureLocation: i.Schedule.OriginCity.CityStateAbbr, NumRiders:i.State.RidersBookedOnTrip, Coords:{Lat:i.DerivedPickupLatLng.Lat, Long:i.DerivedPickupLatLng.Long}}}).toArray()});\r\n  }\r\n  itineraryCollection: ItineraryCollectionService;\r\n  itinerary: IItineraryService;\r\n  render() {\r\n    let responseList;\r\n    if (\r\n      this.state &&\r\n      this.state.ItinerariesResponse\r\n    ){\r\n      //TODO:Break this out into it's own control\r\n      let instructionList  = this.state.ItinerariesResponse.itineraries.map(m=>\r\n     <li><InstructionSummaryControl condensedInstructionSet = {m.condensedInstructionSet}/></li>);\r\n      responseList = <ol>{instructionList}</ol>;\r\n    }\r\n    return (<div>\r\n      <RallyEventControl rallyTripReceived={this.handleRallyTripsRecieved}/>\r\n        <div>\r\n          Enter destination:\r\n          <div>\r\n          <EnterLocationControl key=\"Destination\"\r\n            SearchResult={this.state.Destination!}\r\n            searchResultsChanged={this.handleDestinationChanged}\r\n          /></div>\r\n        </div>\r\n        <div>\r\n          Enter dwell time:\r\n          <br />\r\n          <NumericInput\r\n            value={this.state.DwellTime} max={120}\r\n            onChange={this.handleDwellTimeChanged}\r\n          />\r\n        </div>\r\n         Enter arrival time:\r\n    <br />\r\n    <DateTimePicker\r\n      value={this.state.Arrivaltime}\r\n      onChange={this.handleArrivalTimeChanged}\r\n    />\r\n    <BusCapacityControl handleBusCapacityChanged={this.handleBusCapacitiesChanged} />\r\n        <LocationRiderCollectionControl CollectionKey={'Landing_'+ this.state.SearchCount+'_'} handleLocationRidersChanged={(e)=>this.handleLocationRidersChanged(e)}\r\n        LocationRiders={this.state.RallyLocationRiders}/>\r\n        <button  onClick={()=>this.handleSearchItineraries()} disabled={!this.state.CanSubmit}>Search</button>\r\n       <div style={{visibility: this.state.Loading ? 'visible': 'hidden'}}>Loading...</div>\r\n       <ItinerariesControl ItinerariesResponse={this.state.ItinerariesResponse}/>\r\n      </div>\r\n    )\r\n  }\r\n  handleBusCapacitiesChanged(e){\r\n    this.setState({BusCapacities:e});\r\n  }\r\n  \r\n  handleLocationRidersChanged(locationRiders:ILocationRider[]){\r\n   var result = Enumerable.from(locationRiders).select((val)=>new SearchParam(val.SearchResult!, val.NumRiders!, val.Coords!)).toArray();\r\n   this.setState({SearchResults:result});\r\n   if(this.state.Destination){\r\n     this.setState({CanSubmit: true});\r\n   }\r\n  }\r\n\r\n  handleArrivalTimeChanged(date:Date){\r\n    this.setState({Arrivaltime:date});\r\n  }\r\n\r\n  searchResultHashmap={};\r\n  handleReadjustForArrival(date:Date){\r\n    var searchResultHashmap = this.searchResultHashmap;\r\n    var research = false;\r\n    this.state.SearchResults!.forEach(i=>{\r\n      let existingDuration = searchResultHashmap[i.SearchResult!];\r\n      if(existingDuration){\r\n        research = true;\r\n      }\r\n      let duration:number = existingDuration;\r\n      \r\n     // duration+=2;\r\n      let startTime = dateMath.add(date, -duration, \"minutes\");\r\n      i.StartTime = startTime;\r\n      i.EndTime = dateMath.add(startTime, 1, \"day\");\r\n    });\r\n    if(research)\r\n    {\r\n      this.handleSearchItineraries(true);\r\n    }\r\n  }\r\n  handleReadjustForArrivalBySubtractDuration(date:Date){\r\n    console.log('Readjusting for arrival date:'+date.toString());\r\n    var response = this.state.ItinerariesResponse!\r\n    response.itineraries.forEach(it=>{\r\n      it.readjustForArrival(date);\r\n    });\r\n    this.setState({ItinerariesResponse:undefined}, ()=>this.setState({ItinerariesResponse:response}));\r\n  }\r\n  /*\r\n  handleSingleItinerarySearch(searchResults:ISearchResult[]){\r\n    this.itinerary\r\n              .getItinerary({\r\n                dwellTime: this.state.DwellTime!,\r\n                searchParams: searchResults,\r\n                startLocation: searchResults[0].Coords!,\r\n                endLocation: this.state.Destination!.Coords!\r\n              })\r\n              .then((i: IItinineraryResponse) => {\r\n                this.setState({ ItineraryResponse: i });\r\n                i.instructionSets.forEach(is=>{\r\n                  this.searchResultHashmap[is.startingPoint] = is.durationMinutes;\r\n                });\r\n              });\r\n            }*/\r\n  handleMultipleItinerarySearch(searchResults:ISearchResult[]){\r\n    this.setState({SearchResults:searchResults});\r\n  }\r\n  handleSearchItineraries(skipReadjust:boolean=false){\r\n    this.setState({Loading:true});\r\n    this.itineraryCollection.getItineraries({\r\n      dwellTime: this.state.DwellTime!,\r\n      searchResults: this.state.SearchResults!,\r\n      endLocation: this.state.Destination!.Coords!,\r\n      endLocationName:this.state.Destination!.SearchResult!,\r\n      busCapacities:Enumerable.from(this.state.BusCapacities!).select(i=>i.capacity).toArray()\r\n    }) \r\n    .then((i: ItinerariesResponse) => {\r\n      this.setState({ ItinerariesResponse: i });\r\n      i.itineraries.forEach(it=>{it.instructionSets.forEach(is=>{\r\n        this.searchResultHashmap[is.startingPoint] = is.durationMinutes;\r\n      });});\r\n    }).then(()=>{\r\n      if(!skipReadjust)\r\n        this.handleReadjustForArrivalBySubtractDuration(this.state.Arrivaltime);\r\n    }).finally(()=>this.setState({Loading:false}));\r\n  }\r\n  handleDestinationChanged(e: ISearchResult) {\r\n    console.log(\"handle destination changed:\" + JSON.stringify(e));\r\n    this.setState({ Destination: e, SearchCount:this.state.SearchCount+1 });\r\n  }\r\n  handleDwellTimeChanged(event) {\r\n    this.setState({ DwellTime: event.target.value });\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { render } from \"react-dom\";\r\n//import { SearchControl } from \"./searchControl\";\r\nimport { LocationRiderCollectionControl } from \"./Controls/locationRiderCollectionControl\";\r\nimport { MapsControl } from \"./mapsContol\";\r\nimport { ISearchResult } from \"./Controls/enterLocationControl\";\r\nimport { LandingPageControl } from \"./Controls/LandingPageControl\";\r\n\r\nfunction App() {\r\n  return (\r\n    \r\n    <div className=\"App\">\r\n      <h1>Hello CodeSandbox Test</h1>\r\n      <h2>Enter locations</h2>\r\n      \r\n    <LandingPageControl/>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nrender(<App />, rootElement);\r\n"],"sourceRoot":""}