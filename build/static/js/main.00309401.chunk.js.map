{"version":3,"sources":["Controls/enterLocationControl.tsx","Controls/locationRiderControl.tsx","Controls/locationRiderCollectionControl.tsx","Controls/itineraryInstructionsControl.tsx","Controls/instructionSummaryControl.tsx","Services/itinerary.ts","Services/ItineraryService.ts","Services/ItineraryCollectionService.ts","Controls/itinerariesControl.tsx","Controls/BusCapacityControl.tsx","Services/rallyService.ts","Controls/RallyEventControl.tsx","Controls/LandingPageControl.tsx","index.tsx"],"names":["_callee","query","rest","response","regenerator_default","a","wrap","_context","prev","next","console","log","rm","get","sent","abrupt","result","resourceSets","resources","stop","SearchParam","SearchResult","Riders","Coords","StartTime","EndTime","Object","classCallCheck","this","EnterLocationControl","_React$Component","props","_this","possibleConstructorReturn","getPrototypeOf","call","inputElement","handleKeyDown","event","key","preventDefault","stopPropagation","blur","state","SearchQuery","setState","SearchResultVisible","handleSearchChanged","bind","assertThisInitialized","handleSearchBlur","stateFromProps","getStateFromprops","objectSpread","inherits","createClass","value","Lat","Long","searchResultsChanged","prevProps","prevState","_this2","resetCoordsFromBing","raiseSearchResultsChanged","focus","LastQuery","target","search","_this3","getBingMapsResponse","then","i","JSON","stringify","undefined","name","point","coordinates","noticedChange","searchResult","Submitted","_this4","react","type","readOnly","onChange","onBlur","onKeyDown","ref","input","React","LocationRiderControl","handleRidersChanged","handleAddLocationClicked","handleSearchResultChanged","submitted","NumRiders","SubmitEnabled","Preloaded","e","parseInt","notifyLocationRiderChanged","resetSubmitEnabled","handleLocationRiderChanged","notifySubmitLocationRider","submitLocationRider","enterLocationControl_EnterLocationControl","style","display","className","onClick","disabled","visibility","LocationRiderCollectionControl","LocationRiders","Array","handleSubmitRider","resetRidersFromProps","deepEqual","locationRider","index","locationRiders","resetLocationRiders","push","Enumerable","from","sum","handleLocationRidersChanged","blankitem","locationRiderControl_LocationRiderControl","CollectionKey","length","toString","itemMap","map","HoursMinutes","totalMinutes","hours","minutes","Math","floor","round","ItineraryInstructionsControl","apply","arguments","date","Date","fixAMPM","toLocaleDateString","toLocaleTimeString","includes","replace","minHoursMinutes","condensedInstructions","minRouteTime","maxHoursMinutes","maxRouteTime","fullSummary","concat","minDistance","toFixed","maxDistance","orderByStartTimes","linq","orderBy","startTime","valueOf","toArray","location","instructionRenders","quantity","agent","arrive","leave","miles","formatDate","formatTime","endTime","passengers","InstructionSummaryControl","collapsed","calculateState","startingPoint","totalHours","condensedInstructionSet","totalDistance","totalMiles","citiesMissed","missedCities","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","missed","city","riders","err","return","substr","numAgents","numRiders","Collapsible_default","trigger","itineraryInstructionsControl_ItineraryInstructionsControl","dateDiff","require","itineraryItem","dwellTime","openingTime","closingTime","startingTime","endLocationName","durationMinutes","agentNames","Set","instructionsSetsLinq","instructionsByAgent","groupBy","max","last","first","min","m","calculateDuration","add","size","instruction","adjustTimeFormat","calcMinutes","instructionSet","agentItinerary","instructions","distance","calcdistance","instructionType","skip","multipleStopAggregation","visit","skipTwo","aggregatedQuantities","condensed","mileCount","multipleStopsAtStartingLocation","NaN","arrival","ItinineraryResponse","destinationName","instructionSets","citiesVisited","agentItineraries","where","orderedInstructions","selectMany","distinct","unscheduledItems","select","dt","getTime","forEach","condensedInstructionAgent","lastInstruction","diff","condensedInstruction","addmin","add_minutes","dateformat","ItineraryRequest","agents","itineraryItems","ItineraryService","semaphore","Semaphore","setDate","getDate","setTime","_getItinerary","asyncToGenerator","mark","_callee2","getItineraryRequest","maxAgents","agentCount","release","itineraryResponse","callbackUrl","callbackTimeout","promiseGetResponse","_context2","searchParams","sr","latitude","longitude","getYesterday","addHours","capacity","busCapacities","shifts","endLocation","startLocation","acquire","request","resolveWithFullResponse","json","callbackInSeconds","Promise","resolve","reject","wait","onTimeout","_ref","parse","setTimeout","clearTimeout","finally","_x","ItineraryCollectionService","itinerary","getItinerariesRequest","additionalStops","minBusCapacity","searchResults","numAdditionalStops","leftOver","additionalStop","addStops","_getItineraries","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","_itinerary","responses","keys","responsesFiltered","_i","_responses","_response","returnedValue","addExtraStops","getItinerary","t0","finish","all","r","has","itineraries","orderByDescending","thenBy","ItinerariesControl","endOfToday","dateMath","ninePm","subtractDay","Arrivaltime","handleArrivalTimeChanged","ItinerariesResponse","responseList","instructionList","instructionSummaryControl_InstructionSummaryControl","BusCapacityControl","handleBusCapacityChanged","handleAddBus","handleDeleteBus","capacities","Guid","create","update","defineProperty","$set","$push","$splice","_this5","numericInputs","react_numeric_input","maxBuses","defaultProps","rallySvc","rallyService","_getTrips","eventId","RallyEventControl","handleEventIdChanged","handleSubmit","getTrips","trip","rallyTripReceived","LandingPageControl","itineraryCollection","searchResultHashmap","handleDestinationChanged","DwellTime","initializeArrivalTime","Loading","CanSubmit","Destination","SearchCount","handleDwellTimeChanged","handleMultipleItinerarySearch","handleSearchItineraries","handleReadjustForArrival","handleBusCapacitiesChanged","handleRallyTripsRecieved","rallyTrips","Schedule","DestinationArrivalTime","DestinationCity","CityStateAbbr","any","State","RidersBookedOnTrip","RallyLocationRiders","OriginDepartureLocation","OriginCity","DerivedPickupLatLng","RallyEventControl_RallyEventControl","entry_default","BusCapacityControl_BusCapacityControl","locationRiderCollectionControl_LocationRiderCollectionControl","itinerariesControl_ItinerariesControl","BusCapacities","val","SearchResults","research","existingDuration","duration","it","readjustForArrival","skipReadjust","getItineraries","is","handleReadjustForArrivalBySubtractDuration","rootElement","document","getElementById","render","LandingPageControl_LandingPageControl"],"mappings":"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","file":"static/js/main.00309401.chunk.js","sourcesContent":["import * as rm from \"typed-rest-client/RestClient\";\r\nimport * as React from \"react\";\r\nimport \"../styles.css\";\r\nimport { IBingMapsResponse, IResource } from \"../bing\";\r\n\r\nasync function getBingMapsResponse(query: string): Promise<IResource> {\r\n  console.log(\"running search\");\r\n  let rest = new rm.RestClient(\"rest-samples\", \"https://dev.virtualearth.net\");\r\n  let response: rm.IRestResponse<IBingMapsResponse> = await rest.get<\r\n    IBingMapsResponse\r\n  >(\r\n    \"/REST/v1/Locations?q=\" +\r\n      query +\r\n      \"&key=ArLJodQ7fEaQ2dfy3lIHWJrJILC35_Qj0EpT8TCy3ls96pl6sqCdlu18bo8j_tbM\"\r\n  );\r\n  // console.log(\"the response:\" + JSON.stringify(response));\r\n  return response.result!.resourceSets[0].resources[0];\r\n}\r\n\r\ninterface IEnterLocationState {\r\n  SearchQuery?: string;\r\n  SearchResult: string;\r\n  SearchResultVisible: boolean;\r\n  Coords: ILatLong;\r\n  LastQuery?: string;\r\n  Submitted?: boolean;\r\n}\r\nexport interface ILatLong {\r\n  Lat: number;\r\n  Long: number;\r\n}\r\nexport interface ISearchResult {\r\n  SearchResult?: string;\r\n  SearchQuery?: string;\r\n  Coords?: ILatLong;\r\n}\r\nexport interface ISearchParam extends ISearchResult{\r\n  EndTime?:Date;\r\n  StartTime?:Date;\r\n  Riders?:number;\r\n}\r\nexport class SearchParam implements ISearchParam{\r\n  constructor(public SearchResult:string, public Riders:number, public Coords:ILatLong, public StartTime?:Date, public EndTime?:Date){\r\n\r\n  }\r\n}\r\nexport interface IEnterLocationControlProps {\r\n  searchResultsChanged: (arg0: ISearchResult) => void;\r\n  SearchResult?: ISearchResult;\r\n}\r\nexport class EnterLocationControl extends React.Component<\r\n  IEnterLocationControlProps,\r\n  IEnterLocationState\r\n> {\r\n  constructor(props: Readonly<IEnterLocationControlProps>) {\r\n    super(props);\r\n    this.handleSearchChanged = this.handleSearchChanged.bind(this);\r\n    this.handleSearchBlur = this.handleSearchBlur.bind(this);\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    //TODO:Just set the default props\r\n    let stateFromProps = this.getStateFromprops();\r\n    this.state = {\r\n      SearchResultVisible: false,\r\n      ...stateFromProps\r\n    };\r\n    this.inputElement = null;\r\n  }\r\n  getStateFromprops(){\r\n    let searchResult = '';\r\n    let coords = {Lat:0, Long:0};\r\n   return {\r\n      SearchQuery: this.props.SearchResult && this.props.SearchResult.SearchQuery ? this.props.SearchResult.SearchQuery : \"\",\r\n      SearchResult: this.props.SearchResult && this.props.SearchResult.SearchResult? this.props.SearchResult.SearchResult : searchResult,\r\n      Coords: this.props.SearchResult && this.props.SearchResult.Coords ? this.props.SearchResult.Coords : coords\r\n    }\r\n  }\r\n  raiseSearchResultsChanged(){\r\n    this.props.searchResultsChanged({\r\n      SearchResult: this.state.SearchResult,\r\n      Coords: this.state.Coords,\r\n      SearchQuery: this.state.SearchQuery\r\n    });\r\n  }\r\n  componentDidUpdate(prevProps:IEnterLocationControlProps, prevState:IEnterLocationState){\r\n    if(prevState.SearchQuery!=this.state.SearchQuery){\r\n      this.raiseSearchResultsChanged();\r\n      return;\r\n    }\r\n      if(prevProps.SearchResult && this.props.SearchResult){\r\n        if(prevProps.SearchResult.SearchQuery!=this.props.SearchResult.SearchQuery){\r\n          this.setState(this.getStateFromprops(), ()=> this.resetCoordsFromBing(this.props.SearchResult!.SearchQuery!));\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.inputElement!.focus();\r\n  }\r\n  inputElement:HTMLInputElement|null;\r\n  handleSearchChanged(event) {\r\n    this.setState({ LastQuery: this.state.SearchQuery });\r\n    console.log(\"handlesearch changed last query is \" + this.state.LastQuery);\r\n\r\n    this.setState({\r\n      SearchQuery: event.target.value,\r\n      SearchResultVisible: true\r\n    });\r\n    this.resetCoordsFromBing(event.target.value);\r\n  }\r\n  resetCoordsFromBing(search:string){\r\n    getBingMapsResponse(search).then(i => {\r\n\r\n      console.log(\"last query is \" + this.state.LastQuery);\r\n      console.log(\"maps Response: \" + JSON.stringify(i));\r\n      if(i===undefined)\r\n        return;\r\n      this.setState({\r\n        SearchResult: i.name,\r\n        Coords: { Lat: i.point.coordinates[0], Long: i.point.coordinates[1] }\r\n      }, this.raiseSearchResultsChanged);\r\n    });\r\n  }\r\n  noticedChange(): boolean {\r\n    console.log(\"last query is \" + this.state.LastQuery);\r\n    console.log(\"search query is \" + this.state.SearchQuery);\r\n    console.log(\"search result is \" + this.state.SearchResult);\r\n    if (this.state.LastQuery !== this.state.SearchQuery) {\r\n      this.setState({ LastQuery: this.state.SearchQuery });\r\n\r\n      console.log(\"noticed change to \" + this.state.LastQuery);\r\n      return true;\r\n    } else {\r\n      console.log(\"noticed no change\");\r\n      return false;\r\n    }\r\n  }\r\n \r\n  handleSearchBlur(event){\r\n    if (!this.noticedChange()) return;\r\n    let searchResult =\r\n      this.state.SearchQuery === \"\" ? \"\" : this.state.SearchResult;\r\n    this.setState({\r\n      SearchQuery: searchResult,\r\n      SearchResultVisible: false\r\n    });\r\n    this.setState({ LastQuery: searchResult });\r\n    if (searchResult === \"\") return;\r\n    this.setState({\r\n      Submitted: true\r\n    });\r\n    this.raiseSearchResultsChanged();\r\n\r\n  }\r\n  handleKeyDown = (event: React.KeyboardEvent<HTMLDivElement>): void => {\r\n    // 'keypress' event misbehaves on mobile so we track 'Enter' key via 'keydown' event\r\n    if (event.key === \"Enter\") {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      this.inputElement!.blur();\r\n      //this.handleSearchBlur(null);\r\n    }\r\n    if (this.state.SearchQuery === \"\") {\r\n      this.setState({ SearchResultVisible: false });\r\n    }\r\n  };\r\n  render() {\r\n    let searchResult;\r\n    if (this.state.SearchResultVisible) {\r\n      searchResult = (\r\n        <div>\r\n        <input type=\"text\" value={this.state.SearchResult} readOnly={true} />\r\n        <br/>\r\n        </div>\r\n        );\r\n    }\r\n    return (\r\n      <span>\r\n        <input\r\n          type=\"text\"\r\n          value={this.state.SearchQuery}\r\n          onChange={this.handleSearchChanged}\r\n          onBlur={this.handleSearchBlur}\r\n          onKeyDown={this.handleKeyDown}\r\n          ref={input => (this.inputElement = input)}\r\n        />\r\n        {searchResult}\r\n        </span>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { EnterLocationControl, ISearchParam, ISearchResult, ILatLong } from './enterLocationControl';\r\nimport { ILocation } from '../bing';\r\nimport { LatLng } from '../Services/rallyService';\r\nexport interface ILocationRider {\r\n    SearchResult?: string;\r\n    NumRiders?:number;\r\n    Coords?:ILatLong;\r\n    SearchQuery?:string;\r\n  }\r\n  export interface ILocationRiderControlState extends ILocationRider{\r\n    SubmitEnabled:boolean;\r\n    Submitted:boolean;\r\n    Preloaded:boolean;\r\n  }\r\n  export interface ILocationRiderControlProps {\r\n    handleLocationRiderChanged?: (locationRider: ILocationRider) => void;\r\n    submitLocationRider:(locationRider: ILocationRider)=>void;\r\n    NumRiders?:number;\r\n    SearchResult?:string;\r\n    Coords?:LatLng\r\n  }\r\nexport class LocationRiderControl extends React.Component< ILocationRiderControlProps,\r\nILocationRiderControlState>{\r\n  constructor(props:Readonly<ILocationRiderControlProps>){\r\n    super(props);\r\n    this.handleRidersChanged = this.handleRidersChanged.bind(this);\r\n    this.handleAddLocationClicked = this.handleAddLocationClicked.bind(this);\r\n    this.handleSearchResultChanged = this.handleSearchResultChanged.bind(this);\r\n    let submitted = false;\r\n    if(props.NumRiders || props.SearchResult){\r\n      submitted = true;\r\n    }\r\n    this.state = {NumRiders:props.NumRiders,SearchQuery:props.SearchResult, SearchResult:props.SearchResult,SubmitEnabled:false, Coords:props.Coords,Preloaded:submitted, Submitted:false};\r\n  }\r\n  handleRidersChanged(e){\r\n    this.setState({NumRiders:parseInt(e.target.value)},()=>{\r\n      this.notifyLocationRiderChanged();\r\n      this.resetSubmitEnabled();\r\n      });\r\n    ;\r\n  }\r\n  handleSearchResultChanged(e: ISearchResult) {\r\n        console.log(\"handleSearchResultsChanged \");\r\n        this.setState({ SearchResult: e.SearchResult,Coords:e.Coords!}, this.resetSubmitEnabled);\r\n      \r\n       this.notifyLocationRiderChanged();\r\n        \r\n      }\r\n  notifyLocationRiderChanged(){\r\n    if((this.state.Submitted || this.state.Preloaded) && this.props.handleLocationRiderChanged)\r\n        this.props.handleLocationRiderChanged({ SearchResult:this.state.SearchResult, SearchQuery:this.state.SearchQuery, NumRiders:this.state.NumRiders, Coords:this.state.Coords});\r\n  }\r\n  handleAddLocationClicked(){\r\n    this.notifySubmitLocationRider();\r\n    this.setState({Submitted:true});\r\n  }\r\n  notifySubmitLocationRider(){\r\n         this.props.submitLocationRider(this.state);\r\n  }\r\n  resetSubmitEnabled(){\r\n    if(this.state.NumRiders && this.state.SearchResult){\r\n      this.setState({SubmitEnabled:true});\r\n    }\r\n  }\r\n    render(){\r\n        return <table>\r\n          <td></td>\r\n          <td></td>\r\n        <tr>\r\n         <EnterLocationControl\r\n          SearchResult={{\r\n            SearchQuery: this.state.SearchQuery,\r\n            SearchResult: this.state.SearchResult,\r\n            Coords:this.state.Coords\r\n          }}\r\n          searchResultsChanged={this.handleSearchResultChanged}\r\n        />\r\n        <div style={{display:\"inline-block\"}}>\r\n        <label className=\"RidersLabel\"># Riders</label><input className=\"Riders\" value={this.state.NumRiders} onChange={this.handleRidersChanged}/>\r\n        <button className=\"AddLocation\" onClick={this.handleAddLocationClicked} disabled={!this.state.SubmitEnabled} style={{visibility:this.state.Submitted || this.state.Preloaded ? 'hidden':'visible'}}>Add location</button>\r\n        </div></tr></table>\r\n    }\r\n}","import { EnterLocationControl, ISearchResult, ISearchParam } from \"./enterLocationControl\";\r\nimport * as React from \"react\";\r\nimport { LocationRiderControl, ILocationRider } from \"./locationRiderControl\";\r\nimport deepEqual from 'deep-equal';\r\nimport { Guid } from \"guid-typescript\";\r\nimport Enumerable from \"linq\";\r\n\r\nexport interface ILocationRiderCollectionControlProps{\r\nhandleLocationRidersChanged:(locationRiders:ILocationRider[])=>void;\r\nLocationRiders?:ILocationRider[];\r\nCollectionKey:string;\r\n}\r\nexport interface ILocationRiderCollectionControlState{\r\n  LocationRiders:ILocationRider[];\r\n  NumRiders:number;\r\n}\r\nexport class LocationRiderCollectionControl extends React.Component<ILocationRiderCollectionControlProps, ILocationRiderCollectionControlState> {\r\n  constructor(props: Readonly<ILocationRiderCollectionControlProps>) {\r\n    super(props);\r\n    this.state = { LocationRiders: new Array(), NumRiders:0 };\r\n    this.handleLocationRiderChanged = this.handleLocationRiderChanged.bind(this);\r\n    this.handleSubmitRider = this.handleSubmitRider.bind(this);\r\n    this.resetRidersFromProps();\r\n  }\r\n  resetRidersFromProps(){\r\n    if(this.props.LocationRiders){\r\n      this.setState({LocationRiders:this.props.LocationRiders});\r\n    }\r\n  }\r\n  componentDidUpdate(prevProps:ILocationRiderCollectionControlProps){\r\n    if(!deepEqual(prevProps.LocationRiders, this.props.LocationRiders)){\r\n      this.resetRidersFromProps();\r\n    }\r\n  }\r\n  handleLocationRiderChanged(locationRider: ILocationRider, index:number){\r\n    var locationRiders = this.state.LocationRiders;\r\n    locationRiders[index] = locationRider;\r\n  this.resetLocationRiders(locationRiders);\r\n  }\r\nhandleSubmitRider(locationRider: ILocationRider){\r\n  var locationRiders = this.state.LocationRiders;\r\n  locationRiders.push(locationRider);\r\n  this.resetLocationRiders(locationRiders);\r\n}\r\nresetLocationRiders(locationRiders:ILocationRider[]){\r\n  this.setState({LocationRiders:locationRiders, NumRiders:Enumerable.from(locationRiders).sum(i=>i.NumRiders!)}, ()=> this.props.handleLocationRidersChanged(this.state.LocationRiders));\r\n\r\n}\r\n  render() {\r\n    let blankitem = (\r\n      <LocationRiderControl key={this.props.CollectionKey+ (this.state.LocationRiders.length==0? \"-1\".toString():this.state.LocationRiders.length.toString())}\r\n      submitLocationRider={(e)=>this.handleSubmitRider(e)}\r\n     />\r\n  );\r\n    const items = new Array();\r\n    var itemMap = this.state.LocationRiders.map((locationRider, index)=>\r\n    <LocationRiderControl key={this.props.CollectionKey+index.toString()} NumRiders={locationRider.NumRiders} SearchResult={locationRider.SearchResult} Coords={locationRider.Coords}\r\n        submitLocationRider={(e)=>this.handleSubmitRider(e)} handleLocationRiderChanged={e=>this.handleLocationRiderChanged(e, index)}\r\n    />);\r\n    \r\n    itemMap.push(blankitem);\r\n    return <div>Total Riders:{this.state.NumRiders}<ol>{itemMap}</ol></div>;\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { instruction, instructionSet, condensedInstruction, condensedInstructionSet } from \"../Services/itinerary\";\r\nimport * as linq from \"linq\";\r\nexport interface InstructionControlProps{\r\n    condensedInstructions:condensedInstructionSet;\r\n}\r\nclass HoursMinutes{\r\n    hours:number;\r\n    minutes:number;\r\n    constructor(totalMinutes:number){\r\n        this.hours = Math.floor(totalMinutes/60);\r\n        this.minutes = Math.round(totalMinutes%60+0);\r\n    }\r\n}\r\nexport class ItineraryInstructionsControl extends React.Component<InstructionControlProps>{\r\n  formatDate(date:string){\r\n    if(!date)\r\n    return '';\r\n    return new Date(this.fixAMPM(date)).toLocaleDateString();\r\n  } \r\n  formatTime(date:string){\r\n    if(!date)\r\n    return '';\r\n    return new Date(this.fixAMPM(date)).toLocaleTimeString();\r\n  }\r\n  fixAMPM(date:string){\r\n    if(date.includes('P')){\r\n      return date.replace('P', ' ')+' PM';\r\n      }\r\n      if(date.includes('A')){\r\n        return date.replace('A', ' ')+' AM';\r\n        }\r\n      return date;\r\n  }\r\n    render(){\r\n      let minHoursMinutes = new HoursMinutes(this.props.condensedInstructions.minRouteTime);\r\n        let maxHoursMinutes = new HoursMinutes(this.props.condensedInstructions.maxRouteTime);\r\n         let fullSummary = `Min Dist:${this.props.condensedInstructions.minDistance.toFixed(1)} mi Max Dist:${this.props.condensedInstructions.maxDistance.toFixed(1)} mi Min Time:${minHoursMinutes.hours} hrs ${minHoursMinutes.minutes} min Max Time:${maxHoursMinutes.hours} hrs ${maxHoursMinutes.minutes} min`;\r\n       let orderByStartTimes =linq.from(this.props.condensedInstructions.condensedInstructions).orderBy(i=> {\r\n         let orderby = new Date(this.fixAMPM(i.startTime)).valueOf();\r\n        return orderby;}).toArray();\r\n       if(orderByStartTimes[orderByStartTimes.length-1].location==\"1500 Southwest 8th Street\"){\r\n        console.log(JSON.stringify(orderByStartTimes));\r\n       } \r\n       let instructionRenders = linq.from(this.props.condensedInstructions.condensedInstructions).orderBy(i=>new Date(this.fixAMPM(i.startTime)).valueOf()).toArray().map(\r\n            (i) => {\r\n              let loc;\r\n              let place;\r\n              let endtime;\r\n              let duration;\r\n              let quantity;\r\n              let agent;\r\n              let location;\r\n              let arrive;\r\n              let leave;\r\n              let miles;\r\n              agent = <td>{i.agent}</td>;\r\n              location = <td>{i.location}</td>;\r\n              arrive = <td>{this.formatDate(i.startTime)}&nbsp;{this.formatTime(i.startTime)}</td>;\r\n              leave = <td>{i.endTime ? this.formatDate(i.endTime) :''}&nbsp;{i.endTime ? this.formatTime(i.endTime) :''}</td>;\r\n              quantity =<td>{i.passengers}</td>;\r\n              miles = <td>{i.miles.toFixed(2)}</td>;\r\n              return <tr>{agent}{location}{arrive}{leave}{quantity}{miles}</tr>;\r\n            }\r\n          );\r\n        return <div>\r\n        <h3>{fullSummary}</h3>\r\n        <table>\r\n    <tr>\r\n    <th>Agent</th>\r\n    <th>Location</th>\r\n    <th>Arrive</th>\r\n    <th>Leave</th>\r\n    <th># Riders</th>\r\n    <th>Miles</th>\r\n  </tr>\r\n    {instructionRenders}\r\n    </table></div>\r\n    }\r\n}","import * as React from 'react';\r\nimport { instructionSet, condensedInstructionSet } from '../Services/itinerary';\r\nimport { totalmem } from 'os';\r\nimport { ItineraryInstructionsControl } from './itineraryInstructionsControl';\r\nimport Collapsible from 'react-collapsible';\r\nexport interface IInstructionSummaryControlProps{\r\n    condensedInstructionSet:condensedInstructionSet;\r\n}\r\nexport interface IInstructionSummaryControlState{\r\n    collapsed?:boolean;\r\n    totalHours:number;\r\n    totalMinutes:number;\r\n    totalDistance:number;\r\n    startingPoint:string;\r\n}\r\n\r\nexport class InstructionSummaryControl extends React.Component<IInstructionSummaryControlProps, IInstructionSummaryControlState>{\r\n    constructor(props){\r\n        super(props);\r\n        let collapsed ={collapsed:true};\r\n \r\n        this.state = {...collapsed, ...this.calculateState(), startingPoint:''};\r\n    }\r\n    calculateState(){\r\n        let calc = {totalHours:Math.floor(this.props.condensedInstructionSet.maxRouteTime/60), \r\n            totalMinutes:this.props.condensedInstructionSet.maxRouteTime%60, totalDistance:this.props.condensedInstructionSet.totalMiles};\r\n        return calc;\r\n    }\r\n    componentDidUpdate(){\r\n        return;\r\n        let calc = this.calculateState();\r\n            if(this.state.totalDistance!=calc.totalDistance || this.state.totalHours!=calc.totalHours || this.state.totalMinutes!=calc.totalMinutes){\r\n                this.setState(calc);        \r\n            }\r\n        }\r\n    render(){\r\n        let citiesMissed='';\r\n        if(this.props.condensedInstructionSet.missedCities && this.props.condensedInstructionSet.missedCities.length>0){\r\n            citiesMissed=' Cities Missed:[';\r\n            for(let missed of this.props.condensedInstructionSet.missedCities){\r\n                citiesMissed+=missed.city+` - Riders: ${missed.riders}, `;\r\n            }\r\n            citiesMissed = citiesMissed.substr(0, citiesMissed.length-2);\r\n            citiesMissed+=']';\r\n        }\r\n         \r\n        let fullSummary = `Total Time:${this.state.totalHours} hrs ${this.state.totalMinutes.toFixed()} min Total Distance:${this.props.condensedInstructionSet.totalMiles.toFixed(1)} mi #Buses:${this.props.condensedInstructionSet.numAgents} #Riders:${this.props.condensedInstructionSet.numRiders} Min Dist:${this.props.condensedInstructionSet.minDistance.toFixed(1)} mi Max Dist:${this.props.condensedInstructionSet.maxDistance.toFixed(1)} mi ${citiesMissed}`;\r\n        return <Collapsible trigger={fullSummary}>\r\n                <ItineraryInstructionsControl condensedInstructions={this.props.condensedInstructionSet}/>\r\n            </Collapsible>\r\n    }\r\n}","import { ISearchResult, ILatLong, ISearchParam } from \"../Controls/enterLocationControl\";\r\nimport * as Enumerable from 'linq';\r\nimport * as addsubtractdate from 'add-subtract-date';\r\nimport dateformat from 'dateformat';\r\n\r\nvar dateDiff = require('date-diff');\r\nexport interface location {\r\n  latitude: number;\r\n  longitude: number;\r\n}\r\nexport interface shift {\r\n  startTime?: string;\r\n  endTime?: string;\r\n  startLocation: location;\r\n  endLocation: location;\r\n}\r\nexport interface IitineraryItem {\r\n  name: string;\r\n  dwellTime: string;\r\n  location: location;\r\n  quantity:Array<number>;\r\n}\r\nexport class itineraryItem implements IitineraryItem {\r\n  constructor(\r\n    public name: string,\r\n    public dwellTime: string,\r\n    public location: location,\r\n    public quantity:Array<number>,\r\n    public openingTime?:string,\r\n    public closingTime?:string,\r\n    public startingTime?:string,\r\n    \r\n  ) {}\r\n}\r\nexport interface agent {\r\n  name: string;\r\n  capacity:Array<number>;\r\n  shifts: shift[];\r\n}\r\nexport interface IItineraryRequest {\r\n  agents: agent[];\r\n  itineraryItems: IitineraryItem[];\r\n}\r\nexport interface route {\r\n  startLocation: Location;\r\n  endLocatrion: Location;\r\n  startTime: string;\r\n  endTime: string;\r\n  totalTravelDistance: number;\r\n  totalTravelTime: string;\r\n  wayPoints: Location[];\r\n}\r\nexport interface instruction {\r\n  instructionType: string;\r\n  distance: number;\r\n  itineraryItem: IitineraryItem;\r\n  startTime: string;\r\n  endTime: string;\r\n  duration: string;\r\n  pickupRiders:number;\r\n}\r\nexport interface missedCity{\r\n  city:string;\r\n  riders:number;\r\n}\r\nexport class condensedInstructionSet{\r\n  public totalMiles:number=0;\r\n  public numAgents:number;\r\n  public maxRouteTime:number;\r\n  public minDistance:number;\r\n  public maxDistance:number;\r\n  public minRouteTime:number;\r\n  public numRiders:number;\r\n  constructor(public condensedInstructions:condensedInstruction[], public  endLocationName:string, \r\n  public missedCities?:Array<missedCity>\r\n  ){\r\n    let agentNames = new Set<string>();\r\n    var instructionsSetsLinq = Enumerable.from(condensedInstructions);\r\n    this.numRiders = instructionsSetsLinq.sum(i=>i.passengers);\r\n    var instructionsByAgent = instructionsSetsLinq.groupBy(i=>i.agent);\r\n    if(condensedInstructions.length>0){\r\n    this.maxRouteTime = instructionsByAgent.max(i=>(new dateDiff(new Date(i.last().startTime), new Date(i.first().startTime))).minutes());\r\n    this.minRouteTime = instructionsByAgent.min(i=>(new dateDiff(new Date(i.last().startTime),new Date(i.first().startTime))).minutes());\r\n    this.minDistance =instructionsByAgent.min(i=>i.sum(m=>m.miles));\r\n    this.maxDistance =instructionsByAgent.max(i=>i.sum(m=>m.miles));\r\n    this.durationMinutes = this.calculateDuration();\r\n    }\r\n    else{\r\n      //this is the empty set\r\n      this.maxRouteTime=this.minRouteTime=this.maxDistance=this.minDistance=this.durationMinutes=0;\r\n    }\r\n    for(let i = 0; i<condensedInstructions.length;i++){\r\n      this.totalMiles+=condensedInstructions[i].miles;\r\n      agentNames.add(condensedInstructions[i].agent);\r\n    } \r\n    this.numAgents = agentNames.size;\r\n    this.condensedInstructions = Enumerable.from(condensedInstructions).orderBy(i=>i.startTime).toArray();\r\n   }\r\n  durationMinutes:number;\r\n \r\n  private adjustTimeFormat(instruction:condensedInstruction){\r\n    instruction.startTime = instruction.startTime.replace('P', 'T').replace('A','T');\r\n  }\r\n  private calcMinutes(){\r\n   let diff = new dateDiff(new Date(this.condensedInstructions[this.condensedInstructions.length-1].startTime), new Date(this.condensedInstructions[0].startTime));\r\n    return diff.minutes();\r\n  }\r\n  calculateDuration(){\r\n  this.condensedInstructions.map(i=> this.adjustTimeFormat(i));\r\n   return this.calcMinutes();\r\n  }\r\n  \r\n}\r\n\r\n/*\r\nexport class condensedInstructionSetCollection{\r\n  public \r\n  constructor(public condensedInstructionSets:condensedInstructionSet[]){\r\n   // this.condensedInstructionSets = Enumerable.from(this.condensedInstructionSets).selectMany(i=>i.condensedInstructions).orderBy(i=>i.startTime)\r\n  }\r\n}*/\r\nexport interface condensedInstruction{\r\n  agent:string;\r\n  startTime: string;\r\n  endTime?: string;\r\n  miles:number;\r\n  location:string;\r\n  passengers:number;\r\n}\r\ninterface multipleStopAggregation{\r\n  index:number;\r\n  aggregatedQuantities:number;\r\n}\r\nexport class instructionSet{\r\n  constructor(agentItinerary:agentItinerary, public endLocationName:string){\r\n    this.instructions = agentItinerary.instructions;\r\n    this.agent = agentItinerary.agent;\r\n    this.distance = this.calcdistance();\r\n    this.durationMinutes = this.calcMinutes();\r\n     this.instructions.map(i=> this.adjustTimeFormat(i));\r\n  }\r\n  agent:agent;\r\n  instructions:instruction[];\r\n  get startingPoint():string{\r\n    return this.instructions[2].itineraryItem.name;\r\n  }\r\n  filterInstructions(instructions:instruction[]):instruction[]{\r\n    if(instructions[0].instructionType=='LeaveFromStartPoint'){\r\n      return Enumerable.from(instructions).skip(2).toArray();\r\n    }\r\n    return instructions;\r\n  }\r\n  distance:number;\r\n  durationMinutes:number;\r\n  private calcdistance(){\r\n    let sum =0;\r\n    for(let i = 0; i<this.instructions.length;i++){\r\n      if(this.instructions[i].distance)\r\n        {\r\n          sum+=this.instructions[i].distance;\r\n        }\r\n    }\r\n    return sum*0.000621371;\r\n  }\r\n  private adjustTimeFormat(instruction:instruction){\r\n    instruction.startTime = instruction.startTime.replace('P', 'T').replace('A','T');\r\n  }\r\n  private calcMinutes(){\r\n   let diff = new dateDiff(new Date(this.instructions[this.instructions.length-1].startTime), new Date(this.instructions[2].startTime));\r\n    return diff.minutes();\r\n  }\r\n  recalculateDuration(){\r\n  this.instructions.map(i=> this.adjustTimeFormat(i));\r\n   this.durationMinutes = this.calcMinutes();\r\n  }\r\n  \r\n  private multipleStopsAtStartingLocation(multipleStopAggregation:multipleStopAggregation):boolean{\r\n    let visit = this.instructions[multipleStopAggregation.index];\r\n      let skipTwo = this.instructions.length>multipleStopAggregation.index+2 ? this.instructions[multipleStopAggregation.index+2] : undefined;\r\n      if(skipTwo && skipTwo.instructionType=='VisitLocation' && skipTwo.itineraryItem.name==visit.itineraryItem.name\r\n      && multipleStopAggregation.aggregatedQuantities>=0){\r\n        multipleStopAggregation.aggregatedQuantities +=  visit.itineraryItem.quantity[0]; \r\n        return true;\r\n      }\r\n  return false;\r\n}\r\n  get condensedInstructions():condensedInstruction[]{\r\n    let condensed = new Array<condensedInstruction>();\r\n    var mileCount = 0;\r\n    var first = true;\r\n     let skip = 1;\r\n      if(this.instructions[0].instructionType==\"LeaveFromStartPoint\" && this.instructions[0].distance)\r\n        {\r\n          skip = 2;\r\n        }\r\n        let multipleStopAggregation:multipleStopAggregation = {index:0, aggregatedQuantities:0};\r\n    for(let index = skip; index<this.instructions.length-1;index++){\r\n      let visit = this.instructions[index];\r\n      if(visit.instructionType=='VisitLocation'){\r\n        multipleStopAggregation.index = index;\r\n        if(this.multipleStopsAtStartingLocation(multipleStopAggregation)){\r\n          index++;\r\n          continue;\r\n        }\r\n      condensed.push({agent:this.agent.name, startTime:visit.startTime, endTime:visit.endTime, location: visit.itineraryItem ? visit.itineraryItem.name : '',\r\n      miles:mileCount, passengers: visit.itineraryItem.quantity[0]+multipleStopAggregation.aggregatedQuantities});\r\n      multipleStopAggregation.aggregatedQuantities=0;\r\n      }\r\n      else{\r\n        if(first){\r\n          mileCount=0;\r\n          first=false;\r\n          continue;\r\n        }\r\n      mileCount+=visit.distance*0.000621371;\r\n      }\r\n    }\r\n    if(mileCount==NaN){\r\n      console.log('Mile count is nan for:'+JSON.stringify(this));\r\n    }\r\n    var arrival = this.instructions[this.instructions.length-1];\r\n    condensed.push({agent:this.agent.name, startTime:arrival.startTime, location: this.endLocationName,\r\n      miles:mileCount, passengers:0})\r\n    return condensed;\r\n  }\r\n}\r\nexport interface agentItinerary {\r\n  agent: agent;\r\n  instructions: instruction[];\r\n}\r\nexport interface resource {\r\n  agentItineraries: agentItinerary[];\r\n  unscheduledItems:IitineraryItem[];\r\n  callbackUrl:string;\r\n  callbackInSeconds:number;\r\n}\r\nexport interface resourceSet {\r\n  resources: resource[];\r\n}\r\nexport interface IItinineraryResponse {\r\n  resourceSets: resourceSet[];\r\n  instructionSets:instructionSet[];\r\n  readjustForArrival(date:Date);\r\n  condensedInstructionSet:condensedInstructionSet;\r\n}\r\nexport class ItinineraryResponse implements IItinineraryResponse{\r\n  public instructionSets:instructionSet[];\r\n  public condensedInstructionSet:condensedInstructionSet;\r\n  public citiesVisited:Array<string>;\r\n  public citiesMissed:Array<missedCity>;\r\n\r\n  constructor(public resourceSets: resourceSet[], public destinationName:string){\r\n    this.instructionSets = Enumerable.from(this.resourceSets[0].resources[0].agentItineraries).where(i=>i.instructions.length>3).toArray()\r\n    .map(i=> {\r\n          return new instructionSet(i, destinationName);\r\n    });\r\n    var instructionsSetsLinq = Enumerable.from(this.instructionSets);\r\n    var orderedInstructions = instructionsSetsLinq.selectMany(i=>i.condensedInstructions).orderBy(i=>i.startTime).toArray();\r\n    this.citiesVisited = instructionsSetsLinq.selectMany(i=>i.condensedInstructions).selectMany(i=>i.location).distinct().toArray();\r\n    this.citiesMissed = Enumerable.from(this.resourceSets[0].resources[0].unscheduledItems).select(i=> {return {city: i.name, riders:i.quantity[0]}}).toArray();\r\n    this.condensedInstructionSet = new condensedInstructionSet(orderedInstructions, destinationName, this.citiesMissed);\r\n  }\r\n   add_minutes(dt:Date, minutes:number):Date {\r\n    return new Date(dt.getTime() + minutes*60000);\r\n  }\r\n  readjustForArrival(date:Date){\r\n    Enumerable.from(this.condensedInstructionSet.condensedInstructions).groupBy(i=>i.agent)\r\n      .forEach(condensedInstructionAgent=>{\r\n          let lastInstruction = condensedInstructionAgent.last();\r\n          let endTime =new Date(lastInstruction.startTime);\r\n          console.log(\"Readjusting for end time: \"+endTime);\r\n          console.log(\"dateDiff:\"+dateDiff);\r\n          let diff:number =  new dateDiff(date, endTime).minutes()-1;\r\n          //TODO://One of the dates is getting passed in as a string, fix\r\n          console.log(`Got difference between '${date}' and '${lastInstruction.startTime}' as ${diff}`);\r\n          condensedInstructionAgent.forEach(condensedInstruction=>{\r\n            console.log(`Changing start time for instruction '${condensedInstruction.startTime}'`);\r\n            console.log(\"Readjusting for instruction set:\"+JSON.stringify(condensedInstruction));\r\n            let date = new Date(condensedInstruction.startTime);\r\n            console.log(`Changing start time for instruction date:'${date}'`);\r\n            let addmin = this.add_minutes(date, diff);\r\n            console.log(`Added '${diff}' minutes to ${date}:${addmin}`);\r\n            condensedInstruction.startTime = dateformat(addmin, 'yyyy-mm-ddThh:MM:ss');\r\n            if(condensedInstruction.endTime){\r\n              date = new Date(condensedInstruction.endTime);\r\n              addmin = this.add_minutes(date, diff);\r\n              condensedInstruction.endTime = dateformat(addmin, 'yyyy-mm-ddThh:MM:ss');\r\n              console.log(`Set startTime to ${condensedInstruction.startTime}`);        \r\n            }\r\n      });\r\n  });\r\n  this.condensedInstructionSet.condensedInstructions = Enumerable.from(this.condensedInstructionSet.condensedInstructions).orderBy(i=>i.startTime).toArray();\r\n  }\r\n}\r\nexport class ItineraryRequest implements IItineraryRequest {\r\n  constructor(\r\n    public agents: agent[],\r\n    public itineraryItems: IitineraryItem[]\r\n  ) {}\r\n}\r\nexport interface getItineraryRequest {\r\n  searchParams: ISearchParam[];\r\n  startLocation: ILatLong;\r\n  endLocation: ILatLong;\r\n  dwellTime: number;\r\n  startTime?:Date;\r\n  endTime?:Date;\r\n  numAgents:number;\r\n  endLocationName:string;\r\n  busCapacities:Array<number>\r\n}\r\nexport interface IItineraryService{\r\n  getItinerary(\r\n    getItineraryRequest: getItineraryRequest\r\n  ): Promise<IItinineraryResponse>;\r\n}\r\nexport interface ItinerariesRequest {\r\n  searchResults: ISearchParam[];\r\n  endLocation: ILatLong;\r\n  endLocationName:string;\r\n  dwellTime: number;\r\n  //minBuses?:number;\r\n  //maxBuses?:number;\r\n  //busCapacity?:number;\r\n  busCapacities:Array<number>\r\n}\r\nexport interface ItinerariesResponse {\r\n  itineraries:IItinineraryResponse[];\r\n}\r\n","import * as request from \"request-promise\";\r\nimport dateformat from 'dateformat';\r\nimport {Semaphore} from 'await-semaphore';\r\nimport { IItineraryService, getItineraryRequest, IItinineraryResponse, itineraryItem, ItineraryRequest, ItinineraryResponse } from \"./itinerary\";\r\nimport Enumerable from \"linq\";\r\n\r\n\r\nexport class ItineraryService implements IItineraryService {\r\n  semaphore = new Semaphore(25);\r\n  //constructor(private key:string='ArLJodQ7fEaQ2dfy3lIHWJrJILC35_Qj0EpT8TCy3ls96pl6sqCdlu18bo8j_tbM'){\r\n  //  constructor(private key:string='AqY5DsUaX9kUiNmpLaOZfzm6nV_wsCbyUfB_0z1Hk4CIUMNDjMSjk7VBSFIIgaHk'){\r\nconstructor(private key:string='Agm6W2UbGpxQdxwdk3hJWc_7x3YkDMPA6nwX-7sZyYWuP-A96R8Cnc5BccClWQIK'){  \r\n}\r\n  getYesterday():Date{\r\n    var date = new Date();\r\n    date.setDate(date.getDate()-1);\r\n    return date;\r\n  }\r\n  addHours(date:Date, hours:number){\r\n    var date = new Date(date.getTime());\r\n    date.setTime(date.getTime()+(hours*60*60*1000));\r\n  }\r\n  async getItinerary(getItineraryRequest: getItineraryRequest): Promise<IItinineraryResponse> {\r\n    var itineraryItems = Enumerable.from(getItineraryRequest.searchParams).where(i=>i.Riders!>0).toArray().map(sr => new itineraryItem(sr.SearchResult!, \"00:\" + getItineraryRequest.dwellTime + \":00\", {\r\n      latitude: sr.Coords!.Lat,\r\n      longitude: sr.Coords!.Long, \r\n    },[sr.Riders!]));\r\n    /*itineraryItems.push(new itineraryItem('Destination', \"00:15:00\", {\r\n      latitude: getItineraryRequest.endLocation.Lat,\r\n      longitude: getItineraryRequest.endLocation.Long\r\n    }, '2019-11-16T16:00:00', '2019-11-16T18:00:00'));*/\r\n    console.log(\"Searching for start time:\"+getItineraryRequest.startTime);\r\n    let startTime = getItineraryRequest.startTime==undefined? dateformat(this.getYesterday(), 'yyyy-mm-ddThh:MM:ss') : dateformat(getItineraryRequest.startTime, 'yyyy-mm-ddThh:MM:ss');\r\n    let endTime = getItineraryRequest.endTime==undefined? dateformat(this.addHours(this.getYesterday(), 12), 'yyyy-mm-ddThh:MM:ss') : dateformat(getItineraryRequest.endTime, 'yyyy-mm-ddThh:MM:ss');\r\n    startTime = startTime.replace('P', 'T').replace('A','T');\r\n    endTime = endTime.replace('P', 'T').replace('A','T');\r\n    var agents = new Array();\r\n    var maxAgents = getItineraryRequest.numAgents;\r\n    //TODO:Change for biz version\r\n    if(getItineraryRequest.numAgents>10){\r\n      maxAgents = 10;\r\n    }\r\n    for(var agentCount=0; agentCount<maxAgents; agentCount++){\r\n      agents.push({\r\n          capacity:[getItineraryRequest.busCapacities[agentCount]],\r\n          name: 'Bus_'+(agentCount+1),\r\n          shifts: [\r\n            {\r\n              startTime: startTime,\r\n              endTime: endTime,\r\n              endLocation: {\r\n                latitude: getItineraryRequest.endLocation.Lat,\r\n                longitude: getItineraryRequest.endLocation.Long\r\n              },\r\n              startLocation: {\r\n                latitude: getItineraryRequest.startLocation.Lat,\r\n                longitude: getItineraryRequest.startLocation.Long\r\n              }\r\n            }\r\n          ]\r\n        });\r\n    }\r\n    \r\n   /* var result = await request.post(\"https://dev.virtualearth.net/REST/V1/Routes/OptimizeItinerary?key=\"+this.key, {\r\n      resolveWithFullResponse: false,\r\n      json: new ItineraryRequest(agents, itineraryItems)\r\n    });*/\r\n    var release = await this.semaphore.acquire();\r\n     var result = await request.post(\"https://dev.virtualearth.net/REST/V1/Routes/OptimizeItineraryAsync?key=\"+this.key, {\r\n      resolveWithFullResponse: false,\r\n      json: new ItineraryRequest(agents, itineraryItems)\r\n    });\r\n    var itineraryResponse = (<IItinineraryResponse>result);\r\n     console.log(JSON.stringify(itineraryResponse));\r\n    \r\n    var callbackUrl = itineraryResponse.resourceSets[0].resources[0].callbackUrl;\r\n    var callbackTimeout = itineraryResponse.resourceSets[0].resources[0].callbackInSeconds;\r\n    if(callbackUrl){\r\n    let promiseGetResponse = new Promise<IItinineraryResponse>((resolve, reject) => {\r\n    let wait;\r\n    var onTimeout =async () => {\r\n    console.log('invoking callback url');\r\n    \r\n      result = await request.get(callbackUrl);\r\n      itineraryResponse = (<IItinineraryResponse>JSON.parse(result));\r\n     callbackUrl = itineraryResponse.resourceSets[0].resources[0].callbackUrl;\r\n      console.log(JSON.stringify(itineraryResponse));\r\n      if(!callbackUrl)\r\n        {\r\n          clearTimeout(wait);\r\n          resolve(itineraryResponse);\r\n        }\r\n        else{\r\n          wait = setTimeout(onTimeout, callbackTimeout*1000);\r\n        }\r\n    };\r\n    wait = setTimeout(onTimeout, callbackTimeout*1000);\r\n    });\r\n     return promiseGetResponse.then(i=> {\r\n       return new ItinineraryResponse((<IItinineraryResponse>JSON.parse(result)).resourceSets, getItineraryRequest.endLocationName);\r\n     }).finally(()=> release());\r\n    }\r\n   release();\r\n    return new ItinineraryResponse((<IItinineraryResponse>result).resourceSets, getItineraryRequest.endLocationName);\r\n  }\r\n}\r\n","import * as Enumerable from 'linq';\r\nimport { IItineraryService, ItinerariesRequest, ItinerariesResponse, IItinineraryResponse } from \"./itinerary\";\r\nimport { ISearchParam, ISearchResult } from '../Controls/enterLocationControl';\r\nexport interface IItineraryCollectionService{\r\n  getItineraries(getItinerariesRequest: ItinerariesRequest): Promise<ItinerariesResponse>;\r\n} \r\nexport class ItineraryCollectionService implements IItineraryCollectionService{\r\n  constructor(private itinerary: IItineraryService) {\r\n  }\r\n   addExtraStops(getItinerariesRequest:ItinerariesRequest){\r\n      let additionalStops = new Array<ISearchParam>();\r\n      let minBusCapacity = Enumerable.from(getItinerariesRequest.busCapacities).min();\r\n      for(let searchResult of getItinerariesRequest.searchResults){\r\n        if(searchResult.Riders!>minBusCapacity){\r\n          let riders = searchResult.Riders!;\r\n          let numAdditionalStops = Math.floor(riders/minBusCapacity);\r\n          let leftOver = riders%minBusCapacity;\r\n          if(leftOver==0){\r\n            numAdditionalStops--;\r\n          }\r\n          searchResult.Riders = minBusCapacity;\r\n          let additionalStop = {...searchResult};\r\n          for(let addStops = 1; addStops<=numAdditionalStops; addStops++){\r\n            additionalStops.push({...additionalStop});\r\n          }\r\n          if(leftOver!=0){\r\n            additionalStops[additionalStops.length-1].Riders = leftOver;\r\n          }\r\n        }\r\n      }\r\n      additionalStops.forEach(i=> getItinerariesRequest.searchResults.push(i));\r\n   }\r\n  async getItineraries(getItinerariesRequest: ItinerariesRequest): Promise<ItinerariesResponse> {\r\n    this.addExtraStops(getItinerariesRequest);\r\n    let response = new Array<Promise<IItinineraryResponse>>();\r\n    for(var numAgents = 1; numAgents<= getItinerariesRequest.busCapacities.length; numAgents++){\r\n    for (let result of Enumerable.from(getItinerariesRequest.searchResults).where(i=>i.Riders!>0)) {\r\n      let startDate =new Date(2019,11,17,10,0);\r\n      let endDate =new Date(2019,11,18,22,0);\r\n      \r\n      let itinerary = this.itinerary.getItinerary({numAgents:numAgents,endLocationName:getItinerariesRequest.endLocationName,\r\n        startLocation: result.Coords!, searchParams: getItinerariesRequest.searchResults,\r\n        dwellTime: getItinerariesRequest.dwellTime, endLocation: getItinerariesRequest.endLocation,\r\n        startTime:result.StartTime, endTime:result.EndTime, busCapacities:getItinerariesRequest.busCapacities\r\n      });\r\n      response.push(itinerary);\r\n    }\r\n    }\r\n    let responses = new Array<IItinineraryResponse>();\r\n    await Promise.all(response.map(m=>m.then(r=>responses.push(r))));\r\n    let keys = new Set<string>();\r\n    let responsesFiltered = new Array<IItinineraryResponse>();\r\n    for(let response of responses){\r\n      let key = response.condensedInstructionSet.durationMinutes+'_'+response.condensedInstructionSet.totalMiles+'_'+response.condensedInstructionSet.condensedInstructions.length;\r\n      if(!keys.has(key)){\r\n        responsesFiltered.push(response);\r\n        keys.add(key);\r\n      }\r\n    }\r\n    \r\n    let returnedValue = {\r\n      itineraries: Enumerable.from(responsesFiltered).\r\n        where(i=>i.instructionSets!==undefined)\r\n        .orderByDescending(i=>i.instructionSets.length)\r\n        .thenBy(i=>i.instructionSets.length>0 ? Enumerable.from( i.instructionSets).max(m=>m.durationMinutes): 0).select(i=>i).toArray()\r\n  };\r\n  return returnedValue;\r\n}\r\n}\r\n","import * as React from \"react\";\r\nimport * as dateMath from \"date-arithmetic\";\r\nimport { ItinerariesResponse } from \"../Services/itinerary\";\r\nimport { InstructionSummaryControl } from \"./instructionSummaryControl\";\r\n\r\ninterface ItinerariesControlState {\r\n    Arrivaltime: Date;\r\n}\r\n\r\nexport interface ItinerariesControlProps {\r\n    ItinerariesResponse?: ItinerariesResponse;\r\n}\r\n\r\nexport class ItinerariesControl extends React.Component<ItinerariesControlProps, ItinerariesControlState> {\r\n    constructor(props) {\r\n        super(props);\r\n        const endOfToday = dateMath.endOf(new Date(), \"day\");\r\n        const ninePm = dateMath.add(endOfToday, 20, \"hours\");\r\n        const subtractDay = dateMath.add(ninePm, -1, \"day\");\r\n        this.state = { Arrivaltime: dateMath.add(subtractDay, 1, \"minutes\") };\r\n        this.handleArrivalTimeChanged = this.handleArrivalTimeChanged.bind(this);\r\n    }\r\n\r\n    handleArrivalTimeChanged(date: Date) {\r\n        this.setState({ Arrivaltime: date });\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.ItinerariesResponse)\r\n            return <div/>;\r\n        let responseList: Object;\r\n        const instructionList = this.props.ItinerariesResponse.itineraries.map(m =>\r\n            <li>\r\n                <InstructionSummaryControl condensedInstructionSet={m.condensedInstructionSet}/>\r\n            </li>);\r\n        responseList = <ol>{instructionList}</ol>;\r\n        return <div>\r\n                   <h1>Itineraries:</h1>\r\n                   <ol>{responseList}</ol>\r\n               </div>;\r\n    }\r\n}","import * as React from \"react\";\r\nimport * as NumericInput from \"react-numeric-input\";\r\nimport update from 'immutability-helper';\r\nimport { Guid } from 'guid-typescript';\r\nexport interface IBusCapacityControlProps{\r\n    handleBusCapacityChanged:(capacities:Array<CapacityKey>)=>void;\r\n    maxBuses?:number;\r\n}\r\nexport interface CapacityKey{\r\n    capacity:number;\r\n    key:string;\r\n    index:number;\r\n}\r\nexport interface IBusCapacityControlState{\r\n    capacities:Array<CapacityKey>;\r\n}\r\nexport class BusCapacityControl extends React.Component<IBusCapacityControlProps, IBusCapacityControlState>{\r\n    constructor(props:IBusCapacityControlProps){\r\n        super(props);\r\n        this.handleBusCapacityChanged = this.handleBusCapacityChanged.bind(this);\r\n        this.handleAddBus = this.handleAddBus.bind(this);\r\n        this.handleDeleteBus = this.handleDeleteBus.bind(this);\r\n        let state ={capacities:new Array()};\r\n        state.capacities.push({capacity:50, key:Guid.create().toString(), index:0});\r\n        this.state = state;\r\n    }\r\n    componentDidMount(){\r\n        this.props.handleBusCapacityChanged(this.state.capacities);\r\n    }\r\n    handleBusCapacityChanged(e, index, key){\r\n        var state = this.state;\r\n        state = update(state, {capacities:{[index]:{$set:{capacity: e, index:index, key:key}}}});\r\n        this.setState(state, ()=>this.props.handleBusCapacityChanged(this.state.capacities));\r\n    }\r\n    handleAddBus(){\r\n        var state = this.state;\r\n        state = update(state, {capacities:{$push:[{capacity:50, key:Guid.create.toString(), index:this.state.capacities.length}]}});\r\n        this.setState(state, ()=>this.props.handleBusCapacityChanged(this.state.capacities));\r\n    }\r\n    handleDeleteBus(){\r\n        var state = this.state;\r\n        state = update(state, {capacities:{$splice:[[this.state.capacities.length-1]]}});\r\n        this.setState(state, ()=>this.props.handleBusCapacityChanged(this.state.capacities));\r\n    }\r\n    render(){\r\n        let numericInputs = this.state.capacities.map(i=> {\r\n           return <div>Bus# {i.index+1}<NumericInput value={i.capacity} key={i.key} onChange={(e)=> this.handleBusCapacityChanged(e, i.index, i.key)} max={100} min={1}/></div> \r\n        });\r\n        return    (<div><div>Enter bus capacity:</div>\r\n        {numericInputs}\r\n        <input type=\"submit\" value=\"Add bus\" onClick={this.handleAddBus} disabled={this.state.capacities.length>=this.props.maxBuses!}/>\r\n        <input type=\"submit\" value=\"Delete bus\" onClick={this.handleDeleteBus} disabled={this.state.capacities.length==1}/>\r\n   </div>);\r\n  \r\n    } \r\n    static defaultProps = {\r\n        maxBuses:10\r\n    } \r\n}\r\n","\r\nimport * as request from \"request-promise\";\r\nexport interface LatLng{\r\n    Lat:number;\r\n    Long:number;\r\n}\r\nexport interface city{\r\n    CityStateAbbr:string;\r\n}\r\nexport interface schedule{\r\n    OriginCity:city;\r\n    OriginDepartureLocation:string;\r\n    DestinationCity:city;\r\n    DestinationArrivalTime:string;\r\n}\r\nexport interface state{\r\n    RidersBookedOnTrip:number;\r\n}\r\nexport interface rallyTrip{\r\n    DerivedPickupLatLng:LatLng;\r\n    State:state;\r\n    Schedule:schedule;\r\n}\r\nexport class rallyService{\r\n    public async getTrips(eventId:string):Promise<rallyTrip[]>{\r\n        let result = await request.get(`https://rally-booking-preprod.azurewebsites.net/api/v1/booking-get-trips/${eventId}`);\r\n        return (<rallyTrip[]>JSON.parse(result));\r\n    }\r\n}","import * as React from \"react\";\r\nimport {rallyService, rallyTrip} from '../Services/rallyService';\r\nexport interface rallyEventControlState{\r\n    eventId:string;\r\n}\r\nexport interface rallyEventControlProps{\r\n    rallyTripReceived:(rallyTrips:rallyTrip[])=>void;\r\n}\r\nvar rallySvc = new rallyService();\r\nexport class RallyEventControl extends React.Component<rallyEventControlProps,rallyEventControlState>{\r\n    constructor(props){\r\n        super(props);\r\n        this.handleEventIdChanged = this.handleEventIdChanged.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.state = {eventId:''};\r\n    }\r\n    handleEventIdChanged(e){\r\n        this.setState({eventId: e.target.value});\r\n    }\r\n    handleSubmit(){\r\n        rallySvc.getTrips(this.state.eventId).then((trip)=> this.props.rallyTripReceived(trip));\r\n    }\r\n    render(){\r\n        return <div>\r\n            <label>Enter Rally Event Id:</label><input value={this.state.eventId} onChange={this.handleEventIdChanged} /><button onClick={this.handleSubmit}>Submit</button>\r\n        </div>\r\n    }\r\n}","import * as React from \"react\";\r\nimport * as NumericInput from \"react-numeric-input\";\r\nimport { LocationRiderCollectionControl } from \"./locationRiderCollectionControl\";\r\nimport { ISearchResult, ISearchParam, SearchParam } from \"./enterLocationControl\";\r\nimport { IItinineraryResponse, instructionSet, IItineraryService, ItinerariesResponse } from \"../Services/itinerary\";\r\nimport { EnterLocationControl } from \"./enterLocationControl\";\r\nimport { ItineraryInstructionsControl } from \"./itineraryInstructionsControl\";\r\nimport { InstructionSummaryControl } from \"./instructionSummaryControl\";\r\nimport { ItineraryService } from \"../Services/ItineraryService\";\r\nimport { ItineraryCollectionService } from \"../Services/ItineraryCollectionService\";\r\nimport DateTimePicker from \"react-datetime-picker\";\r\nimport * as dateMath from 'date-arithmetic';\r\nimport { ItinerariesControl } from \"./itinerariesControl\";\r\nimport { ILocationRider } from \"./locationRiderControl\";\r\nimport Enumerable from \"linq\";\r\nimport { BusCapacityControl, CapacityKey } from \"./BusCapacityControl\";\r\nimport { RallyEventControl } from \"./RallyEventControl\";\r\nimport { rallyTrip } from \"../Services/rallyService\";\r\ninterface IDisplayItinerariesState {\r\n  SearchResults?: ISearchParam[];\r\n  Destination?: ISearchResult;\r\n  ItineraryResponse?: IItinineraryResponse;\r\n  ItinerariesResponse?:ItinerariesResponse; \r\n  DwellTime?: number;\r\n  Arrivaltime:Date;\r\n  /*MinBuses:number;\r\n  MaxBuses:number;\r\n  BusCapacity:number,\r\n  */Loading:boolean,\r\n  CanSubmit:boolean,\r\n  BusCapacities?:Array<CapacityKey>,\r\n  RallyLocationRiders?:ILocationRider[];\r\n  SearchCount:number;\r\n}\r\nexport interface visibility{\r\n  visibility:'visible'|'hidden';\r\n}\r\nexport function boolVis(isVisible:boolean):visibility{\r\n  \r\n  return {visibility: isVisible ? 'visible':'hidden'}\r\n}\r\nexport class LandingPageControl extends React.Component<\r\n  {},\r\n  IDisplayItinerariesState\r\n> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.itinerary = new ItineraryService();\r\n    this.itineraryCollection = new ItineraryCollectionService(this.itinerary);\r\n    this.handleDestinationChanged = this.handleDestinationChanged.bind(this);\r\n\r\n    this.state = { DwellTime: 15, Arrivaltime: this.initializeArrivalTime(), Loading:false,CanSubmit:false, Destination:{\r\n      SearchQuery:'',\r\n    }, SearchCount:0};\r\n    this.handleDwellTimeChanged = this.handleDwellTimeChanged.bind(this);\r\n    //this.handleSingleItinerarySearch = this.handleSingleItinerarySearch.bind(this);\r\n    this.handleMultipleItinerarySearch = this.handleMultipleItinerarySearch.bind(this);\r\n    this.handleSearchItineraries = this.handleSearchItineraries.bind(this);\r\n    this.handleReadjustForArrival = this.handleReadjustForArrival.bind(this);\r\n    this.handleArrivalTimeChanged = this.handleArrivalTimeChanged.bind(this);\r\n    this.handleBusCapacitiesChanged = this.handleBusCapacitiesChanged.bind(this);\r\n    this.handleRallyTripsRecieved = this.handleRallyTripsRecieved.bind(this);\r\n  }\r\n  \r\n  initializeArrivalTime(){\r\n    let endOfToday = dateMath.endOf(new Date(),'day');\r\n    let ninePm = dateMath.add(endOfToday, 20, \"hours\");\r\n    let subtractDay = dateMath.add(ninePm, -1, \"day\");\r\n    return dateMath.add(subtractDay, 1, \"minutes\");\r\n  }\r\n  handleRallyTripsRecieved(rallyTrips:rallyTrip[]){\r\n    this.setState({Arrivaltime:new Date(rallyTrips[0].Schedule.DestinationArrivalTime), \r\n      Destination:{\r\n        SearchQuery:rallyTrips[0].Schedule.DestinationCity.CityStateAbbr,\r\n        SearchResult:rallyTrips[0].Schedule.DestinationCity.CityStateAbbr,\r\n        Coords:{Lat:25.927490234375,Long:-80.2232437133789}\r\n      },\r\n      SearchCount:this.state.SearchCount+1,\r\n      CanSubmit:Enumerable.from(rallyTrips).any(i=>i.State.RidersBookedOnTrip>0),\r\n    RallyLocationRiders:Enumerable.from(rallyTrips).select(i=> \r\n      { return {SearchResult:i.Schedule.OriginDepartureLocation ?i.Schedule.OriginDepartureLocation: i.Schedule.OriginCity.CityStateAbbr, NumRiders:i.State.RidersBookedOnTrip, Coords:{Lat:i.DerivedPickupLatLng.Lat, Long:i.DerivedPickupLatLng.Long}}}).toArray()});\r\n  }\r\n  itineraryCollection: ItineraryCollectionService;\r\n  itinerary: IItineraryService;\r\n  render() {\r\n    let responseList;\r\n    if (\r\n      this.state &&\r\n      this.state.ItinerariesResponse\r\n    ){\r\n      //TODO:Break this out into it's own control\r\n      let instructionList  = this.state.ItinerariesResponse.itineraries.map(m=>\r\n     <li><InstructionSummaryControl condensedInstructionSet = {m.condensedInstructionSet}/></li>);\r\n      responseList = <ol>{instructionList}</ol>;\r\n    }\r\n    return (<div>\r\n      <RallyEventControl rallyTripReceived={this.handleRallyTripsRecieved}/>\r\n        <div>\r\n          Enter destination:\r\n          <div>\r\n          <EnterLocationControl key=\"Destination\"\r\n            SearchResult={this.state.Destination!}\r\n            searchResultsChanged={this.handleDestinationChanged}\r\n          /></div>\r\n        </div>\r\n        <div>\r\n          Enter dwell time:\r\n          <br />\r\n          <NumericInput\r\n            value={this.state.DwellTime} max={120}\r\n            onChange={this.handleDwellTimeChanged}\r\n          />\r\n        </div>\r\n         Enter arrival time:\r\n    <br />\r\n    <DateTimePicker\r\n      value={this.state.Arrivaltime}\r\n      onChange={this.handleArrivalTimeChanged}\r\n    />\r\n    <BusCapacityControl handleBusCapacityChanged={this.handleBusCapacitiesChanged} />\r\n        <LocationRiderCollectionControl CollectionKey={'Landing_'+ this.state.SearchCount+'_'} handleLocationRidersChanged={(e)=>this.handleLocationRidersChanged(e)}\r\n        LocationRiders={this.state.RallyLocationRiders}/>\r\n        <button  onClick={()=>this.handleSearchItineraries()} disabled={!this.state.CanSubmit}>Search</button>\r\n       <div style={{visibility: this.state.Loading ? 'visible': 'hidden'}}>Loading...</div>\r\n       <ItinerariesControl ItinerariesResponse={this.state.ItinerariesResponse}/>\r\n      </div>\r\n    )\r\n  }\r\n  handleBusCapacitiesChanged(e){\r\n    this.setState({BusCapacities:e});\r\n  }\r\n  \r\n  handleLocationRidersChanged(locationRiders:ILocationRider[]){\r\n   var result = Enumerable.from(locationRiders).select((val)=>new SearchParam(val.SearchResult!, val.NumRiders!, val.Coords!)).toArray();\r\n   this.setState({SearchResults:result});\r\n   if(this.state.Destination){\r\n     this.setState({CanSubmit: true});\r\n   }\r\n  }\r\n\r\n  handleArrivalTimeChanged(date:Date){\r\n    this.setState({Arrivaltime:date});\r\n  }\r\n\r\n  searchResultHashmap={};\r\n  handleReadjustForArrival(date:Date){\r\n    var searchResultHashmap = this.searchResultHashmap;\r\n    var research = false;\r\n    this.state.SearchResults!.forEach(i=>{\r\n      let existingDuration = searchResultHashmap[i.SearchResult!];\r\n      if(existingDuration){\r\n        research = true;\r\n      }\r\n      let duration:number = existingDuration;\r\n      \r\n     // duration+=2;\r\n      let startTime = dateMath.add(date, -duration, \"minutes\");\r\n      i.StartTime = startTime;\r\n      i.EndTime = dateMath.add(startTime, 1, \"day\");\r\n    });\r\n    if(research)\r\n    {\r\n      this.handleSearchItineraries(true);\r\n    }\r\n  }\r\n  handleReadjustForArrivalBySubtractDuration(date:Date){\r\n    console.log('Readjusting for arrival date:'+date.toString());\r\n    var response = this.state.ItinerariesResponse!\r\n    response.itineraries.forEach(it=>{\r\n      it.readjustForArrival(date);\r\n    });\r\n    this.setState({ItinerariesResponse:undefined}, ()=>this.setState({ItinerariesResponse:response}));\r\n  }\r\n  /*\r\n  handleSingleItinerarySearch(searchResults:ISearchResult[]){\r\n    this.itinerary\r\n              .getItinerary({\r\n                dwellTime: this.state.DwellTime!,\r\n                searchParams: searchResults,\r\n                startLocation: searchResults[0].Coords!,\r\n                endLocation: this.state.Destination!.Coords!\r\n              })\r\n              .then((i: IItinineraryResponse) => {\r\n                this.setState({ ItineraryResponse: i });\r\n                i.instructionSets.forEach(is=>{\r\n                  this.searchResultHashmap[is.startingPoint] = is.durationMinutes;\r\n                });\r\n              });\r\n            }*/\r\n  handleMultipleItinerarySearch(searchResults:ISearchResult[]){\r\n    this.setState({SearchResults:searchResults});\r\n  }\r\n  handleSearchItineraries(skipReadjust:boolean=false){\r\n    this.setState({Loading:true});\r\n    this.itineraryCollection.getItineraries({\r\n      dwellTime: this.state.DwellTime!,\r\n      searchResults: this.state.SearchResults!,\r\n      endLocation: this.state.Destination!.Coords!,\r\n      endLocationName:this.state.Destination!.SearchResult!,\r\n      busCapacities:Enumerable.from(this.state.BusCapacities!).select(i=>i.capacity).toArray()\r\n    }) \r\n    .then((i: ItinerariesResponse) => {\r\n      this.setState({ ItinerariesResponse: i });\r\n      i.itineraries.forEach(it=>{it.instructionSets.forEach(is=>{\r\n        this.searchResultHashmap[is.startingPoint] = is.durationMinutes;\r\n      });});\r\n    }).then(()=>{\r\n      if(!skipReadjust)\r\n        this.handleReadjustForArrivalBySubtractDuration(this.state.Arrivaltime);\r\n    }).finally(()=>this.setState({Loading:false}));\r\n  }\r\n  handleDestinationChanged(e: ISearchResult) {\r\n    console.log(\"handle destination changed:\" + JSON.stringify(e));\r\n    this.setState({ Destination: e, SearchCount:this.state.SearchCount+1 });\r\n  }\r\n  handleDwellTimeChanged(event) {\r\n    this.setState({ DwellTime: event.target.value });\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { render } from \"react-dom\";\r\n//import { SearchControl } from \"./searchControl\";\r\nimport { LocationRiderCollectionControl } from \"./Controls/locationRiderCollectionControl\";\r\nimport { MapsControl } from \"./mapsContol\";\r\nimport { ISearchResult } from \"./Controls/enterLocationControl\";\r\nimport { LandingPageControl } from \"./Controls/LandingPageControl\";\r\n\r\nfunction App() {\r\n  return (\r\n    \r\n    <div className=\"App\">\r\n      <h1>Hello CodeSandbox Test</h1>\r\n      <h2>Enter locations</h2>\r\n      \r\n    <LandingPageControl/>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nrender(<App />, rootElement);\r\n"],"sourceRoot":""}