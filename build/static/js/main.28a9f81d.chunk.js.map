{"version":3,"sources":["Controls/enterLocationControl.tsx","Controls/locationRiderControl.tsx","Controls/locationRiderCollectionControl.tsx","Controls/itineraryInstructionsControl.tsx","Controls/instructionSummaryControl.tsx","Services/itinerary.ts","Services/ItineraryService.ts","Services/ItineraryCollectionService.ts","Controls/itinerariesControl.tsx","Controls/LandingPageControl.tsx","index.tsx"],"names":["_callee","query","rest","response","regenerator_default","a","wrap","_context","prev","next","console","log","rm","get","sent","abrupt","result","resourceSets","resources","stop","SearchParam","SearchResult","Riders","Coords","StartTime","EndTime","Object","classCallCheck","this","EnterLocationControl","_React$Component","props","_this","possibleConstructorReturn","getPrototypeOf","call","inputElement","handleKeyDown","event","key","preventDefault","stopPropagation","blur","state","SearchQuery","setState","SearchResultVisible","handleSearchChanged","bind","assertThisInitialized","handleSearchBlur","searchResult","coords","Lat","Long","inherits","createClass","value","focus","_this2","LastQuery","target","getBingMapsResponse","then","i","JSON","stringify","undefined","name","point","coordinates","noticedChange","Submitted","searchResultsChanged","_this3","react","type","readOnly","onChange","onBlur","onKeyDown","ref","input","React","LocationRiderControl","handleRidersChanged","handleAddLocationClicked","handleSearchResultChanged","NumRiders","SubmitEnabled","e","resetSubmitEnabled","submitLocationRider","enterLocationControl_EnterLocationControl","style","display","className","onClick","disabled","LocationRiderCollectionControl","LocationRiders","Array","handleLocationRiderChanged","handleSubmitRider","locationRider","locationRiders","push","handleLocationRidersChanged","items","locationRiderControl_LocationRiderControl","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","err","return","ItineraryInstructionsControl","apply","arguments","instructionRenders","linq","instructions","skip","toArray","map","quantity","agent","location","arrive","leave","instructionType","itineraryItem","startTime","endTime","latitude","longitude","duration","row","durationMinutes","InstructionSummaryControl","objectSpread","collapsed","calculateState","startingPoint","instructionSet","totalHours","Math","floor","totalMinutes","totalDistance","distance","calc","fullSummary","concat","toFixed","Collapsible_default","trigger","itineraryInstructionsControl_ItineraryInstructionsControl","dateDiff","require","dwellTime","openingTime","closingTime","startingTime","agentItinerary","calcdistance","calcMinutes","adjustTimeFormat","sum","length","instruction","replace","Date","minutes","ItinineraryResponse","instructionSets","Enumerable","agentItineraries","where","dt","getTime","date","forEach","lastInstruction","diff","addmin","add_minutes","dateformat","recalculateDuration","ItineraryRequest","agents","itineraryItems","ItineraryService","semaphore","Semaphore","_getItinerary","asyncToGenerator","mark","_callee2","getItineraryRequest","maxAgents","agentCount","release","itineraryResponse","callbackUrl","callbackTimeout","promiseGetResponse","_context2","searchParams","sr","numAgents","capacity","shifts","endLocation","startLocation","acquire","request","resolveWithFullResponse","json","callbackInSeconds","Promise","resolve","reject","wait","onTimeout","_ref","parse","setTimeout","clearTimeout","finally","_x","ItineraryCollectionService","itinerary","_getItineraries","getItinerariesRequest","_itinerary","responses","returnedValue","searchResults","getItinerary","t0","finish","all","m","r","itineraries","orderByDescending","thenBy","max","select","ItinerariesControl","endOfToday","dateMath","ninePm","subtractDay","Arrivaltime","handleArrivalTimeChanged","ItinerariesResponse","responseList","instructionList","is","instructionSummaryControl_InstructionSummaryControl","LandingPageControl","itineraryCollection","searchResultHashmap","handleDestinationChanged","DwellTime","initializeArrivalTime","handleDwellTimeChanged","handleMultipleItinerarySearch","handleSearchItineraries","handleReadjustForArrival","ItineraryResponse","entry_default","locationRiderCollectionControl_LocationRiderCollectionControl","itinerariesControl_ItinerariesControl","from","val","SearchResults","research","existingDuration","toString","it","readjustForArrival","_this4","skipReadjust","getItineraries","Destination","handleReadjustForArrivalBySubtractDuration","rootElement","document","getElementById","render","LandingPageControl_LandingPageControl"],"mappings":"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","file":"static/js/main.28a9f81d.chunk.js","sourcesContent":["import * as rm from \"typed-rest-client/RestClient\";\nimport * as React from \"react\";\nimport \"../styles.css\";\nimport { IBingMapsResponse, IResource } from \"../bing\";\n\nasync function getBingMapsResponse(query: string): Promise<IResource> {\n  console.log(\"running search\");\n  let rest = new rm.RestClient(\"rest-samples\", \"https://dev.virtualearth.net\");\n  let response: rm.IRestResponse<IBingMapsResponse> = await rest.get<\n    IBingMapsResponse\n  >(\n    \"/REST/v1/Locations?q=\" +\n      query +\n      \"&key=ArLJodQ7fEaQ2dfy3lIHWJrJILC35_Qj0EpT8TCy3ls96pl6sqCdlu18bo8j_tbM\"\n  );\n  // console.log(\"the response:\" + JSON.stringify(response));\n  return response.result!.resourceSets[0].resources[0];\n}\n\ninterface IEnterLocationState {\n  SearchQuery?: string;\n  SearchResult: string;\n  SearchResultVisible: boolean;\n  Coords: ILatLong;\n  LastQuery?: string;\n  Submitted?: boolean;\n}\nexport interface ILatLong {\n  Lat: number;\n  Long: number;\n}\nexport interface ISearchResult {\n  SearchResult?: string;\n  SearchQuery?: string;\n  Coords?: ILatLong;\n}\nexport interface ISearchParam extends ISearchResult{\n  EndTime?:Date;\n  StartTime?:Date;\n  Riders?:number;\n}\nexport class SearchParam implements ISearchParam{\n  constructor(public SearchResult:string, public Riders:number, public Coords:ILatLong, public StartTime?:Date, public EndTime?:Date){\n\n  }\n}\nexport interface IEnterLocationControlProps {\n  searchResultsChanged: (arg0: ISearchResult) => void;\n  SearchResult: ISearchResult;\n}\nexport class EnterLocationControl extends React.Component<\n  IEnterLocationControlProps,\n  IEnterLocationState\n> {\n  constructor(props: Readonly<IEnterLocationControlProps>) {\n    super(props);\n    this.handleSearchChanged = this.handleSearchChanged.bind(this);\n    this.handleSearchBlur = this.handleSearchBlur.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    let searchResult = '';\n    let coords = {Lat:0, Long:0};\n    if(props.SearchResult){\n      if(props.SearchResult.SearchResult)\n        searchResult = props.SearchResult.SearchResult;\n      if(props.SearchResult.Coords)\n        coords = props.SearchResult.Coords;\n    }\n    this.state = {\n      SearchResultVisible: false,\n      SearchQuery: props.SearchResult ? props.SearchResult.SearchQuery : \"\",\n      SearchResult: searchResult,\n      Coords: coords\n    };\n    this.inputElement = null;\n  }\n  componentDidMount() {\n    this.inputElement!.focus();\n  }\n  inputElement:HTMLInputElement|null;\n  handleSearchChanged(event) {\n    this.setState({ LastQuery: this.state.SearchQuery });\n    console.log(\"handlesearch changed last query is \" + this.state.LastQuery);\n\n    this.setState({\n      SearchQuery: event.target.value,\n      SearchResultVisible: true\n    });\n    getBingMapsResponse(event.target.value).then(i => {\n\n      console.log(\"last query is \" + this.state.LastQuery);\n      console.log(\"maps Response: \" + JSON.stringify(i));\n      if(i===undefined)\n        return;\n      this.setState({\n        SearchResult: i.name,\n        Coords: { Lat: i.point.coordinates[0], Long: i.point.coordinates[1] }\n      });\n    });\n  }\n  noticedChange(): boolean {\n    console.log(\"last query is \" + this.state.LastQuery);\n    console.log(\"search query is \" + this.state.SearchQuery);\n    console.log(\"search result is \" + this.state.SearchResult);\n    if (this.state.LastQuery !== this.state.SearchQuery) {\n      this.setState({ LastQuery: this.state.SearchQuery });\n\n      console.log(\"noticed change to \" + this.state.LastQuery);\n      return true;\n    } else {\n      console.log(\"noticed no change\");\n      return false;\n    }\n  }\n \n  handleSearchBlur(event){\n    if (!this.noticedChange()) return;\n    let searchResult =\n      this.state.SearchQuery === \"\" ? \"\" : this.state.SearchResult;\n    this.setState({\n      SearchQuery: searchResult,\n      SearchResultVisible: false\n    });\n    this.setState({ LastQuery: searchResult });\n    if (searchResult === \"\") return;\n    this.setState({\n      Submitted: true\n    });\n    this.props.searchResultsChanged({\n      SearchResult: searchResult,\n      Coords: this.state.Coords,\n      SearchQuery: this.state.SearchQuery\n    });\n  }\n  handleKeyDown = (event: React.KeyboardEvent<HTMLDivElement>): void => {\n    // 'keypress' event misbehaves on mobile so we track 'Enter' key via 'keydown' event\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n      event.stopPropagation();\n      this.inputElement!.blur();\n      //this.handleSearchBlur(null);\n    }\n    if (this.state.SearchQuery === \"\") {\n      this.setState({ SearchResultVisible: false });\n    }\n  };\n  render() {\n    let searchResult;\n    if (this.state.SearchResultVisible) {\n      searchResult = (\n        <div>\n        <input type=\"text\" value={this.state.SearchResult} readOnly={true} />\n        <br/>\n        </div>\n        );\n    }\n    return (\n      <span>\n        <input\n          type=\"text\"\n          value={this.state.SearchQuery}\n          onChange={this.handleSearchChanged}\n          onBlur={this.handleSearchBlur}\n          onKeyDown={this.handleKeyDown}\n          readOnly={this.state.Submitted}\n          ref={input => (this.inputElement = input)}\n        />\n        {searchResult}\n        </span>\n    );\n  }\n}\n","import * as React from 'react';\nimport { EnterLocationControl, ISearchParam, ISearchResult, ILatLong } from './enterLocationControl';\nimport { ILocation } from '../bing';\nexport interface ILocationRider {\n    SearchResult?: string;\n    NumRiders?:number;\n    Coords?:ILatLong;\n  }\n  export interface ILocationRiderControlState extends ILocationRider{\n    SubmitEnabled:boolean;\n    Submitted:boolean;\n  }\n  export interface ILocationRiderControlProps {\n    handleLocationRiderChanged?: (locationRider: ILocationRider) => void;\n    submitLocationRider:(locationRider: ILocationRider)=>void;\n    NumRiders?:number;\n    SearchResult?:string;\n  }\nexport class LocationRiderControl extends React.Component< ILocationRiderControlProps,\nILocationRiderControlState>{\n  constructor(props:Readonly<ILocationRiderControlProps>){\n    super(props);\n    this.handleRidersChanged = this.handleRidersChanged.bind(this);\n    this.handleAddLocationClicked = this.handleAddLocationClicked.bind(this);\n    this.handleSearchResultChanged = this.handleSearchResultChanged.bind(this);\n    this.state = {NumRiders:props.NumRiders, SearchResult:props.SearchResult, SubmitEnabled:false, Submitted:false};\n  }\n  handleRidersChanged(e){\n    this.setState({NumRiders:e.target.value}, this.resetSubmitEnabled);\n  }\n  handleSearchResultChanged(e: ISearchResult) {\n        console.log(\"handleSearchResultsChanged \");\n        this.setState({ SearchResult: e.SearchResult, Coords:e.Coords!}, this.resetSubmitEnabled);\n      }\n  handleAddLocationClicked(){\n      this.props.submitLocationRider(this.state);\n  }\n  resetSubmitEnabled(){\n    if(this.state.NumRiders && this.state.SearchResult){\n      this.setState({SubmitEnabled:true});\n    }\n  }\n    render(){\n        return <table>\n          <td></td>\n          <td></td>\n        <tr>\n         <EnterLocationControl\n          SearchResult={{\n            SearchQuery: \"\",\n            SearchResult: this.state.SearchResult\n          }}\n          searchResultsChanged={this.handleSearchResultChanged}\n        />\n        <div style={{display:\"inline-block\"}}>\n        <label className=\"RidersLabel\"># Riders</label><input className=\"Riders\" value={this.state.NumRiders} onChange={this.handleRidersChanged}/>\n        <button className=\"AddLocation\" onClick={this.handleAddLocationClicked} disabled={!this.state.SubmitEnabled}>Add location</button>\n        </div></tr></table>\n    }\n}","import { EnterLocationControl, ISearchResult, ISearchParam } from \"./enterLocationControl\";\nimport * as React from \"react\";\nimport { LocationRiderControl, ILocationRider } from \"./locationRiderControl\";\n\nexport interface ILocationRiderCollectionControlProps{\nhandleLocationRidersChanged:(locationRiders:ILocationRider[])=>void;\n}\nexport interface ILocationRiderCollectionControlState{\n  LocationRiders:ILocationRider[];\n}\nexport class LocationRiderCollectionControl extends React.Component<ILocationRiderCollectionControlProps, ILocationRiderCollectionControlState> {\n  constructor(props: Readonly<ILocationRiderCollectionControlProps>) {\n    super(props);\n    this.state = { LocationRiders: new Array() };\n    this.handleLocationRiderChanged = this.handleLocationRiderChanged.bind(this);\n    this.handleSubmitRider = this.handleSubmitRider.bind(this);\n  }\n  \n  handleLocationRiderChanged(locationRider: ILocationRider){\n\n  }\nhandleSubmitRider(locationRider: ILocationRider){\n  var locationRiders = this.state.LocationRiders;\n  locationRiders.push(locationRider);\n  this.setState({LocationRiders:locationRiders}, ()=> this.props.handleLocationRidersChanged(this.state.LocationRiders));\n}\n  render() {\n    let blankitem = (\n      <LocationRiderControl\n      submitLocationRider={(e)=>this.handleSubmitRider(e)}\n       handleLocationRiderChanged={this.handleLocationRiderChanged}\n     />\n  );\n    const items = [blankitem];\n    for (let locationRider of this.state.LocationRiders) {\n      items.push(<LocationRiderControl NumRiders={locationRider.NumRiders} SearchResult={locationRider.SearchResult}\n        submitLocationRider={(e)=>this.handleSubmitRider(e)}\n        />);\n    }\n    return <ol>{items}</ol>;\n  }\n}\n","import * as React from \"react\";\nimport { instruction, instructionSet } from \"../Services/itinerary\";\nimport * as linq from \"linq\";\nexport interface InstructionControlProps{\n    instructions:instructionSet\n}\nexport class ItineraryInstructionsControl extends React.Component<InstructionControlProps>{\n    render(){\n      \n        let instructionRenders = linq.from(this.props.instructions.instructions).skip(2).toArray().map(\n            i => {\n              let loc;\n              let place;\n              let endtime;\n              let duration;\n              let quantity;\n              let agent;\n              let type;\n              let location;\n              let arrive;\n              let leave;\n              agent = <td>{this.props.instructions.agent}</td>;\n              type = <td>{i.instructionType}</td>;\n              location = <td>{i.itineraryItem.name}</td>;\n              arrive = <td>{i.startTime}</td>;\n              leave = <td>{i.endTime}</td>;\n              //if(i.instructionType!=\"TravelBetweenLocations\")\n              //    return;\n              if (i.itineraryItem) {\n                loc =\n                  \"Location:(\" +\n                  i.itineraryItem.location.latitude +\n                  \", \" +\n                  i.itineraryItem.location.longitude +\n                  \")\";\n                if (i.itineraryItem.name) {\n                  place = (\n                    <span>\n                      <b>Place:</b>\n                      <label>{i.itineraryItem.name}</label>\n                    </span>\n                  );\n                }\n              }\n              if (i.endTime) {\n                endtime = (\n                  <span>\n                    <b>EndTime:</b> {i.endTime}\n                  </span>\n                );\n              }\n              if (i.duration) {\n                duration = (\n                  <span>\n                    {\" \"}\n                    <b>Duration:</b>\n                    {i.duration}\n                  </span>\n                );\n              }\n              if (i.itineraryItem && i.itineraryItem.quantity &&i.instructionType!='ArriveToEndPoint') {\n                quantity = (\n                  <span>\n                    {\" \"}\n                    <b># Riders:</b>\n                    {i.itineraryItem.quantity[0]}\n                  </span>\n                );\n              }\n              quantity =<td> i.itineraryItem && i.itineraryItem.quantity &&i.instructionType!='ArriveToEndPoint' ? i.itineraryItem.quantity[0] : 0</td>;\n              let row = <tr>{agent}{type}{location}{arrive}{leave}{quantity}</tr>;\n              return {row};\n            }\n          );\n        return <div>Total time:{this.props.instructions.durationMinutes} minutes Agent:{this.props.instructions.agent.name}\n    <table>\n    <tr>\n    <th>Agent</th>\n    <th>Type</th>\n    <th>Location</th>\n    <th>Arrive</th>\n    <th>Leave</th>\n    <th># Passengers</th>\n  </tr>\n    {instructionRenders}\n    </table>\n    </div>\n    }\n}","import * as React from 'react';\nimport { instructionSet } from '../Services/itinerary';\nimport { totalmem } from 'os';\nimport { ItineraryInstructionsControl } from './itineraryInstructionsControl';\nimport Collapsible from 'react-collapsible';\nexport interface IInstructionSummaryControlProps{\n    instructionSet:instructionSet;\n}\nexport interface IInstructionSummaryControlState{\n    collapsed?:boolean;\n    totalHours:number;\n    totalMinutes:number;\n    totalDistance:number;\n    startingPoint:string;\n}\nexport class InstructionSummaryControl extends React.Component<IInstructionSummaryControlProps, IInstructionSummaryControlState>{\n    constructor(props){\n        super(props);\n        let collapsed ={collapsed:true};\n \n        this.state = {...collapsed, ...this.calculateState(), startingPoint:this.props.instructionSet.instructions[2].itineraryItem.name};\n    }\n    calculateState(){\n        let calc = {totalHours:Math.floor(this.props.instructionSet.durationMinutes/60), \n            totalMinutes:this.props.instructionSet.durationMinutes%60, totalDistance:this.props.instructionSet.distance};\n        return calc;\n    }\n    componentDidUpdate(){\n        let calc = this.calculateState();\n            if(this.state.totalDistance!=calc.totalDistance || this.state.totalHours!=calc.totalHours || this.state.totalMinutes!=calc.totalMinutes){\n                this.setState(calc);        \n            }\n        }\n    render(){\n        let fullSummary = `Total Time:${this.state.totalHours} hrs ${this.state.totalMinutes.toFixed()} min Total Distance:${this.props.instructionSet.distance.toFixed(1)} mi Starting Point:${this.props.instructionSet.instructions[2].itineraryItem.name}`;\n        return <Collapsible trigger={fullSummary}>\n            <ItineraryInstructionsControl instructions={this.props.instructionSet}/>\n        </Collapsible>;\n    }\n}","import { ISearchResult, ILatLong, ISearchParam } from \"../Controls/enterLocationControl\";\nimport * as Enumerable from 'linq';\nimport * as addsubtractdate from 'add-subtract-date';\nimport dateformat from 'dateformat';\n\nvar dateDiff = require('date-diff');\nexport interface location {\n  latitude: number;\n  longitude: number;\n}\nexport interface shift {\n  startTime?: string;\n  endTime?: string;\n  startLocation: location;\n  endLocation: location;\n}\nexport interface IitineraryItem {\n  name: string;\n  dwellTime: string;\n  location: location;\n  quantity:Array<number>;\n}\nexport class itineraryItem implements IitineraryItem {\n  constructor(\n    public name: string,\n    public dwellTime: string,\n    public location: location,\n    public quantity:Array<number>,\n    public openingTime?:string,\n    public closingTime?:string,\n    public startingTime?:string,\n    \n  ) {}\n}\nexport interface agent {\n  name: string;\n  capacity:Array<number>;\n  shifts: shift[];\n}\nexport interface IItineraryRequest {\n  agents: agent[];\n  itineraryItems: IitineraryItem[];\n}\nexport interface route {\n  startLocation: Location;\n  endLocatrion: Location;\n  startTime: string;\n  endTime: string;\n  totalTravelDistance: number;\n  totalTravelTime: string;\n  wayPoints: Location[];\n}\nexport interface instruction {\n  instructionType: string;\n  distance: number;\n  itineraryItem: IitineraryItem;\n   startTime: string;\n  endTime: string;\n  duration: string;\n  pickupRiders:number;\n}\nexport class instructionSet{\n  constructor(agentItinerary:agentItinerary){\n    this.instructions = agentItinerary.instructions;\n    this.agent = agentItinerary.agent;\n    this.distance = this.calcdistance();\n    this.durationMinutes = this.calcMinutes();\n     this.instructions.map(i=> this.adjustTimeFormat(i));\n  }\n  agent:agent;\n  instructions:instruction[];\n  get startingPoint():string{\n    return this.instructions[2].itineraryItem.name;\n  }\n  distance:number;\n  durationMinutes:number;\n  private calcdistance(){\n    let sum =0;\n    for(let i = 0; i<this.instructions.length;i++){\n      if(this.instructions[i].distance)\n        {\n          sum+=this.instructions[i].distance;\n        }\n    }\n    return sum*0.000621371;\n  }\n  private adjustTimeFormat(instruction:instruction){\n    instruction.startTime = instruction.startTime.replace('P', 'T').replace('A','T');\n  }\n  private calcMinutes(){\n   let diff = new dateDiff(new Date(this.instructions[this.instructions.length-1].startTime), new Date(this.instructions[0].startTime));\n    return diff.minutes();\n  }\n  recalculateDuration(){\n  this.instructions.map(i=> this.adjustTimeFormat(i));\n   this.durationMinutes = this.calcMinutes();\n  }\n}\nexport interface agentItinerary {\n  agent: agent;\n  instructions: instruction[];\n}\nexport interface resource {\n  agentItineraries: agentItinerary[];\n  callbackUrl:string;\n  callbackInSeconds:number;\n}\nexport interface resourceSet {\n  resources: resource[];\n}\nexport interface IItinineraryResponse {\n  resourceSets: resourceSet[];\n  instructionSets:instructionSet[];\n  readjustForArrival(date:Date);\n}\nexport class ItinineraryResponse implements IItinineraryResponse{\n  public instructionSets:instructionSet[];\n  constructor(public resourceSets: resourceSet[]){\n    this.instructionSets = Enumerable.from(this.resourceSets[0].resources[0].agentItineraries).where(i=>i.instructions.length>3).toArray().map(i=> new instructionSet(i));\n  }\n   add_minutes(dt:Date, minutes:number):Date {\n    return new Date(dt.getTime() + minutes*60000);\n  }\n  readjustForArrival(date:Date){\n    this.instructionSets.forEach(instructionSet=>{\n      console.log(\"Readjusting for instruction set:\"+JSON.stringify(instructionSet));\n    \n    let lastInstruction = instructionSet.instructions[instructionSet.instructions.length-1]; \n    var endTime =new Date(lastInstruction.startTime);\n    console.log(\"Readjusting for end time: \"+endTime);\n    console.log(\"dateDiff:\"+dateDiff);\n    let diff:number =  new dateDiff(date, endTime).minutes()+1;\n    console.log(`Got difference between '${date}' and ${lastInstruction.startTime} as ${diff}`);\n    \n    instructionSet.instructions.forEach(instruction=>{\n       console.log(`Changing start time for instruction '${instruction.startTime}'`);\n   \n      let date = new Date(instruction.startTime);\n        console.log(`Changing start time for instruction date:'${date}'`);\n      let addmin = this.add_minutes(date, diff);\n      console.log(`Added '${diff}' minutes to ${date}:${addmin}`);\n      instruction.startTime = dateformat(addmin, 'yyyy-mm-ddThh:MM:ss');\n      \n      if(instruction.endTime){\n        date = new Date(instruction.endTime);\n        addmin = this.add_minutes(date, diff);\n       instruction.endTime = dateformat(addmin, 'yyyy-mm-ddThh:MM:ss');\n     }    \n          console.log(`Set startTime to ${instruction.startTime}`);\n    });\n    instructionSet.recalculateDuration();\n  });\n  }\n}\nexport class ItineraryRequest implements IItineraryRequest {\n  constructor(\n    public agents: agent[],\n    public itineraryItems: IitineraryItem[]\n  ) {}\n}\nexport interface getItineraryRequest {\n  searchParams: ISearchParam[];\n  startLocation: ILatLong;\n  endLocation: ILatLong;\n  dwellTime: number;\n  startTime?:Date;\n  endTime?:Date;\n  numAgents:number;\n}\nexport interface IItineraryService{\n  getItinerary(\n    getItineraryRequest: getItineraryRequest\n  ): Promise<IItinineraryResponse>;\n}\nexport interface ItinerariesRequest {\n  searchResults: ISearchParam[];\n  endLocation: ILatLong;\n  dwellTime: number;\n}\nexport interface ItinerariesResponse {\n  itineraries:IItinineraryResponse[];\n}\n","import * as request from \"request-promise\";\nimport dateformat from 'dateformat';\nimport {Semaphore} from 'await-semaphore';\nimport { IItineraryService, getItineraryRequest, IItinineraryResponse, itineraryItem, ItineraryRequest, ItinineraryResponse } from \"./itinerary\";\nexport class ItineraryService implements IItineraryService {\n  semaphore = new Semaphore(7);\n  constructor(private key:string='ArLJodQ7fEaQ2dfy3lIHWJrJILC35_Qj0EpT8TCy3ls96pl6sqCdlu18bo8j_tbM'){\n    \n  }\n  async getItinerary(getItineraryRequest: getItineraryRequest): Promise<IItinineraryResponse> {\n    var itineraryItems = getItineraryRequest.searchParams.map(sr => new itineraryItem(sr.SearchResult!, \"00:\" + getItineraryRequest.dwellTime + \":00\", {\n      latitude: sr.Coords!.Lat,\n      longitude: sr.Coords!.Long, \n    },[sr.Riders!]));\n    /*itineraryItems.push(new itineraryItem('Destination', \"00:15:00\", {\n      latitude: getItineraryRequest.endLocation.Lat,\n      longitude: getItineraryRequest.endLocation.Long\n    }, '2019-11-16T16:00:00', '2019-11-16T18:00:00'));*/\n    console.log(\"Searching for start time:\"+getItineraryRequest.startTime);\n    let startTime = getItineraryRequest.startTime==undefined? \"2019-11-16T08:00:00\" : dateformat(getItineraryRequest.startTime, 'yyyy-mm-ddThh:MM:ss');\n    let endTime = getItineraryRequest.endTime==undefined?\"2019-11-16T18:00:00\" : dateformat(getItineraryRequest.endTime, 'yyyy-mm-ddThh:MM:ss');\n    startTime = startTime.replace('P', 'T').replace('A','T');\n    endTime = endTime.replace('P', 'T').replace('A','T');\n    var agents = new Array();\n    var maxAgents = 3;\n    if(getItineraryRequest.numAgents==1){\n      maxAgents =1;\n    }\n    for(var agentCount=0; agentCount<maxAgents; agentCount++){\n      agents.push({\n          capacity:[50],\n          name: 'Agent_'+agentCount,\n          shifts: [\n            {\n              startTime: startTime,\n              endTime: endTime,\n              endLocation: {\n                latitude: getItineraryRequest.endLocation.Lat,\n                longitude: getItineraryRequest.endLocation.Long\n              },\n              startLocation: {\n                latitude: getItineraryRequest.startLocation.Lat,\n                longitude: getItineraryRequest.startLocation.Long\n              }\n            }\n          ]\n        });\n    }\n    \n   /* var result = await request.post(\"https://dev.virtualearth.net/REST/V1/Routes/OptimizeItinerary?key=\"+this.key, {\n      resolveWithFullResponse: false,\n      json: new ItineraryRequest(agents, itineraryItems)\n    });*/\n    var release = await this.semaphore.acquire();\n     var result = await request.post(\"https://dev.virtualearth.net/REST/V1/Routes/OptimizeItineraryAsync?key=\"+this.key, {\n      resolveWithFullResponse: false,\n      json: new ItineraryRequest(agents, itineraryItems)\n    });\n    var itineraryResponse = (<IItinineraryResponse>result);\n     console.log(JSON.stringify(itineraryResponse));\n    \n    var callbackUrl = itineraryResponse.resourceSets[0].resources[0].callbackUrl;\n    var callbackTimeout = itineraryResponse.resourceSets[0].resources[0].callbackInSeconds;\n    if(callbackUrl){\n    let promiseGetResponse = new Promise<IItinineraryResponse>((resolve, reject) => {\n    let wait;\n    var onTimeout =async () => {\n    console.log('invoking callback url');\n    \n      result = await request.get(callbackUrl);\n      itineraryResponse = (<IItinineraryResponse>JSON.parse(result));\n     callbackUrl = itineraryResponse.resourceSets[0].resources[0].callbackUrl;\n      console.log(JSON.stringify(itineraryResponse));\n      if(!callbackUrl)\n        {\n          clearTimeout(wait);\n          resolve(itineraryResponse);\n        }\n        else{\n          wait = setTimeout(onTimeout, callbackTimeout*1000);\n        }\n    };\n    wait = setTimeout(onTimeout, callbackTimeout*1000);\n    });\n     return promiseGetResponse.then(i=> {\n       return new ItinineraryResponse((<IItinineraryResponse>JSON.parse(result)).resourceSets);\n     }).finally(()=> release());\n    }\n   release();\n    return new ItinineraryResponse((<IItinineraryResponse>result).resourceSets);\n  }\n}\n","import * as Enumerable from 'linq';\nimport { IItineraryService, ItinerariesRequest, ItinerariesResponse, IItinineraryResponse } from \"./itinerary\";\nexport interface IItineraryCollectionService{\n  getItineraries(getItinerariesRequest: ItinerariesRequest): Promise<ItinerariesResponse>;\n} \nexport class ItineraryCollectionService implements IItineraryCollectionService{\n  constructor(private itinerary: IItineraryService) {\n  }\n  async getItineraries(getItinerariesRequest: ItinerariesRequest): Promise<ItinerariesResponse> {\n    let response = new Array<Promise<IItinineraryResponse>>();\n    for(var numAgents = 1; numAgents<= getItinerariesRequest.searchResults.length;numAgents++){\n    for (let result of getItinerariesRequest.searchResults) {\n      let startDate =new Date(2019,11,17,10,0);\n      let endDate =new Date(2019,11,18,22,0);\n      \n      let itinerary = this.itinerary.getItinerary({numAgents:numAgents,\n        startLocation: result.Coords!, searchParams: getItinerariesRequest.searchResults,\n        dwellTime: getItinerariesRequest.dwellTime, endLocation: getItinerariesRequest.endLocation,\n        startTime:result.StartTime, endTime:result.EndTime\n      });\n      response.push(itinerary);\n    }\n    }\n    let responses = new Array<IItinineraryResponse>();\n    await Promise.all(response.map(m=>m.then(r=>responses.push(r))));\n    let returnedValue = {\n      itineraries: Enumerable.from(responses).\n        where(i=>i.instructionSets!==undefined)\n        .orderByDescending(i=>i.instructionSets.length)\n        .thenBy(i=>Enumerable.from( i.instructionSets).max(m=>m.durationMinutes)).select(i=>i).toArray()\n  };\n  return returnedValue;\n}\n}\n","import * as React from \"react\";\nimport DateTimePicker from \"react-datetime-picker\";\nimport * as dateMath from 'date-arithmetic';\nimport {ItinerariesResponse} from '../Services/itinerary';\nimport { InstructionSummaryControl } from \"./instructionSummaryControl\";\ninterface ItinerariesControlState{\n    Arrivaltime:Date;\n}\nexport interface ItinerariesControlProps{\n    ItinerariesResponse?:ItinerariesResponse;\n}\nexport class ItinerariesControl extends React.Component<ItinerariesControlProps,ItinerariesControlState>{\n    constructor(props){\n        super(props);\n        let endOfToday = dateMath.endOf(new Date(),'day');\n        let ninePm = dateMath.add(endOfToday, 20, \"hours\");\n        let subtractDay = dateMath.add(ninePm, -1, \"day\");\n     \n        this.state = {  Arrivaltime: dateMath.add(subtractDay, 1, \"minutes\")};\n        this.handleArrivalTimeChanged = this.handleArrivalTimeChanged.bind(this);\n     }\n    handleArrivalTimeChanged(date:Date){\n        this.setState({Arrivaltime:date});\n      }\nrender(){\n    if(!this.props.ItinerariesResponse)\n        return <div/>\n        let responseList;\n        let instructionList  = this.props.ItinerariesResponse.itineraries.map(m=>\n         <li> {m.instructionSets.map(is=><InstructionSummaryControl instructionSet = {is}/>)}</li>);\n         responseList = <ol>{instructionList}</ol>;\n    return <div>\n        <h1>Itineraries:</h1>\n        <ol>{responseList}</ol>\n  </div>\n}\n}","import * as React from \"react\";\nimport { LocationRiderCollectionControl } from \"./locationRiderCollectionControl\";\nimport { ISearchResult, ISearchParam, SearchParam } from \"./enterLocationControl\";\nimport { IItinineraryResponse, instructionSet, IItineraryService, ItinerariesResponse } from \"../Services/itinerary\";\nimport { EnterLocationControl } from \"./enterLocationControl\";\nimport { ItineraryInstructionsControl } from \"./itineraryInstructionsControl\";\nimport { InstructionSummaryControl } from \"./instructionSummaryControl\";\nimport { ItineraryService } from \"../Services/ItineraryService\";\nimport { ItineraryCollectionService } from \"../Services/ItineraryCollectionService\";\nimport DateTimePicker from \"react-datetime-picker\";\nimport * as dateMath from 'date-arithmetic';\nimport { ItinerariesControl } from \"./itinerariesControl\";\nimport { ILocationRider } from \"./locationRiderControl\";\nimport Enumerable from \"linq\";\ninterface IDisplayItinerariesState {\n  SearchResults?: ISearchParam[];\n  Destination?: ISearchResult;\n  ItineraryResponse?: IItinineraryResponse;\n  ItinerariesResponse?:ItinerariesResponse; \n  DwellTime?: number;\n  Arrivaltime:Date;\n}\nexport class LandingPageControl extends React.Component<\n  {},\n  IDisplayItinerariesState\n> {\n  constructor(props) {\n    super(props);\n    this.itinerary = new ItineraryService();\n    this.itineraryCollection = new ItineraryCollectionService(this.itinerary);\n    this.handleDestinationChanged = this.handleDestinationChanged.bind(this);\n\n    this.state = { DwellTime: 15, Arrivaltime: this.initializeArrivalTime()};\n    this.handleDwellTimeChanged = this.handleDwellTimeChanged.bind(this);\n    //this.handleSingleItinerarySearch = this.handleSingleItinerarySearch.bind(this);\n    this.handleMultipleItinerarySearch = this.handleMultipleItinerarySearch.bind(this);\n    this.handleSearchItineraries = this.handleSearchItineraries.bind(this);\n    this.handleReadjustForArrival = this.handleReadjustForArrival.bind(this);\n    this.handleArrivalTimeChanged = this.handleArrivalTimeChanged.bind(this);\n  }\n  initializeArrivalTime(){\n    let endOfToday = dateMath.endOf(new Date(),'day');\n    let ninePm = dateMath.add(endOfToday, 20, \"hours\");\n    let subtractDay = dateMath.add(ninePm, -1, \"day\");\n    return dateMath.add(subtractDay, 1, \"minutes\");\n  }\n  itineraryCollection: ItineraryCollectionService;\n  itinerary: IItineraryService;\n  render() {\n    let responseList;\n    if (\n      this.state &&\n      this.state.ItineraryResponse &&\n      this.state.ItineraryResponse.resourceSets\n    ){\n      //TODO:Break this out into it's own control\n      responseList  = <InstructionSummaryControl instructionSet=\n        {this.state.ItineraryResponse.instructionSets[0]}/>;\n    }\n    else if (\n      this.state &&\n      this.state.ItinerariesResponse\n    ){\n      //TODO:Break this out into it's own control\n      let instructionList  = this.state.ItinerariesResponse.itineraries.map(m=>\n     <li><InstructionSummaryControl instructionSet = {m.instructionSets[0]}/></li>);\n      responseList = <ol>{instructionList}</ol>;\n    }\n    return (\n      <div>\n        <div>\n          Enter destination:\n          <div>\n          <EnterLocationControl\n            SearchResult={{\n              SearchQuery: \"\",\n              SearchResult: undefined\n            }}\n            searchResultsChanged={this.handleDestinationChanged}\n          /></div>\n        </div>\n        <div>\n          Enter dwell time:\n          <br />\n          <input\n            value={this.state.DwellTime}\n            onChange={this.handleDwellTimeChanged}\n          />\n        </div>\n         Enter arrival time:\n    <br />\n    <DateTimePicker\n      value={this.state.Arrivaltime}\n      onChange={this.handleArrivalTimeChanged}\n    />\n        <LocationRiderCollectionControl handleLocationRidersChanged={(e)=>this.handleLocationRidersChanged(e)}\n        />\n        <button  onClick={()=>this.handleSearchItineraries()}>Search</button>\n       <ItinerariesControl ItinerariesResponse={this.state.ItinerariesResponse}/>\n      </div>\n    );\n  }\n  handleLocationRidersChanged(locationRiders:ILocationRider[]){\n   var result = Enumerable.from(locationRiders).select((val)=>new SearchParam(val.SearchResult!, val.NumRiders!, val.Coords!)).toArray();\n   this.setState({SearchResults:result});\n  }\n  handleArrivalTimeChanged(date:Date){\n    this.setState({Arrivaltime:date});\n  }\n  searchResultHashmap={};\n  handleReadjustForArrival(date:Date){\n    var searchResultHashmap = this.searchResultHashmap;\n    var research = false;\n    this.state.SearchResults!.forEach(i=>{\n      let existingDuration = searchResultHashmap[i.SearchResult!];\n      if(existingDuration){\n        research = true;\n      }\n      let duration:number = existingDuration;\n      \n      duration+=2;\n      let startTime = dateMath.add(date, -duration, \"minutes\");\n      i.StartTime = startTime;\n      i.EndTime = dateMath.add(startTime, 1, \"day\");\n    });\n    if(research)\n    {\n      this.handleSearchItineraries(true);\n    }\n  }\n  handleReadjustForArrivalBySubtractDuration(date:Date){\n    console.log('Readjusting for arrival date:'+date.toString());\n    var response = this.state.ItinerariesResponse!\n    response.itineraries.forEach(it=>{\n      it.readjustForArrival(date);\n    });\n    this.setState({ItinerariesResponse:undefined}, ()=>this.setState({ItinerariesResponse:response}));\n  }\n  /*\n  handleSingleItinerarySearch(searchResults:ISearchResult[]){\n    this.itinerary\n              .getItinerary({\n                dwellTime: this.state.DwellTime!,\n                searchParams: searchResults,\n                startLocation: searchResults[0].Coords!,\n                endLocation: this.state.Destination!.Coords!\n              })\n              .then((i: IItinineraryResponse) => {\n                this.setState({ ItineraryResponse: i });\n                i.instructionSets.forEach(is=>{\n                  this.searchResultHashmap[is.startingPoint] = is.durationMinutes;\n                });\n              });\n            }*/\n  handleMultipleItinerarySearch(searchResults:ISearchResult[]){\n    this.setState({SearchResults:searchResults});\n  }\n  handleSearchItineraries(skipReadjust:boolean=false){\n    this.itineraryCollection.getItineraries({\n      dwellTime: this.state.DwellTime!,\n      searchResults: this.state.SearchResults!,\n      endLocation: this.state.Destination!.Coords!\n    })\n    .then((i: ItinerariesResponse) => {\n      this.setState({ ItinerariesResponse: i });\n      i.itineraries.forEach(it=>{it.instructionSets.forEach(is=>{\n        this.searchResultHashmap[is.startingPoint] = is.durationMinutes;\n      });});\n    }).then(()=>{\n      if(!skipReadjust)\n        this.handleReadjustForArrivalBySubtractDuration(this.state.Arrivaltime);\n    });\n  }\n  handleDestinationChanged(e: ISearchResult) {\n    console.log(\"handle destination changed:\" + JSON.stringify(e));\n    this.setState({ Destination: e });\n  }\n  handleDwellTimeChanged(event) {\n    this.setState({ DwellTime: event.target.value });\n  }\n}\n","import * as React from \"react\";\r\nimport { render } from \"react-dom\";\r\n//import { SearchControl } from \"./searchControl\";\r\nimport { LocationRiderCollectionControl } from \"./Controls/locationRiderCollectionControl\";\r\nimport { MapsControl } from \"./mapsContol\";\r\nimport { ISearchResult } from \"./Controls/enterLocationControl\";\r\nimport { LandingPageControl } from \"./Controls/LandingPageControl\";\r\n\r\nfunction App() {\r\n  return (\r\n    \r\n    <div className=\"App\">\r\n      <h1>Hello CodeSandbox Test</h1>\r\n      <h2>Enter locations</h2>\r\n      \r\n    <LandingPageControl/>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nrender(<App />, rootElement);\r\n"],"sourceRoot":""}